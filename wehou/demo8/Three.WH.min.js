var THREE=THREE||{REVISION:"52"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(c){var b=String(c);var a=this.lastIndexOf(b);return(-1<a&&a)===(this.length-b.length)};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};(function(){var b=0;var c=["ms","moz","webkit","o"];for(var a=0;a<c.length&&!window.requestAnimationFrame;++a){window.requestAnimationFrame=window[c[a]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[c[a]+"CancelAnimationFrame"]||window[c[a]+"CancelRequestAnimationFrame"]}if(window.requestAnimationFrame===undefined){window.requestAnimationFrame=function(h,e){var d=Date.now(),f=Math.max(0,16-(d-b));var g=window.setTimeout(function(){h(d+f)},f);b=d+f;return g}}window.cancelAnimationFrame=window.cancelAnimationFrame||function(d){window.clearTimeout(d)}}());THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=(a!==undefined)?a:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.Clock.prototype.start=function(){this.startTime=Date.now();this.oldTime=this.startTime;this.running=true};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=false};THREE.Clock.prototype.getElapsedTime=function(){this.elapsedTime+=this.getDelta();return this.elapsedTime};THREE.Clock.prototype.getDelta=function(){var b=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var a=Date.now();b=0.001*(a-this.oldTime);this.oldTime=a;this.elapsedTime+=b}return b};THREE.Color=function(a){if(a!==undefined){this.setHex(a)}return this};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var d=this.r,c=this.g,a=this.b;this.r=d*d;this.g=c*c;this.b=a*a;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},setRGB:function(d,c,a){this.r=d;this.g=c;this.b=a;return this},setHSV:function(e,d,a){var c,j,k,g,b;if(a===0){this.r=this.g=this.b=0}else{c=Math.floor(e*6);j=(e*6)-c;k=a*(1-d);g=a*(1-(d*j));b=a*(1-(d*(1-j)));if(c===0){this.r=a;this.g=b;this.b=k}else{if(c===1){this.r=g;this.g=a;this.b=k}else{if(c===2){this.r=k;this.g=a;this.b=b}else{if(c===3){this.r=k;this.g=g;this.b=a}else{if(c===4){this.r=b;this.g=k;this.b=a}else{if(c===5){this.r=a;this.g=k;this.b=g}}}}}}}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return(this.r*255)<<16^(this.g*255)<<8^(this.b*255)<<0},getContextStyle:function(){return"rgb("+((this.r*255)|0)+","+((this.g*255)|0)+","+((this.b*255)|0)+")"},clone:function(){return new THREE.Color().setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){if(a){this.x/=a;this.y/=a}else{this.set(0,0)}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(c){var b=this.x-c.x,a=this.y-c.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y))},isZero:function(a){return this.lengthSq()<(a!==undefined?a:0.0001)},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,c,b){this.x=a||0;this.y=c||0;this.z=b||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,c,b){this.x=a;this.y=c;this.z=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){if(a){this.x/=a;this.y/=a;this.z/=a}else{this.x=0;this.y=0;this.z=0}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(d,c){this.x=d.y*c.z-d.z*c.y;this.y=d.z*c.x-d.x*c.z;this.z=d.x*c.y-d.y*c.x;return this},crossSelf:function(b){var a=this.x,d=this.y,c=this.z;this.x=d*b.z-c*b.y;this.y=c*b.x-a*b.z;this.z=a*b.y-d*b.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return new THREE.Vector3().sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(e,f){function i(m){return Math.min(Math.max(m,-1),1)}var d=e.elements;var j=d[0],h=d[4],g=d[8];var c=d[1],b=d[5],a=d[9];var n=d[2],l=d[6],k=d[10];if(f===undefined||f==="XYZ"){this.y=Math.asin(i(g));if(Math.abs(g)<0.99999){this.x=Math.atan2(-a,k);this.z=Math.atan2(-h,j)}else{this.x=Math.atan2(l,b);this.z=0}}else{if(f==="YXZ"){this.x=Math.asin(-i(a));if(Math.abs(a)<0.99999){this.y=Math.atan2(g,k);this.z=Math.atan2(c,b)}else{this.y=Math.atan2(-n,j);this.z=0}}else{if(f==="ZXY"){this.x=Math.asin(i(l));if(Math.abs(l)<0.99999){this.y=Math.atan2(-n,k);this.z=Math.atan2(-h,b)}else{this.y=0;this.z=Math.atan2(c,j)}}else{if(f==="ZYX"){this.y=Math.asin(-i(n));if(Math.abs(n)<0.99999){this.x=Math.atan2(l,k);this.z=Math.atan2(c,j)}else{this.x=0;this.z=Math.atan2(-h,b)}}else{if(f==="YZX"){this.z=Math.asin(i(c));if(Math.abs(c)<0.99999){this.x=Math.atan2(-a,b);this.y=Math.atan2(-n,j)}else{this.x=0;this.y=Math.atan2(g,k)}}else{if(f==="XZY"){this.z=Math.asin(-i(h));if(Math.abs(h)<0.99999){this.x=Math.atan2(l,b);this.y=Math.atan2(g,j)}else{this.x=Math.atan2(-a,k);this.y=0}}}}}}}return this},setEulerFromQuaternion:function(d,a){function g(h){return Math.min(Math.max(h,-1),1)}var e=d.x*d.x;var c=d.y*d.y;var b=d.z*d.z;var f=d.w*d.w;if(a===undefined||a==="XYZ"){this.x=Math.atan2(2*(d.x*d.w-d.y*d.z),(f-e-c+b));this.y=Math.asin(g(2*(d.x*d.z+d.y*d.w)));this.z=Math.atan2(2*(d.z*d.w-d.x*d.y),(f+e-c-b))}else{if(a==="YXZ"){this.x=Math.asin(g(2*(d.x*d.w-d.y*d.z)));this.y=Math.atan2(2*(d.x*d.z+d.y*d.w),(f-e-c+b));this.z=Math.atan2(2*(d.x*d.y+d.z*d.w),(f-e+c-b))}else{if(a==="ZXY"){this.x=Math.asin(g(2*(d.x*d.w+d.y*d.z)));this.y=Math.atan2(2*(d.y*d.w-d.z*d.x),(f-e-c+b));this.z=Math.atan2(2*(d.z*d.w-d.x*d.y),(f-e+c-b))}else{if(a==="ZYX"){this.x=Math.atan2(2*(d.x*d.w+d.z*d.y),(f-e-c+b));this.y=Math.asin(g(2*(d.y*d.w-d.x*d.z)));this.z=Math.atan2(2*(d.x*d.y+d.z*d.w),(f+e-c-b))}else{if(a==="YZX"){this.x=Math.atan2(2*(d.x*d.w-d.z*d.y),(f-e+c-b));this.y=Math.atan2(2*(d.y*d.w-d.x*d.z),(f+e-c-b));this.z=Math.asin(g(2*(d.x*d.y+d.z*d.w)))}else{if(a==="XZY"){this.x=Math.atan2(2*(d.x*d.w+d.y*d.z),(f-e+c-b));this.y=Math.atan2(2*(d.x*d.z+d.y*d.w),(f+e-c-b));this.z=Math.asin(g(2*(d.z*d.w-d.x*d.y)))}}}}}}return this},getScaleFromMatrix:function(a){var d=this.set(a.elements[0],a.elements[1],a.elements[2]).length();var c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();var b=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=d;this.y=c;this.z=b;return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z))},isZero:function(a){return this.lengthSq()<(a!==undefined?a:0.0001)},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,d,c,b){this.x=a||0;this.y=d||0;this.z=c||0;this.w=(b!==undefined)?b:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,d,c,b){this.x=a;this.y=d;this.z=c;this.w=b;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=(a.w!==undefined)?a.w:1;return this},add:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){if(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a}else{this.x=0;this.y=0;this.z=0;this.w=1}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(b){this.w=2*Math.acos(b.w);var a=Math.sqrt(1-b.w*b.w);if(a<0.0001){this.x=1;this.y=0;this.z=0}else{this.x=b.x/a;this.y=b.y/a;this.z=b.z/a}return this},setAxisAngleFromRotationMatrix:function(t){var u,j,i,h,C=0.01,k=0.1,g=t.elements,B=g[0],w=g[4],v=g[8],e=g[1],c=g[5],a=g[9],r=g[2],p=g[6],n=g[10];if((Math.abs(w-e)<C)&&(Math.abs(v-r)<C)&&(Math.abs(a-p)<C)){if((Math.abs(w+e)<k)&&(Math.abs(v+r)<k)&&(Math.abs(a+p)<k)&&(Math.abs(B+c+n-3)<k)){this.set(1,0,0,0);return this}u=Math.PI;var f=(B+1)/2;var q=(c+1)/2;var A=(n+1)/2;var d=(w+e)/4;var b=(v+r)/4;var o=(a+p)/4;if((f>q)&&(f>A)){if(f<C){j=0;i=0.707106781;h=0.707106781}else{j=Math.sqrt(f);i=d/j;h=b/j}}else{if(q>A){if(q<C){j=0.707106781;i=0;h=0.707106781}else{i=Math.sqrt(q);j=d/i;h=o/i}}else{if(A<C){j=0.707106781;i=0.707106781;h=0}else{h=Math.sqrt(A);j=b/h;i=o/h}}}this.set(j,i,h,u);return this}var l=Math.sqrt((p-a)*(p-a)+(v-r)*(v-r)+(e-w)*(e-w));if(Math.abs(l)<0.001){l=1}this.x=(p-a)/l;this.y=(v-r)/l;this.z=(e-w)/l;this.w=Math.acos((B+c+n-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(k){var j=k.elements;var o=j[10]*j[5]-j[6]*j[9];var i=-j[10]*j[1]+j[2]*j[9];var d=j[6]*j[1]-j[2]*j[5];var n=-j[10]*j[4]+j[6]*j[8];var g=j[10]*j[0]-j[2]*j[8];var c=-j[6]*j[0]+j[2]*j[4];var l=j[9]*j[4]-j[5]*j[8];var f=-j[9]*j[0]+j[1]*j[8];var a=j[5]*j[0]-j[1]*j[4];var h=j[0]*o+j[1]*n+j[2]*l;if(h===0){}var b=1/h;var e=this.elements;e[0]=b*o;e[1]=b*i;e[2]=b*d;e[3]=b*n;e[4]=b*g;e[5]=b*c;e[6]=b*l;e[7]=b*f;e[8]=b*a;return this},transpose:function(){var b,a=this.elements;b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},transposeIntoArray:function(b){var a=this.m;b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return this}};THREE.Matrix4=function(m,l,j,h,e,d,c,b,a,p,o,n,k,i,g,f){this.elements=new Float32Array(16);this.set((m!==undefined)?m:1,l||0,j||0,h||0,e||0,(d!==undefined)?d:1,c||0,b||0,a||0,p||0,(o!==undefined)?o:1,n||0,k||0,i||0,g||0,(f!==undefined)?f:1)};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n,m,k,i,f,e,d,c,a,q,p,o,l,j,h,g){var b=this.elements;b[0]=n;b[4]=m;b[8]=k;b[12]=i;b[1]=f;b[5]=e;b[9]=d;b[13]=c;b[2]=a;b[6]=q;b[10]=p;b[14]=o;b[3]=l;b[7]=j;b[11]=h;b[15]=g;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){var b=a.elements;this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]);return this},lookAt:function(c,d,b){var f=this.elements;var a=THREE.Matrix4.__v1;var g=THREE.Matrix4.__v2;var e=THREE.Matrix4.__v3;e.sub(c,d).normalize();if(e.length()===0){e.z=1}a.cross(b,e).normalize();if(a.length()===0){e.x+=0.0001;a.cross(b,e).normalize()}g.cross(e,a);f[0]=a.x;f[4]=g.x;f[8]=e.x;f[1]=a.y;f[5]=g.y;f[9]=e.y;f[2]=a.z;f[6]=g.z;f[10]=e.z;return this},multiply:function(M,L){var s=M.elements;var K=L.elements;var c=this.elements;var p=s[0],n=s[4],m=s[8],l=s[12];var J=s[1],I=s[5],H=s[9],G=s[13];var B=s[2],A=s[6],z=s[10],y=s[14];var t=s[3],r=s[7],q=s[11],o=s[15];var i=K[0],g=K[4],e=K[8],d=K[12];var F=K[1],E=K[5],D=K[9],C=K[13];var x=K[2],w=K[6],v=K[10],u=K[14];var k=K[3],j=K[7],h=K[11],f=K[15];c[0]=p*i+n*F+m*x+l*k;c[4]=p*g+n*E+m*w+l*j;c[8]=p*e+n*D+m*v+l*h;c[12]=p*d+n*C+m*u+l*f;c[1]=J*i+I*F+H*x+G*k;c[5]=J*g+I*E+H*w+G*j;c[9]=J*e+I*D+H*v+G*h;c[13]=J*d+I*C+H*u+G*f;c[2]=B*i+A*F+z*x+y*k;c[6]=B*g+A*E+z*w+y*j;c[10]=B*e+A*D+z*v+y*h;c[14]=B*d+A*C+z*u+y*f;c[3]=t*i+r*F+q*x+o*k;c[7]=t*g+r*E+q*w+o*j;c[11]=t*e+r*D+q*v+o*h;c[15]=t*d+r*C+q*u+o*f;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(d,c,e){var f=this.elements;this.multiply(d,c);e[0]=f[0];e[1]=f[1];e[2]=f[2];e[3]=f[3];e[4]=f[4];e[5]=f[5];e[6]=f[6];e[7]=f[7];e[8]=f[8];e[9]=f[9];e[10]=f[10];e[11]=f[11];e[12]=f[12];e[13]=f[13];e[14]=f[14];e[15]=f[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var g=this.elements;var e=a.x,c=a.y,b=a.z;var f=1/(g[3]*e+g[7]*c+g[11]*b+g[15]);a.x=(g[0]*e+g[4]*c+g[8]*b+g[12])*f;a.y=(g[1]*e+g[5]*c+g[9]*b+g[13])*f;a.z=(g[2]*e+g[6]*c+g[10]*b+g[14])*f;return a},multiplyVector4:function(a){var f=this.elements;var d=a.x,c=a.y,b=a.z,e=a.w;a.x=f[0]*d+f[4]*c+f[8]*b+f[12]*e;a.y=f[1]*d+f[5]*c+f[9]*b+f[13]*e;a.z=f[2]*d+f[6]*c+f[10]*b+f[14]*e;a.w=f[3]*d+f[7]*c+f[11]*b+f[15]*e;return a},multiplyVector3Array:function(b){var e=THREE.Matrix4.__v1;for(var d=0,c=b.length;d<c;d+=3){e.x=b[d];e.y=b[d+1];e.z=b[d+2];this.multiplyVector3(e);b[d]=e.x;b[d+1]=e.y;b[d+2]=e.z}return b},rotateAxis:function(a){var e=this.elements;var d=a.x,c=a.y,b=a.z;a.x=d*e[0]+c*e[4]+b*e[8];a.y=d*e[1]+c*e[5]+b*e[9];a.z=d*e[2]+c*e[6]+b*e[10];a.normalize();return a},crossVector:function(b){var d=this.elements;var c=new THREE.Vector4();c.x=d[0]*b.x+d[4]*b.y+d[8]*b.z+d[12]*b.w;c.y=d[1]*b.x+d[5]*b.y+d[9]*b.z+d[13]*b.w;c.z=d[2]*b.x+d[6]*b.y+d[10]*b.z+d[14]*b.w;c.w=(b.w)?d[3]*b.x+d[7]*b.y+d[11]*b.z+d[15]*b.w:1;return c},determinant:function(){var c=this.elements;var n=c[0],m=c[4],k=c[8],i=c[12];var f=c[1],e=c[5],d=c[9],b=c[13];var a=c[2],q=c[6],p=c[10],o=c[14];var l=c[3],j=c[7],h=c[11],g=c[15];return(i*d*q*l-k*b*q*l-i*e*p*l+m*b*p*l+k*e*o*l-m*d*o*l-i*d*a*j+k*b*a*j+i*f*p*j-n*b*p*j-k*f*o*j+n*d*o*j+i*e*a*h-m*b*a*h-i*f*q*h+n*b*q*h+m*f*o*h-n*e*o*h-k*e*a*g+m*d*a*g+k*f*q*g-n*d*q*g-m*f*p*g+n*e*p*g)},transpose:function(){var b=this.elements;var a;a=b[1];b[1]=b[4];b[4]=a;a=b[2];b[2]=b[8];b[8]=a;a=b[6];b[6]=b[9];b[9]=a;a=b[3];b[3]=b[12];b[12]=a;a=b[7];b[7]=b[13];b[13]=a;a=b[11];b[11]=b[14];b[14]=a;return this},flattenToArray:function(b){var a=this.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b},flattenToArrayOffset:function(c,b){var a=this.elements;c[b]=a[0];c[b+1]=a[1];c[b+2]=a[2];c[b+3]=a[3];c[b+4]=a[4];c[b+5]=a[5];c[b+6]=a[6];c[b+7]=a[7];c[b+8]=a[8];c[b+9]=a[9];c[b+10]=a[10];c[b+11]=a[11];c[b+12]=a[12];c[b+13]=a[13];c[b+14]=a[14];c[b+15]=a[15];return c},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(o){var e=this.elements;var t=o.elements;var k=t[0],j=t[4],h=t[8],f=t[12];var s=t[1],r=t[5],q=t[9],p=t[13];var d=t[2],c=t[6],b=t[10],a=t[14];var n=t[3],l=t[7],i=t[11],g=t[15];e[0]=q*a*l-p*b*l+p*c*i-r*a*i-q*c*g+r*b*g;e[4]=f*b*l-h*a*l-f*c*i+j*a*i+h*c*g-j*b*g;e[8]=h*p*l-f*q*l+f*r*i-j*p*i-h*r*g+j*q*g;e[12]=f*q*c-h*p*c-f*r*b+j*p*b+h*r*a-j*q*a;e[1]=p*b*n-q*a*n-p*d*i+s*a*i+q*d*g-s*b*g;e[5]=h*a*n-f*b*n+f*d*i-k*a*i-h*d*g+k*b*g;e[9]=f*q*n-h*p*n-f*s*i+k*p*i+h*s*g-k*q*g;e[13]=h*p*d-f*q*d+f*s*b-k*p*b-h*s*a+k*q*a;e[2]=r*a*n-p*c*n+p*d*l-s*a*l-r*d*g+s*c*g;e[6]=f*c*n-j*a*n-f*d*l+k*a*l+j*d*g-k*c*g;e[10]=j*p*n-f*r*n+f*s*l-k*p*l-j*s*g+k*r*g;e[14]=f*r*d-j*p*d-f*s*c+k*p*c+j*s*a-k*r*a;e[3]=q*c*n-r*b*n-q*d*l+s*b*l+r*d*i-s*c*i;e[7]=j*b*n-h*c*n+h*d*l-k*b*l-j*d*i+k*c*i;e[11]=h*r*n-j*q*n-h*s*l+k*q*l+j*s*i-k*r*i;e[15]=j*q*d-h*r*d+h*s*c-k*q*c-j*s*b+k*r*b;this.multiplyScalar(1/o.determinant());return this},setRotationFromEuler:function(o,r){var k=this.elements;var n=o.x,m=o.y,l=o.z;var H=Math.cos(n),G=Math.sin(n);var E=Math.cos(m),B=Math.sin(m);var u=Math.cos(l),s=Math.sin(l);if(r===undefined||r==="XYZ"){var A=H*u,t=H*s,h=G*u,g=G*s;k[0]=E*u;k[4]=-E*s;k[8]=B;k[1]=t+h*B;k[5]=A-g*B;k[9]=-G*E;k[2]=g-A*B;k[6]=h+t*B;k[10]=H*E}else{if(r==="YXZ"){var q=E*u,p=E*s,D=B*u,w=B*s;k[0]=q+w*G;k[4]=D*G-p;k[8]=H*B;k[1]=H*s;k[5]=H*u;k[9]=-G;k[2]=p*G-D;k[6]=w+q*G;k[10]=H*E}else{if(r==="ZXY"){var q=E*u,p=E*s,D=B*u,w=B*s;k[0]=q-w*G;k[4]=-H*s;k[8]=D+p*G;k[1]=p+D*G;k[5]=H*u;k[9]=w-q*G;k[2]=-H*B;k[6]=G;k[10]=H*E}else{if(r==="ZYX"){var A=H*u,t=H*s,h=G*u,g=G*s;k[0]=E*u;k[4]=h*B-t;k[8]=A*B+g;k[1]=E*s;k[5]=g*B+A;k[9]=t*B-h;k[2]=-B;k[6]=G*E;k[10]=H*E}else{if(r==="YZX"){var F=H*E,C=H*B,j=G*E,i=G*B;k[0]=E*u;k[4]=i-F*s;k[8]=j*s+C;k[1]=s;k[5]=H*u;k[9]=-G*u;k[2]=-B*u;k[6]=C*s+j;k[10]=F-i*s}else{if(r==="XZY"){var F=H*E,C=H*B,j=G*E,i=G*B;k[0]=E*u;k[4]=-s;k[8]=B*u;k[1]=F*s+i;k[5]=H*u;k[9]=C*s-j;k[2]=j*s-C;k[6]=G*u;k[10]=i*s+F}}}}}}return this},setRotationFromQuaternion:function(l){var e=this.elements;var h=l.x,g=l.y,f=l.z,i=l.w;var n=h+h,a=g+g,j=f+f;var d=h*n,c=h*a,b=h*j;var m=g*a,k=g*j,r=f*j;var s=i*n,p=i*a,o=i*j;e[0]=1-(m+r);e[4]=c-o;e[8]=b+p;e[1]=c+o;e[5]=1-(d+r);e[9]=k-s;e[2]=b-p;e[6]=k+s;e[10]=1-(d+m);return this},compose:function(f,a,e){var d=this.elements;var c=THREE.Matrix4.__m1;var b=THREE.Matrix4.__m2;c.identity();c.setRotationFromQuaternion(a);b.makeScale(e.x,e.y,e.z);this.multiply(c,b);d[12]=f.x;d[13]=f.y;d[14]=f.z;return this},decompose:function(h,c,f){var e=this.elements;var a=THREE.Matrix4.__v1;var g=THREE.Matrix4.__v2;var d=THREE.Matrix4.__v3;a.set(e[0],e[1],e[2]);g.set(e[4],e[5],e[6]);d.set(e[8],e[9],e[10]);h=(h instanceof THREE.Vector3)?h:new THREE.Vector3();c=(c instanceof THREE.Quaternion)?c:new THREE.Quaternion();f=(f instanceof THREE.Vector3)?f:new THREE.Vector3();f.x=a.length();f.y=g.length();f.z=d.length();h.x=e[12];h.y=e[13];h.z=e[14];var b=THREE.Matrix4.__m1;b.copy(this);b.elements[0]/=f.x;b.elements[1]/=f.x;b.elements[2]/=f.x;b.elements[4]/=f.y;b.elements[5]/=f.y;b.elements[6]/=f.y;b.elements[8]/=f.z;b.elements[9]/=f.z;b.elements[10]/=f.z;c.setFromRotationMatrix(b);return[h,c,f]},extractPosition:function(a){var c=this.elements;var b=a.elements;c[12]=b[12];c[13]=b[13];c[14]=b[14];return this},extractRotation:function(a){var g=this.elements;var f=a.elements;var c=THREE.Matrix4.__v1;var e=1/c.set(f[0],f[1],f[2]).length();var d=1/c.set(f[4],f[5],f[6]).length();var b=1/c.set(f[8],f[9],f[10]).length();g[0]=f[0]*e;g[1]=f[1]*e;g[2]=f[2]*e;g[4]=f[4]*d;g[5]=f[5]*d;g[6]=f[6]*d;g[8]=f[8]*b;g[9]=f[9]*b;g[10]=f[10]*b;return this},translate:function(b){var d=this.elements;var a=b.x,e=b.y,c=b.z;d[12]=d[0]*a+d[4]*e+d[8]*c+d[12];d[13]=d[1]*a+d[5]*e+d[9]*c+d[13];d[14]=d[2]*a+d[6]*e+d[10]*c+d[14];d[15]=d[3]*a+d[7]*e+d[11]*c+d[15];return this},rotateX:function(e){var d=this.elements;var i=d[4];var b=d[5];var l=d[6];var h=d[7];var g=d[8];var a=d[9];var k=d[10];var f=d[11];var j=Math.cos(e);var m=Math.sin(e);d[4]=j*i+m*g;d[5]=j*b+m*a;d[6]=j*l+m*k;d[7]=j*h+m*f;d[8]=j*g-m*i;d[9]=j*a-m*b;d[10]=j*k-m*l;d[11]=j*f-m*h;return this},rotateY:function(e){var d=this.elements;var i=d[0];var b=d[1];var l=d[2];var h=d[3];var g=d[8];var a=d[9];var k=d[10];var f=d[11];var j=Math.cos(e);var m=Math.sin(e);d[0]=j*i-m*g;d[1]=j*b-m*a;d[2]=j*l-m*k;d[3]=j*h-m*f;d[8]=j*g+m*i;d[9]=j*a+m*b;d[10]=j*k+m*l;d[11]=j*f+m*h;return this},rotateZ:function(e){var d=this.elements;var i=d[0];var b=d[1];var l=d[2];var h=d[3];var g=d[4];var a=d[5];var k=d[6];var f=d[7];var j=Math.cos(e);var m=Math.sin(e);d[0]=j*i+m*g;d[1]=j*b+m*a;d[2]=j*l+m*k;d[3]=j*h+m*f;d[4]=j*g-m*i;d[5]=j*a-m*b;d[6]=j*k-m*l;d[7]=j*f-m*h;return this},rotateByAxis:function(o,m){var a=this.elements;if(o.x===1&&o.y===0&&o.z===0){return this.rotateX(m)}else{if(o.x===0&&o.y===1&&o.z===0){return this.rotateY(m)}else{if(o.x===0&&o.y===0&&o.z===1){return this.rotateZ(m)}}}var H=o.x,G=o.y,F=o.z;var K=Math.sqrt(H*H+G*G+F*F);H/=K;G/=K;F/=K;var A=H*H,h=G*G,S=F*F;var U=Math.cos(m);var I=Math.sin(m);var p=1-U;var w=H*G*p;var v=H*F*p;var g=G*F*p;var C=H*I;var l=G*I;var X=F*I;var k=A+(1-A)*U;var W=w+X;var E=v-l;var j=w-X;var V=h+(1-h)*U;var D=g+C;var i=v+l;var T=g-C;var B=S+(1-S)*U;var P=a[0],u=a[1],f=a[2],R=a[3];var N=a[4],t=a[5],e=a[6],Q=a[7];var L=a[8],r=a[9],d=a[10],O=a[11];var J=a[12],q=a[13],b=a[14],M=a[15];a[0]=k*P+W*N+E*L;a[1]=k*u+W*t+E*r;a[2]=k*f+W*e+E*d;a[3]=k*R+W*Q+E*O;a[4]=j*P+V*N+D*L;a[5]=j*u+V*t+D*r;a[6]=j*f+V*e+D*d;a[7]=j*R+V*Q+D*O;a[8]=i*P+T*N+B*L;a[9]=i*u+T*t+B*r;a[10]=i*f+T*e+B*d;a[11]=i*R+T*Q+B*O;return this},scale:function(b){var d=this.elements;var a=b.x,e=b.y,c=b.z;d[0]*=a;d[4]*=e;d[8]*=c;d[1]*=a;d[5]*=e;d[9]*=c;d[2]*=a;d[6]*=e;d[10]*=c;d[3]*=a;d[7]*=e;d[11]*=c;return this},getMaxScaleOnAxis:function(){var c=this.elements;var d=c[0]*c[0]+c[1]*c[1]+c[2]*c[2];var b=c[4]*c[4]+c[5]*c[5]+c[6]*c[6];var a=c[8]*c[8]+c[9]*c[9]+c[10]*c[10];return Math.sqrt(Math.max(d,Math.max(b,a)))},makeTranslation:function(a,c,b){this.set(1,0,0,a,0,1,0,c,0,0,1,b,0,0,0,1);return this},makeRotationX:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(1,0,0,0,0,d,-b,0,0,b,d,0,0,0,0,1);return this},makeRotationY:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,0,b,0,0,1,0,0,-b,0,d,0,0,0,0,1);return this},makeRotationZ:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,-b,0,0,b,d,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var f=Math.cos(b);var k=Math.sin(b);var j=1-f;var i=a.x,h=a.y,g=a.z;var e=j*i,d=j*h;this.set(e*i+f,e*h-k*g,e*g+k*h,0,e*h+k*g,d*h+f,d*g-k*i,0,e*g-k*h,d*g+k*i,j*g*g+f,0,0,0,0,1);return this},makeScale:function(a,c,b){this.set(a,0,0,0,0,c,0,0,0,0,b,0,0,0,0,1);return this},makeFrustum:function(g,q,e,n,i,h){var f=this.elements;var p=2*i/(q-g);var m=2*i/(n-e);var o=(q+g)/(q-g);var l=(n+e)/(n-e);var k=-(h+i)/(h-i);var j=-2*h*i/(h-i);f[0]=p;f[4]=0;f[8]=o;f[12]=0;f[1]=0;f[5]=m;f[9]=l;f[13]=0;f[2]=0;f[6]=0;f[10]=k;f[14]=j;f[3]=0;f[7]=0;f[11]=-1;f[15]=0;console.log(f);return this},makePerspective:function(e,c,g,b){var a=g*Math.tan(e*Math.PI/360);var f=-a;var h=f*c;var d=a*c;return this.makeFrustum(h,d,f,a,g,b)},makeOrthographic:function(d,n,k,a,g,f){var c=this.elements;var m=n-d;var e=k-a;var b=f-g;var l=(n+d)/m;var j=(k+a)/e;var i=(f+g)/b;c[0]=2/m;c[4]=0;c[8]=0;c[12]=-l;c[1]=0;c[5]=2/e;c[9]=0;c[13]=-j;c[2]=0;c[6]=0;c[10]=-2/b;c[14]=-i;c[3]=0;c[7]=0;c[11]=0;c[15]=1;console.log(c);return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3();THREE.Matrix4.__v2=new THREE.Vector3();THREE.Matrix4.__v3=new THREE.Vector3();THREE.Matrix4.__m1=new THREE.Matrix4();THREE.Matrix4.__m2=new THREE.Matrix4();THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){if(a[b]===undefined){a[b]=[]}if(a[b].indexOf(c)===-1){a[b].push(c)}};this.dispatchEvent=function(b){for(var c in a[b.type]){a[b.type][c](b)}};this.removeEventListener=function(c,d){var b=a[c].indexOf(d);if(b!==-1){a[c].splice(b,1)}}};THREE.Frustum=function(){this.planes=[new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4()]};THREE.Frustum.prototype.setFromMatrix=function(q){var a;var j=this.planes;var w=q.elements;var o=w[0],l=w[1],k=w[2],h=w[3];var g=w[4],f=w[5],e=w[6],d=w[7];var c=w[8],b=w[9],v=w[10],t=w[11];var s=w[12],r=w[13],p=w[14],n=w[15];j[0].set(h-o,d-g,t-c,n-s);j[1].set(h+o,d+g,t+c,n+s);j[2].set(h+l,d+f,t+b,n+r);j[3].set(h-l,d-f,t-b,n-r);j[4].set(h-k,d-e,t-v,n-p);j[5].set(h+k,d+e,t+v,n+p);for(var u=0;u<6;u++){a=j[u];a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))}};THREE.Frustum.prototype.contains=function(d){var g=0;var c=this.planes;var b=d.matrixWorld;var f=b.elements;var a=-d.geometry.boundingSphere.radius*b.getMaxScaleOnAxis();for(var e=0;e<6;e++){g=c[e].x*f[12]+c[e].y*f[13]+c[e].z*f[14]+c[e].w;if(g<=a){return false}}return true};THREE.Frustum.__v1=new THREE.Vector3();(function(i){i.Ray=function(r,t,s,q){this.origin=r||new i.Vector3();this.direction=t||new i.Vector3();this.near=s||0;this.far=q||Infinity};var c=new i.Vector3();var n=new i.Vector3();var e=new i.Vector3();var d=new i.Vector3();var h=new i.Vector3();var o=new i.Vector3();var m=new i.Matrix4();var f=function(r,q){return r.distance-q.distance};var l=new i.Vector3(),k=new i.Vector3(),j=new i.Vector3();var a=function(t,u,r){l.sub(r,t);var s=l.dot(u);var q=k.add(t,j.copy(u).multiplyScalar(s));var v=r.distanceTo(q);return v};var b=function(q,B,z,w){l.sub(w,B);k.sub(z,B);j.sub(q,B);var A=l.dot(l);var y=l.dot(k);var x=l.dot(j);var t=k.dot(k);var r=k.dot(j);var s=1/(A*t-y*y);var D=(t*x-y*r)*s;var C=(A*r-y*x)*s;return(D>=0)&&(C>=0)&&(D+C<1)};var g=function(M,A,q){var u,H;if(M instanceof i.Particle){u=a(A.origin,A.direction,M.matrixWorld.getPosition());if(u>M.scale.x){return q}H={distance:u,point:M.position,face:null,object:M};q.push(H)}else{if(M instanceof i.Mesh){var C=M.geometry.boundingSphere.radius*M.matrixWorld.getMaxScaleOnAxis();u=a(A.origin,A.direction,M.matrixWorld.getPosition());if(u>C){return q}var G,y,x,D,N,v=M.geometry,w=v.vertices,t,z,s,B,r,E;z=M.geometry.materials;s=M.material instanceof i.MeshFaceMaterial;r=M.material.side;var L,K,J,I;var F=A.precision;M.matrixRotationWorld.extractRotation(M.matrixWorld);c.copy(A.origin);t=M.matrixWorld;m.getInverse(t);n.copy(c);m.multiplyVector3(n);e.copy(A.direction);m.rotateAxis(e).normalize();for(G=0,y=v.faces.length;G<y;G++){x=v.faces[G];B=s===true?z[x.materialIndex]:M.material;if(B===undefined){continue}r=B.side;d.sub(x.centroid,n);h=x.normal;D=e.dot(h);if(Math.abs(D)<F){continue}N=h.dot(d)/D;if(N<0){continue}if(r===i.DoubleSide||(r===i.FrontSide?D<0:D>0)){o.add(n,e.multiplyScalar(N));if(x instanceof i.Face3){L=w[x.a];K=w[x.b];J=w[x.c];if(b(o,L,K,J)){E=M.matrixWorld.multiplyVector3(o.clone());u=c.distanceTo(E);if(u<A.near||u>A.far){continue}H={distance:u,point:E,face:x,faceIndex:G,object:M};q.push(H)}}else{if(x instanceof i.Face4){L=w[x.a];K=w[x.b];J=w[x.c];I=w[x.d];if(b(o,L,K,I)||b(o,K,J,I)){E=M.matrixWorld.multiplyVector3(o.clone());u=c.distanceTo(E);if(u<A.near||u>A.far){continue}H={distance:u,point:E,face:x,faceIndex:G,object:M};q.push(H)}}}}}}}};var p=function(s,r,u){var v=s.getDescendants();for(var t=0,q=v.length;t<q;t++){g(v[t],r,u)}};i.Ray.prototype.precision=0.0001;i.Ray.prototype.set=function(q,r){this.origin=q;this.direction=r};i.Ray.prototype.intersectObject=function(r,q){var s=[];if(q===true){p(r,this,s)}g(r,this,s);s.sort(f);return s};i.Ray.prototype.intersectObjects=function(u,r){var t=[];for(var s=0,q=u.length;s<q;s++){g(u[s],this,t);if(r===true){p(u[s],this,t)}}t.sort(f);return t}}(THREE));THREE.Rectangle=function(){var e=0;var g=0;var h=0;var d=0;var a=0;var c=0;var f=true;function b(){a=h-e;c=d-g}this.getX=function(){return e};this.getY=function(){return g};this.getWidth=function(){return a};this.getHeight=function(){return c};this.getLeft=function(){return e};this.getTop=function(){return g};this.getRight=function(){return h};this.getBottom=function(){return d};this.set=function(l,k,j,i){f=false;e=l;g=k;h=j;d=i;b()};this.addPoint=function(i,j){if(f===true){f=false;e=i;g=j;h=i;d=j;b()}else{e=e<i?e:i;g=g<j?g:j;h=h>i?h:i;d=d>j?d:j;b()}};this.add3Points=function(l,n,j,m,i,k){if(f===true){f=false;e=l<j?(l<i?l:i):(j<i?j:i);g=n<m?(n<k?n:k):(m<k?m:k);h=l>j?(l>i?l:i):(j>i?j:i);d=n>m?(n>k?n:k):(m>k?m:k);b()}else{e=l<j?(l<i?(l<e?l:e):(i<e?i:e)):(j<i?(j<e?j:e):(i<e?i:e));g=n<m?(n<k?(n<g?n:g):(k<g?k:g)):(m<k?(m<g?m:g):(k<g?k:g));h=l>j?(l>i?(l>h?l:h):(i>h?i:h)):(j>i?(j>h?j:h):(i>h?i:h));d=n>m?(n>k?(n>d?n:d):(k>d?k:d)):(m>k?(m>d?m:d):(k>d?k:d));b()}};this.addRectangle=function(i){if(f===true){f=false;e=i.getLeft();g=i.getTop();h=i.getRight();d=i.getBottom();b()}else{e=e<i.getLeft()?e:i.getLeft();g=g<i.getTop()?g:i.getTop();h=h>i.getRight()?h:i.getRight();d=d>i.getBottom()?d:i.getBottom();b()}};this.inflate=function(i){e-=i;g-=i;h+=i;d+=i;b()};this.minSelf=function(i){e=e>i.getLeft()?e:i.getLeft();g=g>i.getTop()?g:i.getTop();h=h<i.getRight()?h:i.getRight();d=d<i.getBottom()?d:i.getBottom();b()};this.intersects=function(i){if(h<i.getLeft()){return false}if(e>i.getRight()){return false}if(d<i.getTop()){return false}if(g>i.getBottom()){return false}return true};this.empty=function(){f=true;e=0;g=0;h=0;d=0;b()};this.isEmpty=function(){return f}};THREE.Math={clamp:function(d,e,c){return(d<e)?e:((d>c)?c:d)},clampBottom:function(b,c){return b<c?c:b},mapLinear:function(b,c,a,e,d){return e+(b-c)*(d-e)/(a-c)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return(a<0)?-1:((a>0)?1:0)}};THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=undefined;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3();this.rotation=new THREE.Vector3();this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4();this.matrixWorld=new THREE.Matrix4();this.matrixRotationWorld=new THREE.Matrix4();this.matrixAutoUpdate=true;this.matrixWorldNeedsUpdate=true;this.quaternion=new THREE.Quaternion();this.useQuaternion=false;this.boundRadius=0;this.boundRadiusScale=1;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this._vector=new THREE.Vector3()};THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);var b=new THREE.Matrix4().extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(b,a){this.matrix.rotateAxis(a);this.position.addSelf(a.multiplyScalar(b))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);if(this.rotationAutoUpdate){this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)}},add:function(a){if(a===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");return}if(a instanceof THREE.Object3D){if(a.parent!==undefined){a.parent.remove(a)}a.parent=this;this.children.push(a);var b=this;while(b.parent!==undefined){b=b.parent}if(b!==undefined&&b instanceof THREE.Scene){b.__addObject(a)}}},remove:function(b){var a=this.children.indexOf(b);if(a!==-1){b.parent=undefined;this.children.splice(a,1);var c=this;while(c.parent!==undefined){c=c.parent}if(c!==undefined&&c instanceof THREE.Scene){c.__removeObject(b)}}},traverse:function(c){c(this);for(var b=0,a=this.children.length;b<a;b++){this.children[b].traverse(c)}},getChildByName:function(c,b){for(var d=0,a=this.children.length;d<a;d++){var e=this.children[d];if(e.name===c){return e}if(b===true){e=e.getChildByName(c,b);if(e!==undefined){return e}}}return undefined},getDescendants:function(c){if(c===undefined){c=[]}Array.prototype.push.apply(c,this.children);for(var b=0,a=this.children.length;b<a;b++){this.children[b].getDescendants(c)}return c},updateMatrix:function(){this.matrix.setPosition(this.position);if(this.useQuaternion===false){this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder)}else{this.matrix.setRotationFromQuaternion(this.quaternion)}if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1){this.matrix.scale(this.scale);this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))}if(this.addMatrix){for(var a=0;a<16;a++){this.matrix.elements[a]+=this.addMatrix.elements[a]}}this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(c){if(this.matrixAutoUpdate===true){this.updateMatrix()}if(this.matrixWorldNeedsUpdate===true||c===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;c=true}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}},clone:function(a){if(a===undefined){a=new THREE.Object3D()}a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);if(a.rotation instanceof THREE.Vector3){a.rotation.copy(this.rotation)}a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);if(a!==-1){THREE.Object3DLibrary.splice(a,1)}}};THREE.Object3D.__m1=new THREE.Matrix4();THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];THREE.Projector=function(){var O,A,H=[],l=0,v,b,c=[],a=0,h,J,G=[],g=0,n,q=[],x=0,f,L,N=[],t=0,K,m,s=[],F=0,D={objects:[],sprites:[],lights:[],elements:[]},E=new THREE.Vector3(),C=new THREE.Vector4(),d=new THREE.Matrix4(),z=new THREE.Matrix4(),M=new THREE.Frustum(),r=new THREE.Vector4(),e=new THREE.Vector4(),p;this.projectVector=function(P,Q){Q.matrixWorldInverse.getInverse(Q.matrixWorld);d.multiply(Q.projectionMatrix,Q.matrixWorldInverse);d.multiplyVector3(P);return P};this.unprojectVector=function(P,Q){Q.projectionMatrixInverse.getInverse(Q.projectionMatrix);d.multiply(Q.matrixWorld,Q.projectionMatrixInverse);d.multiplyVector3(P);return P};this.pickingRay=function(R,T){var Q,P,S;R.z=-1;Q=new THREE.Vector3(R.x,R.y,1);this.unprojectVector(R,T);this.unprojectVector(Q,T);Q.subSelf(R).normalize();return new THREE.Ray(R,Q)};var I=function(P,Q){A=0;D.objects.length=0;D.sprites.length=0;D.lights.length=0;var R=function(U){for(var V=0,S=U.children.length;V<S;V++){var T=U.children[V];if(T.visible===false){continue}if(T instanceof THREE.Light){D.lights.push(T)}else{if(T instanceof THREE.Mesh||T instanceof THREE.Line){if(T.frustumCulled===false||M.contains(T)===true){O=k();O.object=T;if(T.renderDepth!==null){O.z=T.renderDepth}else{E.copy(T.matrixWorld.getPosition());d.multiplyVector3(E);O.z=E.z}D.objects.push(O)}}else{if(T instanceof THREE.Sprite||T instanceof THREE.Particle){O=k();O.object=T;if(T.renderDepth!==null){O.z=T.renderDepth}else{E.copy(T.matrixWorld.getPosition());d.multiplyVector3(E);O.z=E.z}D.sprites.push(O)}else{O=k();O.object=T;if(T.renderDepth!==null){O.z=T.renderDepth}else{E.copy(T.matrixWorld.getPosition());d.multiplyVector3(E);O.z=E.z}D.objects.push(O)}}}R(T)}};R(P);if(Q===true){D.objects.sort(o)}return D};this.projectScene=function(ad,Z,ai,Q){var ah=Z.near,W=Z.far,ac=false,au,ak,aq,Y,ay,ag,av,aC,aB,af,ar,al,ap,ae,am,V,ax,P,aa,ab,U,T,R,at,an,ao,aE,aD,aA,az,S,aw,X;J=0;n=0;L=0;m=0;D.elements.length=0;ad.updateMatrixWorld();if(Z.parent===undefined){Z.updateMatrixWorld()}Z.matrixWorldInverse.getInverse(Z.matrixWorld);d.multiply(Z.projectionMatrix,Z.matrixWorldInverse);M.setFromMatrix(d);D=I(ad,ai);for(au=0,ak=D.objects.length;au<ak;au++){ap=D.objects[au].object;ae=ap.matrixWorld;b=0;if(ap instanceof THREE.Mesh){V=ap.geometry;ax=ap.geometry.materials;P=V.vertices;U=V.faces;an=V.faceVertexUvs;am=ap.matrixRotationWorld.extractRotation(ae);S=ap.material instanceof THREE.MeshFaceMaterial;X=ap.material.side;for(aq=0,Y=P.length;aq<Y;aq++){v=u();v.positionWorld.copy(P[aq]);ae.multiplyVector3(v.positionWorld);v.positionScreen.copy(v.positionWorld);d.multiplyVector4(v.positionScreen);v.positionScreen.x/=v.positionScreen.w;v.positionScreen.y/=v.positionScreen.w;v.visible=v.positionScreen.z>ah&&v.positionScreen.z<W}for(ay=0,ag=U.length;ay<ag;ay++){T=U[ay];aw=S===true?ax[T.materialIndex]:ap.material;if(aw===undefined){continue}X=aw.side;if(T instanceof THREE.Face3){aE=c[T.a];aD=c[T.b];aA=c[T.c];if(aE.visible===true&&aD.visible===true&&aA.visible===true){ac=((aA.positionScreen.x-aE.positionScreen.x)*(aD.positionScreen.y-aE.positionScreen.y)-(aA.positionScreen.y-aE.positionScreen.y)*(aD.positionScreen.x-aE.positionScreen.x))<0;if(X===THREE.DoubleSide||ac===(X===THREE.FrontSide)){h=j();h.v1.copy(aE);h.v2.copy(aD);h.v3.copy(aA)}else{continue}}else{continue}}else{if(T instanceof THREE.Face4){aE=c[T.a];aD=c[T.b];aA=c[T.c];az=c[T.d];if(aE.visible===true&&aD.visible===true&&aA.visible===true&&az.visible===true){ac=(az.positionScreen.x-aE.positionScreen.x)*(aD.positionScreen.y-aE.positionScreen.y)-(az.positionScreen.y-aE.positionScreen.y)*(aD.positionScreen.x-aE.positionScreen.x)<0||(aD.positionScreen.x-aA.positionScreen.x)*(az.positionScreen.y-aA.positionScreen.y)-(aD.positionScreen.y-aA.positionScreen.y)*(az.positionScreen.x-aA.positionScreen.x)<0;if(X===THREE.DoubleSide||ac===(X===THREE.FrontSide)){h=i();h.v1.copy(aE);h.v2.copy(aD);h.v3.copy(aA);h.v4.copy(az)}else{continue}}else{continue}}}h.normalWorld.copy(T.normal);if(ac===false&&(X===THREE.BackSide||X===THREE.DoubleSide)){h.normalWorld.negate()}am.multiplyVector3(h.normalWorld);h.centroidWorld.copy(T.centroid);ae.multiplyVector3(h.centroidWorld);h.centroidScreen.copy(h.centroidWorld);d.multiplyVector3(h.centroidScreen);R=T.vertexNormals;for(av=0,aC=R.length;av<aC;av++){at=h.vertexNormalsWorld[av];at.copy(R[av]);if(ac===false&&(X===THREE.BackSide||X===THREE.DoubleSide)){at.negate()}am.multiplyVector3(at)}h.vertexNormalsLength=R.length;for(aB=0,af=an.length;aB<af;aB++){ao=an[aB][ay];if(ao===undefined){continue}for(ar=0,al=ao.length;ar<al;ar++){h.uvs[aB][ar]=ao[ar]}}h.color=T.color;h.material=aw;h.z=h.centroidScreen.z;D.elements.push(h)}}else{if(ap instanceof THREE.Line){z.multiply(d,ae);P=ap.geometry.vertices;aE=u();aE.positionScreen.copy(P[0]);z.multiplyVector4(aE.positionScreen);var aj=ap.type===THREE.LinePieces?2:1;for(aq=1,Y=P.length;aq<Y;aq++){aE=u();aE.positionScreen.copy(P[aq]);z.multiplyVector4(aE.positionScreen);if((aq+1)%aj>0){continue}aD=c[b-2];r.copy(aE.positionScreen);e.copy(aD.positionScreen);if(w(r,e)===true){r.multiplyScalar(1/r.w);e.multiplyScalar(1/e.w);f=B();f.v1.positionScreen.copy(r);f.v2.positionScreen.copy(e);f.z=Math.max(r.z,e.z);f.material=ap.material;D.elements.push(f)}}}}}for(au=0,ak=D.sprites.length;au<ak;au++){ap=D.sprites[au].object;ae=ap.matrixWorld;if(ap instanceof THREE.Particle){C.set(ae.elements[12],ae.elements[13],ae.elements[14],1);d.multiplyVector4(C);C.z/=C.w;if(C.z>0&&C.z<1){K=y();K.object=ap;K.x=C.x/C.w;K.y=C.y/C.w;K.z=C.z;K.rotation=ap.rotation.z;K.scale.x=ap.scale.x*Math.abs(K.x-(C.x+Z.projectionMatrix.elements[0])/(C.w+Z.projectionMatrix.elements[12]));K.scale.y=ap.scale.y*Math.abs(K.y-(C.y+Z.projectionMatrix.elements[5])/(C.w+Z.projectionMatrix.elements[13]));K.material=ap.material;D.elements.push(K)}}}if(Q===true){D.elements.sort(o)}return D};function k(){if(A===l){var P=new THREE.RenderableObject();H.push(P);l++;A++;return P}return H[A++]}function u(){if(b===a){var P=new THREE.RenderableVertex();c.push(P);a++;b++;return P}return c[b++]}function j(){if(J===g){var P=new THREE.RenderableFace3();G.push(P);g++;J++;return P}return G[J++]}function i(){if(n===x){var P=new THREE.RenderableFace4();q.push(P);x++;n++;return P}return q[n++]}function B(){if(L===t){var P=new THREE.RenderableLine();N.push(P);t++;L++;return P}return N[L++]}function y(){if(m===F){var P=new THREE.RenderableParticle();s.push(P);F++;m++;return P}return s[m++]}function o(Q,P){return P.z-Q.z}function w(T,S){var R=0,W=1,U=T.z+T.w,Q=S.z+S.w,P=-T.z+T.w,V=-S.z+S.w;if(U>=0&&Q>=0&&P>=0&&V>=0){return true}else{if((U<0&&Q<0)||(P<0&&V<0)){return false}else{if(U<0){R=Math.max(R,U/(U-Q))}else{if(Q<0){W=Math.min(W,U/(U-Q))}}if(P<0){R=Math.max(R,P/(P-V))}else{if(V<0){W=Math.min(W,P/(P-V))}}if(W<R){return false}else{T.lerpSelf(S,R);S.lerpSelf(T,1-W);return true}}}}};THREE.Quaternion=function(a,d,c,b){this.x=a||0;this.y=d||0;this.z=c||0;this.w=(b!==undefined)?b:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,d,c,b){this.x=a;this.y=d;this.z=c;this.w=b;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(c,a){var h=Math.cos(c.x/2);var g=Math.cos(c.y/2);var e=Math.cos(c.z/2);var f=Math.sin(c.x/2);var d=Math.sin(c.y/2);var b=Math.sin(c.z/2);if(a===undefined||a==="XYZ"){this.x=f*g*e+h*d*b;this.y=h*d*e-f*g*b;this.z=h*g*b+f*d*e;this.w=h*g*e-f*d*b}else{if(a==="YXZ"){this.x=f*g*e+h*d*b;this.y=h*d*e-f*g*b;this.z=h*g*b-f*d*e;this.w=h*g*e+f*d*b}else{if(a==="ZXY"){this.x=f*g*e-h*d*b;this.y=h*d*e+f*g*b;this.z=h*g*b+f*d*e;this.w=h*g*e-f*d*b}else{if(a==="ZYX"){this.x=f*g*e-h*d*b;this.y=h*d*e+f*g*b;this.z=h*g*b-f*d*e;this.w=h*g*e+f*d*b}else{if(a==="YZX"){this.x=f*g*e+h*d*b;this.y=h*d*e+f*g*b;this.z=h*g*b-f*d*e;this.w=h*g*e-f*d*b}else{if(a==="XZY"){this.x=f*g*e-h*d*b;this.y=h*d*e-f*g*b;this.z=h*g*b+f*d*e;this.w=h*g*e+f*d*b}}}}}}return this},setFromAxisAngle:function(c,d){var a=d/2,b=Math.sin(a);this.x=c.x*b;this.y=c.y*b;this.z=c.z*b;this.w=Math.cos(a);return this},setFromRotationMatrix:function(e){var d=e.elements,i=d[0],h=d[4],g=d[8],c=d[1],b=d[5],a=d[9],l=d[2],k=d[6],j=d[10],f=i+b+j,n;if(f>0){n=0.5/Math.sqrt(f+1);this.w=0.25/n;this.x=(k-a)*n;this.y=(g-l)*n;this.z=(c-h)*n}else{if(i>b&&i>j){n=2*Math.sqrt(1+i-b-j);this.w=(k-a)/n;this.x=0.25*n;this.y=(h+c)/n;this.z=(g+l)/n}else{if(b>j){n=2*Math.sqrt(1+b-i-j);this.w=(g-l)/n;this.x=(h+c)/n;this.y=0.25*n;this.z=(a+k)/n}else{n=2*Math.sqrt(1+j-i-b);this.w=(c-h)/n;this.x=(g+l)/n;this.y=(a+k)/n;this.z=0.25*n}}}return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);if(a===0){this.x=0;this.y=0;this.z=0;this.w=0}else{a=1/a;this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;this.w=this.w*a}return this},multiply:function(l,k){var i=l.x,h=l.y,g=l.z,j=l.w,e=k.x,d=k.y,c=k.z,f=k.w;this.x=i*f+h*c-g*d+j*e;this.y=-i*c+h*f+g*e+j*d;this.z=i*d-h*e+g*f+j*c;this.w=-i*e-h*d-g*c+j*f;return this},multiplySelf:function(j){var h=this.x,g=this.y,f=this.z,i=this.w,d=j.x,c=j.y,a=j.z,e=j.w;this.x=h*e+i*d+g*a-f*c;this.y=g*e+i*c+f*d-h*a;this.z=f*e+i*a+h*c-g*d;this.w=i*e-h*d-g*c-f*a;return this},multiplyVector3:function(c,m){if(!m){m=c}var l=c.x,k=c.y,j=c.z,h=this.x,g=this.y,f=this.z,i=this.w;var d=i*l+g*j-f*k,b=i*k+f*l-h*j,a=i*j+h*k-g*l,e=-h*l-g*k-f*j;m.x=d*i+e*-h+b*-f-a*-g;m.y=b*i+e*-g+a*-h-d*-f;m.z=a*i+e*-f+d*-g-b*-h;return m},slerpSelf:function(c,k){var i=this.x,h=this.y,g=this.z,j=this.w;var b=j*c.w+i*c.x+h*c.y+g*c.z;if(b<0){this.w=-c.w;this.x=-c.x;this.y=-c.y;this.z=-c.z;b=-b}else{this.copy(c)}if(b>=1){this.w=j;this.x=i;this.y=h;this.z=g;return this}var d=Math.acos(b);var a=Math.sqrt(1-b*b);if(Math.abs(a)<0.001){this.w=0.5*(j+this.w);this.x=0.5*(i+this.x);this.y=0.5*(h+this.y);this.z=0.5*(g+this.z);return this}var f=Math.sin((1-k)*d)/a,e=Math.sin(k*d)/a;this.w=(j*f+this.w*e);this.x=(i*f+this.x*e);this.y=(h*f+this.y*e);this.z=(g*f+this.z*e);return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(e,c,h,i){var b=e.w*c.w+e.x*c.x+e.y*c.y+e.z*c.z;if(b<0){h.w=-c.w;h.x=-c.x;h.y=-c.y;h.z=-c.z;b=-b}else{h.copy(c)}if(Math.abs(b)>=1){h.w=e.w;h.x=e.x;h.y=e.y;h.z=e.z;return h}var d=Math.acos(b);var a=Math.sqrt(1-b*b);if(Math.abs(a)<0.001){h.w=0.5*(e.w+h.w);h.x=0.5*(e.x+h.x);h.y=0.5*(e.y+h.y);h.z=0.5*(e.z+h.z);return h}var g=Math.sin((1-i)*d)/a;var f=Math.sin(i*d)/a;h.w=(e.w*g+h.w*f);h.x=(e.x*g+h.x*f);h.y=(e.y*g+h.y*f);h.z=(e.z*g+h.z*f);return h};THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(f,e,i,h,g,d){this.a=f;this.b=e;this.c=i;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3();this.vertexNormals=h instanceof Array?h:[];this.color=g instanceof THREE.Color?g:new THREE.Color();this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=d;this.centroid=new THREE.Vector3()};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var c=new THREE.Face3(this.a,this.b,this.c);c.normal.copy(this.normal);c.color.copy(this.color);c.centroid.copy(this.centroid);c.materialIndex=this.materialIndex;var b,a;for(b=0,a=this.vertexNormals.length;b<a;b++){c.vertexNormals[b]=this.vertexNormals[b].clone()}for(b=0,a=this.vertexColors.length;b<a;b++){c.vertexColors[b]=this.vertexColors[b].clone()}for(b=0,a=this.vertexTangents.length;b<a;b++){c.vertexTangents[b]=this.vertexTangents[b].clone()}return c}};THREE.Face4=function(g,f,k,j,i,h,e){this.a=g;this.b=f;this.c=k;this.d=j;this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3();this.vertexNormals=i instanceof Array?i:[];this.color=h instanceof THREE.Color?h:new THREE.Color();this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3()};THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var c=new THREE.Face4(this.a,this.b,this.c,this.d);c.normal.copy(this.normal);c.color.copy(this.color);c.centroid.copy(this.centroid);c.materialIndex=this.materialIndex;var b,a;for(b=0,a=this.vertexNormals.length;b<a;b++){c.vertexNormals[b]=this.vertexNormals[b].clone()}for(b=0,a=this.vertexColors.length;b<a;b++){c.vertexColors[b]=this.vertexColors[b].clone()}for(b=0,a=this.vertexTangents.length;b<a;b++){c.vertexTangents[b]=this.vertexTangents[b].clone()}return c}};THREE.UV=function(b,a){this.u=b||0;this.v=a||0};THREE.UV.prototype={constructor:THREE.UV,set:function(b,a){this.u=b;this.v=a;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.dynamic=true;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.tangentsNeedUpdate=false;this.colorsNeedUpdate=false};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(b){var f=new THREE.Matrix4();f.extractRotation(b);for(var e=0,a=this.vertices.length;e<a;e++){var h=this.vertices[e];b.multiplyVector3(h)}for(var e=0,a=this.faces.length;e<a;e++){var g=this.faces[e];f.multiplyVector3(g.normal);for(var c=0,d=g.vertexNormals.length;c<d;c++){f.multiplyVector3(g.vertexNormals[c])}b.multiplyVector3(g.centroid)}},computeCentroids:function(){var c,b,a;for(c=0,b=this.faces.length;c<b;c++){a=this.faces[c];a.centroid.set(0,0,0);if(a instanceof THREE.Face3){a.centroid.addSelf(this.vertices[a.a]);a.centroid.addSelf(this.vertices[a.b]);a.centroid.addSelf(this.vertices[a.c]);a.centroid.divideScalar(3)}else{if(a instanceof THREE.Face4){a.centroid.addSelf(this.vertices[a.a]);a.centroid.addSelf(this.vertices[a.b]);a.centroid.addSelf(this.vertices[a.c]);a.centroid.addSelf(this.vertices[a.d]);a.centroid.divideScalar(4)}}}},computeFaceNormals:function(){var e,b,m,g,i,j,l,k,d,c,a,h=new THREE.Vector3(),o=new THREE.Vector3();for(j=0,l=this.faces.length;j<l;j++){k=this.faces[j];d=this.vertices[k.a];c=this.vertices[k.b];a=this.vertices[k.c];h.sub(a,c);o.sub(d,c);h.crossSelf(o);if(!h.isZero()){h.normalize()}k.normal.copy(h)}},computeVertexNormals:function(){var a,c,g,e,d,b;if(this.__tmpVertices===undefined){this.__tmpVertices=new Array(this.vertices.length);b=this.__tmpVertices;for(a=0,c=this.vertices.length;a<c;a++){b[a]=new THREE.Vector3()}for(g=0,e=this.faces.length;g<e;g++){d=this.faces[g];if(d instanceof THREE.Face3){d.vertexNormals=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()]}else{if(d instanceof THREE.Face4){d.vertexNormals=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()]}}}}else{b=this.__tmpVertices;for(a=0,c=this.vertices.length;a<c;a++){b[a].set(0,0,0)}}for(g=0,e=this.faces.length;g<e;g++){d=this.faces[g];if(d instanceof THREE.Face3){b[d.a].addSelf(d.normal);b[d.b].addSelf(d.normal);b[d.c].addSelf(d.normal)}else{if(d instanceof THREE.Face4){b[d.a].addSelf(d.normal);b[d.b].addSelf(d.normal);b[d.c].addSelf(d.normal);b[d.d].addSelf(d.normal)}}}for(a=0,c=this.vertices.length;a<c;a++){b[a].normalize()}for(g=0,e=this.faces.length;g<e;g++){d=this.faces[g];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(b[d.a]);d.vertexNormals[1].copy(b[d.b]);d.vertexNormals[2].copy(b[d.c])}else{if(d instanceof THREE.Face4){d.vertexNormals[0].copy(b[d.a]);d.vertexNormals[1].copy(b[d.b]);d.vertexNormals[2].copy(b[d.c]);d.vertexNormals[3].copy(b[d.d])}}}},computeMorphNormals:function(){var e,l,g,m,h;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];if(!h.__originalFaceNormal){h.__originalFaceNormal=h.normal.clone()}else{h.__originalFaceNormal.copy(h.normal)}if(!h.__originalVertexNormals){h.__originalVertexNormals=[]}for(e=0,l=h.vertexNormals.length;e<l;e++){if(!h.__originalVertexNormals[e]){h.__originalVertexNormals[e]=h.vertexNormals[e].clone()}else{h.__originalVertexNormals[e].copy(h.vertexNormals[e])}}}var c=new THREE.Geometry();c.faces=this.faces;for(e=0,l=this.morphTargets.length;e<l;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var d=this.morphNormals[e].faceNormals;var a=this.morphNormals[e].vertexNormals;var k,b;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];k=new THREE.Vector3();if(h instanceof THREE.Face3){b={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3()}}else{b={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3(),d:new THREE.Vector3()}}d.push(k);a.push(b)}}var j=this.morphNormals[e];c.vertices=this.morphTargets[e].vertices;c.computeFaceNormals();c.computeVertexNormals();var k,b;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];k=j.faceNormals[g];b=j.vertexNormals[g];k.copy(h.normal);if(h instanceof THREE.Face3){b.a.copy(h.vertexNormals[0]);b.b.copy(h.vertexNormals[1]);b.c.copy(h.vertexNormals[2])}else{b.a.copy(h.vertexNormals[0]);b.b.copy(h.vertexNormals[1]);b.c.copy(h.vertexNormals[2]);b.d.copy(h.vertexNormals[3])}}}for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];h.normal=h.__originalFaceNormal;h.vertexNormals=h.__originalVertexNormals}},computeTangents:function(){var L,m,B,k,K,p,z,g,o,H,E,D,e,d,c,j,h,S,R,x,u,O,N,s,q,F,C,b,Q=[],P=[],a=new THREE.Vector3(),l=new THREE.Vector3(),I=new THREE.Vector3(),M=new THREE.Vector3(),J=new THREE.Vector3(),A;for(B=0,k=this.vertices.length;B<k;B++){Q[B]=new THREE.Vector3();P[B]=new THREE.Vector3()}function y(v,i,f,w,t,r,n){H=v.vertices[i];E=v.vertices[f];D=v.vertices[w];e=o[t];d=o[r];c=o[n];j=E.x-H.x;h=D.x-H.x;S=E.y-H.y;R=D.y-H.y;x=E.z-H.z;u=D.z-H.z;O=d.u-e.u;N=c.u-e.u;s=d.v-e.v;q=c.v-e.v;F=1/(O*q-N*s);a.set((q*j-s*h)*F,(q*S-s*R)*F,(q*x-s*u)*F);l.set((O*h-N*j)*F,(O*R-N*S)*F,(O*u-N*x)*F);Q[i].addSelf(a);Q[f].addSelf(a);Q[w].addSelf(a);P[i].addSelf(l);P[f].addSelf(l);P[w].addSelf(l)}for(L=0,m=this.faces.length;L<m;L++){g=this.faces[L];o=this.faceVertexUvs[0][L];if(g instanceof THREE.Face3){y(this,g.a,g.b,g.c,0,1,2)}else{if(g instanceof THREE.Face4){y(this,g.a,g.b,g.d,0,1,3);y(this,g.b,g.c,g.d,1,2,3)}}}var G=["a","b","c","d"];for(L=0,m=this.faces.length;L<m;L++){g=this.faces[L];for(K=0;K<g.vertexNormals.length;K++){J.copy(g.vertexNormals[K]);z=g[G[K]];C=Q[z];I.copy(C);I.subSelf(J.multiplyScalar(J.dot(C))).normalize();M.cross(g.vertexNormals[K],C);b=M.dot(P[z]);A=(b<0)?-1:1;g.vertexTangents[K]=new THREE.Vector4(I.x,I.y,I.z,A)}}this.hasTangents=true},computeBoundingBox:function(){if(!this.boundingBox){this.boundingBox={min:new THREE.Vector3(),max:new THREE.Vector3()}}if(this.vertices.length>0){var b,f=this.vertices[0];this.boundingBox.min.copy(f);this.boundingBox.max.copy(f);var d=this.boundingBox.min,a=this.boundingBox.max;for(var c=1,e=this.vertices.length;c<e;c++){b=this.vertices[c];if(b.x<d.x){d.x=b.x}else{if(b.x>a.x){a.x=b.x}}if(b.y<d.y){d.y=b.y}else{if(b.y>a.y){a.y=b.y}}if(b.z<d.z){d.z=b.z}else{if(b.z>a.z){a.z=b.z}}}}else{this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){var b=0;if(this.boundingSphere===null){this.boundingSphere={radius:0}}for(var d=0,a=this.vertices.length;d<a;d++){var c=this.vertices[d].lengthSq();if(c>b){b=c}}this.boundingSphere.radius=Math.sqrt(b)},mergeVertices:function(){var n={};var e=[],q=[];var t,s;var g=4;var l=Math.pow(10,g);var h,p,m;var b="abcd",a,c,d,f,w;for(h=0,p=this.vertices.length;h<p;h++){t=this.vertices[h];s=[Math.round(t.x*l),Math.round(t.y*l),Math.round(t.z*l)].join("_");if(n[s]===undefined){n[s]=h;e.push(this.vertices[h]);q[h]=e.length-1}else{q[h]=q[n[s]]}}for(h=0,p=this.faces.length;h<p;h++){m=this.faces[h];if(m instanceof THREE.Face3){m.a=q[m.a];m.b=q[m.b];m.c=q[m.c]}else{if(m instanceof THREE.Face4){m.a=q[m.a];m.b=q[m.b];m.c=q[m.c];m.d=q[m.d];a=[m.a,m.b,m.c,m.d];for(c=3;c>0;c--){if(a.indexOf(m[b[c]])!==c){a.splice(c,1);this.faces[h]=new THREE.Face3(a[0],a[1],a[2],m.normal,m.color,m.materialIndex);for(d=0,f=this.faceVertexUvs.length;d<f;d++){w=this.faceVertexUvs[d][h];if(w){w.splice(c,1)}}this.faces[h].vertexColors=m.vertexColors;break}}}}}var r=this.vertices.length-e.length;this.vertices=e;return r},clone:function(){},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);if(a!==-1){THREE.GeometryLibrary.splice(a,1)}}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=false;this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(b){var a;var c;if(this.attributes.position){a=this.attributes.position.array}if(this.attributes.normal){c=this.attributes.normal.array}if(a!==undefined){b.multiplyVector3Array(a);this.verticesNeedUpdate=true}if(c!==undefined){var d=new THREE.Matrix4();d.extractRotation(b);d.multiplyVector3Array(c);this.normalsNeedUpdate=true}},computeBoundingBox:function(){if(!this.boundingBox){this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)}}var b=this.attributes.position.array;if(b){var f=this.boundingBox;var a,g,e;for(var d=0,c=b.length;d<c;d+=3){a=b[d];g=b[d+1];e=b[d+2];if(a<f.min.x){f.min.x=a}else{if(a>f.max.x){f.max.x=a}}if(g<f.min.y){f.min.y=g}else{if(g>f.max.y){f.max.y=g}}if(e<f.min.z){f.min.z=e}else{if(e>f.max.z){f.max.z=e}}}}if(b===undefined||b.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){if(!this.boundingSphere){this.boundingSphere={radius:0}}var c=this.attributes.position.array;if(c){var e,b=0;var a,h,g;for(var f=0,d=c.length;f<d;f+=3){a=c[f];h=c[f+1];g=c[f+2];e=a*a+h*h+g*g;if(e>b){b=e}}this.boundingSphere.radius=Math.sqrt(b)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var v,k;var s,A;var C=this.attributes.position.array.length;if(this.attributes.normal===undefined){this.attributes.normal={itemSize:3,array:new Float32Array(C),numItems:C}}else{for(v=0,k=this.attributes.normal.array.length;v<k;v++){this.attributes.normal.array[v]=0}}var c=this.offsets;var b=this.attributes.index.array;var f=this.attributes.position.array;var m=this.attributes.normal.array;var B,w,u,l,h,g,t=new THREE.Vector3(),r=new THREE.Vector3(),q=new THREE.Vector3(),o=new THREE.Vector3(),D=new THREE.Vector3();for(s=0,A=c.length;s<A;++s){var a=c[s].start;var e=c[s].count;var d=c[s].index;for(v=a,k=a+e;v<k;v+=3){B=d+b[v];w=d+b[v+1];u=d+b[v+2];l=f[B*3];h=f[B*3+1];g=f[B*3+2];t.set(l,h,g);l=f[w*3];h=f[w*3+1];g=f[w*3+2];r.set(l,h,g);l=f[u*3];h=f[u*3+1];g=f[u*3+2];q.set(l,h,g);o.sub(q,r);D.sub(t,r);o.crossSelf(D);m[B*3]+=o.x;m[B*3+1]+=o.y;m[B*3+2]+=o.z;m[w*3]+=o.x;m[w*3+1]+=o.y;m[w*3+2]+=o.z;m[u*3]+=o.x;m[u*3+1]+=o.y;m[u*3+2]+=o.z}}for(v=0,k=m.length;v<k;v+=3){l=m[v];h=m[v+1];g=m[v+2];var p=1/Math.sqrt(l*l+h*h+g*g);m[v]*=p;m[v+1]*=p;m[v+2]*=p}this.normalsNeedUpdate=true}},computeTangents:function(){if(this.attributes.index===undefined||this.attributes.position===undefined||this.attributes.normal===undefined||this.attributes.uv===undefined){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var f=this.attributes.index.array;var s=this.attributes.position.array;var y=this.attributes.normal.array;var Q=this.attributes.uv.array;var x=s.length/3;if(this.attributes.tangent===undefined){var z=4*x;this.attributes.tangent={itemSize:4,array:new Float32Array(z),numItems:z}}var G=this.attributes.tangent.array;var an=[],am=[];for(var ag=0;ag<x;ag++){an[ag]=new THREE.Vector3();am[ag]=new THREE.Vector3()}var m,ad,F,l,ab,E,h,Y,C,g,X,e,V,d,T,v,u,ap,ao,O,N,al,ak,M,L,U;var o=new THREE.Vector3(),I=new THREE.Vector3();function P(j,i,k){m=s[j*3];ad=s[j*3+1];F=s[j*3+2];l=s[i*3];ab=s[i*3+1];E=s[i*3+2];h=s[k*3];Y=s[k*3+1];C=s[k*3+2];g=Q[j*2];X=Q[j*2+1];e=Q[i*2];V=Q[i*2+1];d=Q[k*2];T=Q[k*2+1];v=l-m;u=h-m;ap=ab-ad;ao=Y-ad;O=E-F;N=C-F;al=e-g;ak=d-g;M=V-X;L=T-X;U=1/(al*L-ak*M);o.set((L*v-M*u)*U,(L*ap-M*ao)*U,(L*O-M*N)*U);I.set((al*u-ak*v)*U,(al*ao-ak*ap)*U,(al*N-ak*O)*U);an[j].addSelf(o);an[i].addSelf(o);an[k].addSelf(o);am[j].addSelf(I);am[i].addSelf(I);am[k].addSelf(I)}var ai,J;var ah,q;var c,b,a;var B=this.offsets;for(ah=0,q=B.length;ah<q;++ah){var D=B[ah].start;var W=B[ah].count;var K=B[ah].index;for(ai=D,J=D+W;ai<J;ai+=3){c=K+f[ai];b=K+f[ai+1];a=K+f[ai+2];P(c,b,a)}}var aa=new THREE.Vector3(),aj=new THREE.Vector3();var af=new THREE.Vector3(),H=new THREE.Vector3();var R,S,p;var ae,ac,Z;function A(i){af.x=y[i*3];af.y=y[i*3+1];af.z=y[i*3+2];H.copy(af);S=an[i];aa.copy(S);aa.subSelf(af.multiplyScalar(af.dot(S))).normalize();aj.cross(H,S);p=aj.dot(am[i]);R=(p<0)?-1:1;G[i*4]=aa.x;G[i*4+1]=aa.y;G[i*4+2]=aa.z;G[i*4+3]=R}for(ah=0,q=B.length;ah<q;++ah){var D=B[ah].start;var W=B[ah].count;var K=B[ah].index;for(ai=D,J=D+W;ai<J;ai+=3){c=K+f[ai];b=K+f[ai+1];a=K+f[ai+2];A(c);A(b);A(a)}}this.hasTangents=true;this.tangentsNeedUpdate=true},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);if(a!==-1){THREE.GeometryLibrary.splice(a,1)}}};THREE.Spline=function(n){this.points=n;var h=[],j={x:0,y:0,z:0},m,a,e,d,b,l,k,i,g;this.initFromArray=function(c){this.points=[];for(var o=0;o<c.length;o++){this.points[o]={x:c[o][0],y:c[o][1],z:c[o][2]}}};this.getPoint=function(c){m=(this.points.length-1)*c;a=Math.floor(m);e=m-a;h[0]=a===0?a:a-1;h[1]=a;h[2]=a>this.points.length-2?this.points.length-1:a+1;h[3]=a>this.points.length-3?this.points.length-1:a+2;l=this.points[h[0]];k=this.points[h[1]];i=this.points[h[2]];g=this.points[h[3]];d=e*e;b=e*d;j.x=f(l.x,k.x,i.x,g.x,e,d,b);j.y=f(l.y,k.y,i.y,g.y,e,d,b);j.z=f(l.z,k.z,i.z,g.z,e,d,b);return j};this.getControlPointsArray=function(){var o,r,c=this.points.length,q=[];for(o=0;o<c;o++){r=this.points[o];q[o]=[r.x,r.y,r.z]}return q};this.getLength=function(p){var r,t,u,s,x=0,c=0,q=0,w=new THREE.Vector3(),o=new THREE.Vector3(),v=[],y=0;v[0]=0;if(!p){p=100}u=this.points.length*p;w.copy(this.points[0]);for(r=1;r<u;r++){t=r/u;s=this.getPoint(t);o.copy(s);y+=o.distanceTo(w);w.copy(s);x=(this.points.length-1)*t;c=Math.floor(x);if(c!=q){v[c]=y;q=c}}v[v.length]=y;return{chunks:v,total:y}};this.reparametrizeByArcLength=function(p){var t,s,w,x,q,o,y,v,u,z=[],c=new THREE.Vector3(),r=this.getLength();z.push(c.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){y=r.chunks[t]-r.chunks[t-1];v=Math.ceil(p*y/r.total);x=(t-1)/(this.points.length-1);q=t/(this.points.length-1);for(s=1;s<v-1;s++){w=x+s*(1/v)*(q-x);u=this.getPoint(w);z.push(c.copy(u).clone())}z.push(c.copy(this.points[t]).clone())}this.points=z};function f(v,u,r,q,w,o,c){var s=(r-v)*0.5,p=(q-u)*0.5;return(2*(u-r)+s+p)*c+(-3*(u-r)-2*s-p)*o+s*w+u}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4();this.projectionMatrix=new THREE.Matrix4();this.projectionMatrixInverse=new THREE.Matrix4()};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);if(this.rotationAutoUpdate===true){this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)}};THREE.OrthographicCamera=function(f,c,e,b,d,a){THREE.Camera.call(this);this.left=f;this.right=c;this.top=e;this.bottom=b;this.near=(d!==undefined)?d:0.1;this.far=(a!==undefined)?a:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(c,b,d,a){THREE.Camera.call(this);this.fov=c!==undefined?c:50;this.aspect=b!==undefined?b:1;this.near=d!==undefined?d:0.1;this.far=a!==undefined?a:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(b,a){if(a===undefined){a=24}this.fov=2*Math.atan(a/(b*2))*(180/Math.PI);this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,c,b,f,d,a){this.fullWidth=e;this.fullHeight=c;this.x=b;this.y=f;this.width=d;this.height=a;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var c=this.fullWidth/this.fullHeight;var g=Math.tan(this.fov*Math.PI/360)*this.near;var b=-g;var f=c*b;var d=c*g;var e=Math.abs(d-f);var a=Math.abs(g-b);this.projectionMatrix.makeFrustum(f+this.x*e/this.fullWidth,f+(this.x+this.width)*e/this.fullWidth,g-(this.y+this.height)*a/this.fullHeight,g-this.y*a/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(b,a,c){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D();this.intensity=(a!==undefined)?a:1;this.distance=(c!==undefined)?c:0;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraRight=500;this.shadowCameraTop=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight=function(b,c,a){THREE.Light.call(this,b);this.groundColor=new THREE.Color(c);this.position=new THREE.Vector3(0,100,0);this.intensity=(a!==undefined)?a:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(b,a,c){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,0,0);this.intensity=(a!==undefined)?a:1;this.distance=(c!==undefined)?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight=function(b,a,e,d,c){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D();this.intensity=(a!==undefined)?a:1;this.distance=(e!==undefined)?e:0;this.angle=(d!==undefined)?d:Math.PI/2;this.exponent=(c!==undefined)?c:10;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.showStatus=a;this.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1000;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";if(a.total){b+=(100*a.loaded/a.total).toFixed(0)+"%"}else{b+=(a.loaded/1000).toFixed(2)+" KB"}this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");b.pop();return(b.length<1?".":b.join("/"))+"/"},initMaterials:function(c,a,d){c.materials=[];for(var b=0;b<a.length;++b){c.materials[b]=THREE.Loader.prototype.createMaterial(a[b],d)}},hasNormals:function(d){var a,c,b=d.materials.length;for(c=0;c<b;c++){a=d.materials[c];if(a instanceof THREE.ShaderMaterial){return true}}return false},createMaterial:function(f,c){var h=this;function e(q){var m=Math.log(q)/Math.LN2;return Math.floor(m)==m}function a(q){var m=Math.log(q)/Math.LN2;return Math.pow(2,Math.round(m))}function n(q,m){var r=new Image();r.onload=function(){if(!e(this.width)||!e(this.height)){var t=a(this.width);var s=a(this.height);q.image.width=t;q.image.height=s;q.image.getContext("2d").drawImage(this,0,0,t,s)}else{q.image=this}q.needsUpdate=true};r.crossOrigin=h.crossOrigin;r.src=m}function j(x,q,v,r,w,s,m){var u=v.toLowerCase().endsWith(".dds");var t=c+"/"+v;if(u){var y=THREE.ImageUtils.loadCompressedTexture(t);x[q]=y}else{var y=document.createElement("canvas");x[q]=new THREE.Texture(y)}x[q].sourceFile=v;if(r){x[q].repeat.set(r[0],r[1]);if(r[0]!==1){x[q].wrapS=THREE.RepeatWrapping}if(r[1]!==1){x[q].wrapT=THREE.RepeatWrapping}}if(w){x[q].offset.set(w[0],w[1])}if(s){var z={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(z[s[0]]!==undefined){x[q].wrapS=z[s[0]]}if(z[s[1]]!==undefined){x[q].wrapT=z[s[1]]}}if(m){x[q].anisotropy=m}if(!u){n(x[q],t)}}function b(m){return(m[0]*255<<16)+(m[1]*255<<8)+m[2]*255}var d="MeshLambertMaterial";var l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(f.shading){var k=f.shading.toLowerCase();if(k==="phong"){d="MeshPhongMaterial"}else{if(k==="basic"){d="MeshBasicMaterial"}}}if(f.blending!==undefined&&THREE[f.blending]!==undefined){l.blending=THREE[f.blending]}if(f.transparent!==undefined||f.opacity<1){l.transparent=f.transparent}if(f.depthTest!==undefined){l.depthTest=f.depthTest}if(f.depthWrite!==undefined){l.depthWrite=f.depthWrite}if(f.visible!==undefined){l.visible=f.visible}if(f.flipSided!==undefined){l.side=THREE.BackSide}if(f.doubleSided!==undefined){l.side=THREE.DoubleSide}if(f.wireframe!==undefined){l.wireframe=f.wireframe}if(f.vertexColors!==undefined){if(f.vertexColors==="face"){l.vertexColors=THREE.FaceColors}else{if(f.vertexColors){l.vertexColors=THREE.VertexColors}}}if(f.colorDiffuse){l.color=b(f.colorDiffuse)}else{if(f.DbgColor){l.color=f.DbgColor}}if(f.colorSpecular){l.specular=b(f.colorSpecular)}if(f.colorAmbient){l.ambient=b(f.colorAmbient)}if(f.transparency){l.opacity=f.transparency}if(f.specularCoef){l.shininess=f.specularCoef}if(f.mapDiffuse&&c){j(l,"map",f.mapDiffuse,f.mapDiffuseRepeat,f.mapDiffuseOffset,f.mapDiffuseWrap,f.mapDiffuseAnisotropy)}if(f.mapLight&&c){j(l,"lightMap",f.mapLight,f.mapLightRepeat,f.mapLightOffset,f.mapLightWrap,f.mapLightAnisotropy)}if(f.mapBump&&c){j(l,"bumpMap",f.mapBump,f.mapBumpRepeat,f.mapBumpOffset,f.mapBumpWrap,f.mapBumpAnisotropy)}if(f.mapNormal&&c){j(l,"normalMap",f.mapNormal,f.mapNormalRepeat,f.mapNormalOffset,f.mapNormalWrap,f.mapNormalAnisotropy)}if(f.mapSpecular&&c){j(l,"specularMap",f.mapSpecular,f.mapSpecularRepeat,f.mapSpecularOffset,f.mapSpecularWrap,f.mapSpecularAnisotropy)}if(f.mapBumpScale){l.bumpScale=f.mapBumpScale}if(f.mapNormal){var g=THREE.ShaderUtils.lib.normal;var o=THREE.UniformsUtils.clone(g.uniforms);o.tNormal.value=l.normalMap;if(f.mapNormalFactor){o.uNormalScale.value.set(f.mapNormalFactor,f.mapNormalFactor)}if(l.map){o.tDiffuse.value=l.map;o.enableDiffuse.value=true}if(l.specularMap){o.tSpecular.value=l.specularMap;o.enableSpecular.value=true}if(l.lightMap){o.tAO.value=l.lightMap;o.enableAO.value=true}o.uDiffuseColor.value.setHex(l.color);o.uSpecularColor.value.setHex(l.specular);o.uAmbientColor.value.setHex(l.ambient);o.uShininess.value=l.shininess;if(l.opacity!==undefined){o.uOpacity.value=l.opacity}var p={fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:o,lights:true,fog:true};var i=new THREE.ShaderMaterial(p)}else{var i=new THREE[d](l)}if(f.DbgName!==undefined){i.name=f.DbgName}return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);THREE.BinaryLoader.prototype.load=function(b,e,d,a){d=d?d:this.extractUrlBase(b);a=a?a:this.extractUrlBase(b);var c=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,b,e,d,a,c)};THREE.BinaryLoader.prototype.loadAjaxJSON=function(c,b,g,e,a,d){var f=new XMLHttpRequest();f.onreadystatechange=function(){if(f.readyState==4){if(f.status==200||f.status==0){var h=JSON.parse(f.responseText);c.loadAjaxBuffers(h,g,a,e,d)}else{console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+f.status+"]")}}};f.open("GET",b,true);f.send(null)};THREE.BinaryLoader.prototype.loadAjaxBuffers=function(c,h,a,f,e){var g=new XMLHttpRequest(),b=a+"/"+c.buffers;var d=0;g.onreadystatechange=function(){if(g.readyState==4){if(g.status==200||g.status==0){var i=g.response;if(i===undefined){i=(new Uint8Array(g.responseBody)).buffer}THREE.BinaryLoader.prototype.createBinModel(i,h,f,c.materials)}else{console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")}}else{if(g.readyState==3){if(e){if(d==0){d=g.getResponseHeader("Content-Length")}e({total:d,loaded:g.responseText.length})}}else{if(g.readyState==2){d=g.getResponseHeader("Content-Length")}}}};g.open("GET",b,true);g.responseType="arraybuffer";g.send(null)};THREE.BinaryLoader.prototype.createBinModel=function(h,k,c,l){var d=function(af){var S=this,n=0,C,G=[],V=[],ab,J,u,B,E,I,W,Z,T,A,N,U,r,Q,K,z,s,H;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(S,l,af);C=ad(h,n);n+=C.header_bytes;T=C.vertex_index_bytes*3+C.material_index_bytes;A=C.vertex_index_bytes*4+C.material_index_bytes;N=C.ntri_flat*(T);U=C.ntri_smooth*(T+C.normal_index_bytes*3);r=C.ntri_flat_uv*(T+C.uv_index_bytes*3);Q=C.ntri_smooth_uv*(T+C.normal_index_bytes*3+C.uv_index_bytes*3);K=C.nquad_flat*(A);z=C.nquad_smooth*(A+C.normal_index_bytes*4);s=C.nquad_flat_uv*(A+C.uv_index_bytes*4);H=C.nquad_smooth_uv*(A+C.normal_index_bytes*4+C.uv_index_bytes*4);n+=y(n);n+=R(n);n+=O(C.nnormals*3);n+=P(n);ab=n;J=ab+N+O(C.ntri_flat*2);u=J+U+O(C.ntri_smooth*2);B=u+r+O(C.ntri_flat_uv*2);E=B+Q+O(C.ntri_smooth_uv*2);I=E+K+O(C.nquad_flat*2);W=I+z+O(C.nquad_smooth*2);Z=W+s+O(C.nquad_flat_uv*2);ae(u);t(B);v(W);F(Z);aa(ab);ac(J);m(E);q(I);this.computeCentroids();this.computeFaceNormals();if(THREE.Loader.prototype.hasNormals(this)){this.computeTangents()}function O(ag){return(ag%4)?(4-ag%4):0}function ad(ah,ai){var ag={signature:L(ah,ai,12),header_bytes:o(ah,ai+12),vertex_coordinate_bytes:o(ah,ai+13),normal_coordinate_bytes:o(ah,ai+14),uv_coordinate_bytes:o(ah,ai+15),vertex_index_bytes:o(ah,ai+16),normal_index_bytes:o(ah,ai+17),uv_index_bytes:o(ah,ai+18),material_index_bytes:o(ah,ai+19),nvertices:x(ah,ai+20),nnormals:x(ah,ai+20+4*1),nuvs:x(ah,ai+20+4*2),ntri_flat:x(ah,ai+20+4*3),ntri_smooth:x(ah,ai+20+4*4),ntri_flat_uv:x(ah,ai+20+4*5),ntri_smooth_uv:x(ah,ai+20+4*6),nquad_flat:x(ah,ai+20+4*7),nquad_smooth:x(ah,ai+20+4*8),nquad_flat_uv:x(ah,ai+20+4*9),nquad_smooth_uv:x(ah,ai+20+4*10)};return ag}function L(aj,al,ai){var ah=new Uint8Array(aj,al,ai);var ak="";for(var ag=0;ag<ai;ag++){ak+=String.fromCharCode(ah[al+ag])}return ak}function o(ah,ai){var ag=new Uint8Array(ah,ai,1);return ag[0]}function x(ag,ai){var ah=new Uint32Array(ag,ai,1);return ah[0]}function y(am){var ah=C.nvertices;var aj=new Float32Array(h,am,ah*3);var ai,ag,al,ak;for(ai=0;ai<ah;ai++){ag=aj[ai*3];al=aj[ai*3+1];ak=aj[ai*3+2];i(S,ag,al,ak)}return ah*3*Float32Array.BYTES_PER_ELEMENT}function R(am){var ah=C.nnormals;if(ah){var aj=new Int8Array(h,am,ah*3);var ai,ag,al,ak;for(ai=0;ai<ah;ai++){ag=aj[ai*3];al=aj[ai*3+1];ak=aj[ai*3+2];G.push(ag/127,al/127,ak/127)}}return ah*3*Int8Array.BYTES_PER_ELEMENT}function P(al){var ag=C.nuvs;if(ag){var ak=new Float32Array(h,al,ag*2);var aj,ai,ah;for(aj=0;aj<ag;aj++){ai=ak[aj*2];ah=ak[aj*2+1];V.push(ai,ah)}}return ag*2*Float32Array.BYTES_PER_ELEMENT}function Y(ap,an){var ao,am,aj,ah,al,ak,ag,at,ar,aq;var ai=new Uint32Array(h,an,3*ap);for(ao=0;ao<ap;ao++){am=ai[ao*3];aj=ai[ao*3+1];ah=ai[ao*3+2];al=V[am*2];at=V[am*2+1];ak=V[aj*2];ar=V[aj*2+1];ag=V[ah*2];aq=V[ah*2+1];b(S.faceVertexUvs[0],al,at,ak,ar,ag,aq)}}function X(ar,ap){var aq,ao,am,aj,ah,an,al,ai,ag,aw,av,au,at;var ak=new Uint32Array(h,ap,4*ar);for(aq=0;aq<ar;aq++){ao=ak[aq*4];am=ak[aq*4+1];aj=ak[aq*4+2];ah=ak[aq*4+3];an=V[ao*2];aw=V[ao*2+1];al=V[am*2];av=V[am*2+1];ai=V[aj*2];au=V[aj*2+1];ag=V[ah*2];at=V[ah*2+1];a(S.faceVertexUvs[0],an,aw,al,av,ai,au,ag,at)}}function p(am,ak,al){var aj,ap,ao,an,ai;var ah=new Uint32Array(h,ak,3*am);var ag=new Uint16Array(h,al,am);for(aj=0;aj<am;aj++){ap=ah[aj*3];ao=ah[aj*3+1];an=ah[aj*3+2];ai=ag[aj];g(S,ap,ao,an,ai)}}function M(am,ak,al){var aj,aq,ap,ao,an,ai;var ah=new Uint32Array(h,ak,4*am);var ag=new Uint16Array(h,al,am);for(aj=0;aj<am;aj++){aq=ah[aj*4];ap=ah[aj*4+1];ao=ah[aj*4+2];an=ah[aj*4+3];ai=ag[aj];e(S,aq,ap,ao,an,ai)}}function w(ar,am,aj,aq){var al,av,au,at,ai;var ap,an,ak;var ah=new Uint32Array(h,am,3*ar);var ao=new Uint32Array(h,aj,3*ar);var ag=new Uint16Array(h,aq,ar);for(al=0;al<ar;al++){av=ah[al*3];au=ah[al*3+1];at=ah[al*3+2];ap=ao[al*3];an=ao[al*3+1];ak=ao[al*3+2];ai=ag[al];j(S,G,av,au,at,ai,ap,an,ak)}}function D(at,an,aj,ar){var am,ax,aw,av,au,ai;var aq,ao,al,ak;var ah=new Uint32Array(h,an,4*at);var ap=new Uint32Array(h,aj,4*at);var ag=new Uint16Array(h,ar,at);for(am=0;am<at;am++){ax=ah[am*4];aw=ah[am*4+1];av=ah[am*4+2];au=ah[am*4+3];aq=ap[am*4];ao=ap[am*4+1];al=ap[am*4+2];ak=ap[am*4+3];ai=ag[am];f(S,G,ax,aw,av,au,ai,aq,ao,al,ak)}}function aa(ai){var ag=C.ntri_flat;if(ag){var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*3;p(ag,ai,ah)}}function ae(aj){var ag=C.ntri_flat_uv;if(ag){var ai=aj+ag*Uint32Array.BYTES_PER_ELEMENT*3;var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*3;p(ag,aj,ah);Y(ag,ai)}}function ac(aj){var ag=C.ntri_smooth;if(ag){var ai=aj+ag*Uint32Array.BYTES_PER_ELEMENT*3;var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*3;w(ag,aj,ai,ah)}}function t(ak){var ag=C.ntri_smooth_uv;if(ag){var aj=ak+ag*Uint32Array.BYTES_PER_ELEMENT*3;var ai=aj+ag*Uint32Array.BYTES_PER_ELEMENT*3;var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*3;w(ag,ak,aj,ah);Y(ag,ai)}}function m(ai){var ag=C.nquad_flat;if(ag){var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*4;M(ag,ai,ah)}}function v(aj){var ag=C.nquad_flat_uv;if(ag){var ai=aj+ag*Uint32Array.BYTES_PER_ELEMENT*4;var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*4;M(ag,aj,ah);X(ag,ai)}}function q(aj){var ag=C.nquad_smooth;if(ag){var ai=aj+ag*Uint32Array.BYTES_PER_ELEMENT*4;var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*4;D(ag,aj,ai,ah)}}function F(ak){var ag=C.nquad_smooth_uv;if(ag){var aj=ak+ag*Uint32Array.BYTES_PER_ELEMENT*4;var ai=aj+ag*Uint32Array.BYTES_PER_ELEMENT*4;var ah=ai+ag*Uint32Array.BYTES_PER_ELEMENT*4;D(ag,ak,aj,ah);X(ag,ai)}}};function i(n,m,p,o){n.vertices.push(new THREE.Vector3(m,p,o))}function g(p,n,m,q,o){p.faces.push(new THREE.Face3(n,m,q,null,null,o))}function e(p,n,m,r,q,o){p.faces.push(new THREE.Face4(n,m,r,q,null,null,o))}function j(m,t,A,z,y,x,s,r,q){var p=t[s*3],o=t[s*3+1],n=t[s*3+2],w=t[r*3],v=t[r*3+1],u=t[r*3+2],D=t[q*3],C=t[q*3+1],B=t[q*3+2];m.faces.push(new THREE.Face3(A,z,y,[new THREE.Vector3(p,o,n),new THREE.Vector3(w,v,u),new THREE.Vector3(D,C,B)],null,x))}function f(m,x,F,E,D,B,C,w,v,u,s){var r=x[w*3],p=x[w*3+1],n=x[w*3+2],A=x[v*3],z=x[v*3+1],y=x[v*3+2],I=x[u*3],H=x[u*3+1],G=x[u*3+2],t=x[s*3],q=x[s*3+1],o=x[s*3+2];m.faces.push(new THREE.Face4(F,E,D,B,[new THREE.Vector3(r,p,n),new THREE.Vector3(A,z,y),new THREE.Vector3(I,H,G),new THREE.Vector3(t,q,o)],null,C))}function b(m,r,t,p,s,o,q){var n=[];n.push(new THREE.UV(r,t));n.push(new THREE.UV(p,s));n.push(new THREE.UV(o,q));m.push(n)}function a(r,q,v,o,u,n,t,m,s){var p=[];p.push(new THREE.UV(q,v));p.push(new THREE.UV(o,u));p.push(new THREE.UV(n,t));p.push(new THREE.UV(m,s));r.push(p)}d.prototype=Object.create(THREE.Geometry.prototype);k(new d(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,c){var b=this;if(c===undefined){c=new Image()}c.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(b.crossOrigin){c.crossOrigin=b.crossOrigin}c.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,d,c){var b=this;c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,d,c)};THREE.JSONLoader.prototype.loadAjaxJSON=function(b,a,g,e,d){var f=new XMLHttpRequest();var c=0;f.onreadystatechange=function(){if(f.readyState===f.DONE){if(f.status===200||f.status===0){if(f.responseText){var h=JSON.parse(f.responseText);b.createModel(h,g,e)}else{console.warn("THREE.JSONLoader: ["+a+"] seems to be unreachable or file there is empty")}b.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load ["+a+"] ["+f.status+"]")}}else{if(f.readyState===f.LOADING){if(d){if(c===0){c=f.getResponseHeader("Content-Length")}d({total:c,loaded:f.responseText.length})}}else{if(f.readyState===f.HEADERS_RECEIVED){c=f.getResponseHeader("Content-Length")}}}};f.open("GET",a,true);f.send(null)};THREE.JSONLoader.prototype.createModel=function(i,g,c){var h=this,e=new THREE.Geometry(),d=(i.scale!==undefined)?1/i.scale:1;this.initMaterials(e,i.materials,c);b(d);f();a(d);e.computeCentroids();e.computeFaceNormals();if(this.hasNormals(e)){e.computeTangents()}function b(S){function s(u,j){return u&(1<<j)}var M,L,A,q,p,K,o,P,D,t,m,B,E,Q,k,O,J,H,F,N,w,I,R,n,y,C,z,l=i.faces,r=i.vertices,G=i.normals,x=i.colors,T=0;for(M=0;M<i.uvs.length;M++){if(i.uvs[M].length){T++}}for(M=0;M<T;M++){e.faceUvs[M]=[];e.faceVertexUvs[M]=[]}q=0;p=r.length;while(q<p){N=new THREE.Vector3();N.x=r[q++]*S;N.y=r[q++]*S;N.z=r[q++]*S;e.vertices.push(N)}q=0;p=l.length;while(q<p){m=l[q++];B=s(m,0);E=s(m,1);Q=s(m,2);k=s(m,3);O=s(m,4);J=s(m,5);H=s(m,6);F=s(m,7);if(B){w=new THREE.Face4();w.a=l[q++];w.b=l[q++];w.c=l[q++];w.d=l[q++];K=4}else{w=new THREE.Face3();w.a=l[q++];w.b=l[q++];w.c=l[q++];K=3}if(E){t=l[q++];w.materialIndex=t}A=e.faces.length;if(Q){for(M=0;M<T;M++){n=i.uvs[M];D=l[q++];C=n[D*2];z=n[D*2+1];e.faceUvs[M][A]=new THREE.UV(C,z)}}if(k){for(M=0;M<T;M++){n=i.uvs[M];y=[];for(L=0;L<K;L++){D=l[q++];C=n[D*2];z=n[D*2+1];y[L]=new THREE.UV(C,z)}e.faceVertexUvs[M][A]=y}}if(O){P=l[q++]*3;R=new THREE.Vector3();R.x=G[P++];R.y=G[P++];R.z=G[P];w.normal=R}if(J){for(M=0;M<K;M++){P=l[q++]*3;R=new THREE.Vector3();R.x=G[P++];R.y=G[P++];R.z=G[P];w.vertexNormals.push(R)}}if(H){o=l[q++];I=new THREE.Color(x[o]);w.color=I}if(F){for(M=0;M<K;M++){o=l[q++];I=new THREE.Color(x[o]);w.vertexColors.push(I)}}e.faces.push(w)}}function f(){var k,j,s,p,o,t,r,q,n,m;if(i.skinWeights){for(k=0,j=i.skinWeights.length;k<j;k+=2){s=i.skinWeights[k];p=i.skinWeights[k+1];o=0;t=0;e.skinWeights.push(new THREE.Vector4(s,p,o,t))}}if(i.skinIndices){for(k=0,j=i.skinIndices.length;k<j;k+=2){r=i.skinIndices[k];q=i.skinIndices[k+1];n=0;m=0;e.skinIndices.push(new THREE.Vector4(r,q,n,m))}}e.bones=i.bones;e.animation=i.animation}function a(m){if(i.morphTargets!==undefined){var p,n,w,k,r,x;for(p=0,n=i.morphTargets.length;p<n;p++){e.morphTargets[p]={};e.morphTargets[p].name=i.morphTargets[p].name;e.morphTargets[p].vertices=[];r=e.morphTargets[p].vertices;x=i.morphTargets[p].vertices;for(w=0,k=x.length;w<k;w+=3){var q=new THREE.Vector3();q.x=x[w]*m;q.y=x[w+1]*m;q.z=x[w+2]*m;r.push(q)}}}if(i.morphColors!==undefined){var p,n,s,u,t,j,o;for(p=0,n=i.morphColors.length;p<n;p++){e.morphColors[p]={};e.morphColors[p].name=i.morphColors[p].name;e.morphColors[p].colors=[];t=e.morphColors[p].colors;j=i.morphColors[p].colors;for(s=0,u=j.length;s<u;s+=3){o=new THREE.Color(16755200);o.setRGB(j[s],j[s+1],j[s+2]);t.push(o)}}}}g(e)};THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var c=this;var a=0;var d=0;var b=function(e){a++;c.dispatchEvent({type:"progress",loaded:a,total:d});if(a===d){c.dispatchEvent({type:"load"})}};this.add=function(e){d++;e.addEventListener("load",b,false)}};THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null;this.path=null};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(b){var c=this;var f=null;if(c.path===null){var d=b.split("/");d.pop();c.path=(d.length<1?".":d.join("/"))}var e=new XMLHttpRequest();e.addEventListener("load",function(g){if(g.target.responseText){f=c.parse(JSON.parse(g.target.responseText),a)}else{c.dispatchEvent({type:"error",message:"Invalid file ["+b+"]"})}},false);e.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+b+"]"})},false);e.open("GET",b,true);e.send(null);var a=new THREE.LoadingMonitor();a.addEventListener("load",function(g){c.dispatchEvent({type:"load",content:f})});a.add(e)},parse:function(aw,V){var W=this;var t=new THREE.Geometry();var S=(aw.scale!==undefined)?1/aw.scale:1;if(aw.materials){t.materials=[];for(var at=0;at<aw.materials.length;++at){var am=aw.materials[at];function A(b){var a=Math.log(b)/Math.LN2;return Math.floor(a)==a}function ad(b){var a=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(a))}function U(j,a,d,b,i,c){j[a]=new THREE.Texture();j[a].sourceFile=d;if(b){j[a].repeat.set(b[0],b[1]);if(b[0]!==1){j[a].wrapS=THREE.RepeatWrapping}if(b[1]!==1){j[a].wrapT=THREE.RepeatWrapping}}if(i){j[a].offset.set(i[0],i[1])}if(c){var u={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(u[c[0]]!==undefined){j[a].wrapS=u[c[0]]}if(u[c[1]]!==undefined){j[a].wrapT=u[c[1]]}}var l=j[a];var m=new THREE.ImageLoader();m.addEventListener("load",function(x){var y=x.content;if(!A(y.width)||!A(y.height)){var w=ad(y.width);var v=ad(y.height);l.image=document.createElement("canvas");l.image.width=w;l.image.height=v;l.image.getContext("2d").drawImage(y,0,0,w,v)}else{l.image=y}l.needsUpdate=true});m.crossOrigin=W.crossOrigin;m.load(W.path+"/"+d);if(V){V.add(m)}}function ar(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var h="MeshLambertMaterial";var I={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(am.shading){var s=am.shading.toLowerCase();if(s==="phong"){h="MeshPhongMaterial"}else{if(s==="basic"){h="MeshBasicMaterial"}}}if(am.blending!==undefined&&THREE[am.blending]!==undefined){I.blending=THREE[am.blending]}if(am.transparent!==undefined||am.opacity<1){I.transparent=am.transparent}if(am.depthTest!==undefined){I.depthTest=am.depthTest}if(am.depthWrite!==undefined){I.depthWrite=am.depthWrite}if(am.vertexColors!==undefined){if(am.vertexColors=="face"){I.vertexColors=THREE.FaceColors}else{if(am.vertexColors){I.vertexColors=THREE.VertexColors}}}if(am.colorDiffuse){I.color=ar(am.colorDiffuse)}else{if(am.DbgColor){I.color=am.DbgColor}}if(am.colorSpecular){I.specular=ar(am.colorSpecular)}if(am.colorAmbient){I.ambient=ar(am.colorAmbient)}if(am.transparency){I.opacity=am.transparency}if(am.specularCoef){I.shininess=am.specularCoef}if(am.visible!==undefined){I.visible=am.visible}if(am.flipSided!==undefined){I.side=THREE.BackSide}if(am.doubleSided!==undefined){I.side=THREE.DoubleSide}if(am.wireframe!==undefined){I.wireframe=am.wireframe}if(am.mapDiffuse){U(I,"map",am.mapDiffuse,am.mapDiffuseRepeat,am.mapDiffuseOffset,am.mapDiffuseWrap)}if(am.mapLight){U(I,"lightMap",am.mapLight,am.mapLightRepeat,am.mapLightOffset,am.mapLightWrap)}if(am.mapBump){U(I,"bumpMap",am.mapBump,am.mapBumpRepeat,am.mapBumpOffset,am.mapBumpWrap)}if(am.mapNormal){U(I,"normalMap",am.mapNormal,am.mapNormalRepeat,am.mapNormalOffset,am.mapNormalWrap)}if(am.mapSpecular){U(I,"specularMap",am.mapSpecular,am.mapSpecularRepeat,am.mapSpecularOffset,am.mapSpecularWrap)}if(am.mapNormal){var az=THREE.ShaderUtils.lib.normal;var q=THREE.UniformsUtils.clone(az.uniforms);q.tNormal.value=I.normalMap;if(am.mapNormalFactor){q.uNormalScale.value.set(am.mapNormalFactor,am.mapNormalFactor)}if(I.map){q.tDiffuse.value=I.map;q.enableDiffuse.value=true}if(I.specularMap){q.tSpecular.value=I.specularMap;q.enableSpecular.value=true}if(I.lightMap){q.tAO.value=I.lightMap;q.enableAO.value=true}q.uDiffuseColor.value.setHex(I.color);q.uSpecularColor.value.setHex(I.specular);q.uAmbientColor.value.setHex(I.ambient);q.uShininess.value=I.shininess;if(I.opacity!==undefined){q.uOpacity.value=I.opacity}var aq={fragmentShader:az.fragmentShader,vertexShader:az.vertexShader,uniforms:q,lights:true,fog:true};var ao=new THREE.ShaderMaterial(aq)}else{var ao=new THREE[h](I)}if(am.DbgName!==undefined){ao.name=am.DbgName}t.materials[at]=ao}}function T(b,a){return b&(1<<a)}var p=aw.faces;var g=aw.vertices;var F=aw.normals;var al=aw.colors;var f=0;if(aw.uvs){for(var at=0;at<aw.uvs.length;at++){if(aw.uvs[at].length){f++}}}for(var at=0;at<f;at++){t.faceUvs[at]=[];t.faceVertexUvs[at]=[]}var af=0;var k=g.length;while(af<k){var D=new THREE.Vector3();D.x=g[af++]*S;D.y=g[af++]*S;D.z=g[af++]*S;t.vertices.push(D)}af=0;k=p.length;while(af<k){var aB=p[af++];var Y=T(aB,0);var au=T(aB,1);var aa=T(aB,2);var r=T(aB,3);var J=T(aB,4);var ai=T(aB,5);var C=T(aB,6);var P=T(aB,7);if(Y){var o=new THREE.Face4();o.a=p[af++];o.b=p[af++];o.c=p[af++];o.d=p[af++];var E=4}else{var o=new THREE.Face3();o.a=p[af++];o.b=p[af++];o.c=p[af++];var E=3}if(au){var H=p[af++];o.materialIndex=H}var Q=t.faces.length;if(aa){for(var at=0;at<f;at++){var e=aw.uvs[at];var O=p[af++];var ah=e[O*2];var ag=e[O*2+1];t.faceUvs[at][Q]=new THREE.UV(ah,ag)}}if(r){for(var at=0;at<f;at++){var e=aw.uvs[at];var ac=[];for(var ap=0;ap<E;ap++){var O=p[af++];var ah=e[O*2];var ag=e[O*2+1];ac[ap]=new THREE.UV(ah,ag)}t.faceVertexUvs[at][Q]=ac}}if(J){var L=p[af++]*3;var aj=new THREE.Vector3();aj.x=F[L++];aj.y=F[L++];aj.z=F[L];o.normal=aj}if(ai){for(at=0;at<E;at++){var L=p[af++]*3;var aj=new THREE.Vector3();aj.x=F[L++];aj.y=F[L++];aj.z=F[L];o.vertexNormals.push(aj)}}if(C){var ak=p[af++];o.color=new THREE.Color(al[ak])}if(P){for(var at=0;at<E;at++){var ak=p[af++];o.vertexColors.push(new THREE.Color(al[ak]))}}t.faces.push(o)}if(aw.skinWeights){for(var at=0,an=aw.skinWeights.length;at<an;at+=2){var ab=aw.skinWeights[at];var Z=aw.skinWeights[at+1];var X=0;var ae=0;t.skinWeights.push(new THREE.Vector4(ab,Z,X,ae))}}if(aw.skinIndices){for(var at=0,an=aw.skinIndices.length;at<an;at+=2){var aA=aw.skinIndices[at];var ay=aw.skinIndices[at+1];var ax=0;var av=0;t.skinIndices.push(new THREE.Vector4(aA,ay,ax,av))}}t.bones=aw.bones;t.animation=aw.animation;if(aw.morphTargets){for(var at=0,an=aw.morphTargets.length;at<an;at++){t.morphTargets[at]={};t.morphTargets[at].name=aw.morphTargets[at].name;t.morphTargets[at].vertices=[];var K=t.morphTargets[at].vertices;var R=aw.morphTargets[at].vertices;for(var ag=0,B=R.length;ag<B;ag+=3){var D=new THREE.Vector3();D.x=R[ag]*S;D.y=R[ag+1]*S;D.z=R[ag+2]*S;K.push(D)}}}if(aw.morphColors){for(var at=0,an=aw.morphColors.length;at<an;at++){t.morphColors[at]={};t.morphColors[at].name=aw.morphColors[at].name;t.morphColors[at].colors=[];var n=t.morphColors[at].colors;var G=aw.morphColors[at].colors;for(var ax=0,N=G.length;ax<N;ax+=3){var M=new THREE.Color(16755200);M.setRGB(G[ax],G[ax+1],G[ax+2]);n.push(M)}}}t.computeCentroids();t.computeFaceNormals();return t}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;THREE.SceneLoader.prototype.load=function(b,a){var c=this;var d=new XMLHttpRequest();d.onreadystatechange=function(){if(d.readyState===4){if(d.status===200||d.status===0){var e=JSON.parse(d.responseText);c.parse(e,a,b)}else{console.error("THREE.SceneLoader: Couldn't load ["+b+"] ["+d.status+"]")}}};d.open("GET",b,true);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};THREE.SceneLoader.prototype.parse=function(ar,a,M){var az=this;var h=THREE.Loader.prototype.extractUrlBase(M);var G,D,F,L,I,B,ai,ad,ae,al,ab,Y,Z,X,am,V,aj,aq,J,U,aA,aL,aG,K,aC,z,ax,j,aI,C,ah,aM;var H=ar;for(var aH in this.geometryHandlerMap){var o=this.geometryHandlerMap[aH]["loaderClass"];this.geometryHandlerMap[aH]["loaderObject"]=new o()}j=0;aI=0;aM={scene:new THREE.Scene(),geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(H.transform){var aB=H.transform.position,aa=H.transform.rotation,aF=H.transform.scale;if(aB){aM.scene.position.set(aB[0],aB[1],aB[2])}if(aa){aM.scene.rotation.set(aa[0],aa[1],aa[2])}if(aF){aM.scene.scale.set(aF[0],aF[1],aF[2])}if(aB||aa||aF){aM.scene.updateMatrix();aM.scene.updateMatrixWorld()}}function P(c,d){if(d=="relativeToHTML"){return c}else{return h+"/"+c}}function aJ(){av(aM.scene,H.objects)}function av(l,i){for(var c in i){if(aM.objects[c]===undefined){var n=i[c];var f=null;if(n.geometry!==undefined){aA=aM.geometries[n.geometry];if(aA){var d=false;aL=aM.materials[n.materials[0]];d=aL instanceof THREE.ShaderMaterial;if(d){aA.computeTangents()}ab=n.position;Y=n.rotation;Z=n.quaternion;X=n.scale;ad=n.matrix;Z=0;if(n.materials.length===0){aL=new THREE.MeshFaceMaterial()}if(n.materials.length>1){aL=new THREE.MeshFaceMaterial()}if(n.morph){f=new THREE.MorphAnimMesh(aA,aL);if(n.duration!==undefined){f.duration=n.duration}if(n.time!==undefined){f.time=n.time}if(n.mirroredLoop!==undefined){f.mirroredLoop=n.mirroredLoop}if(aL.morphNormals){aA.computeMorphNormals()}}else{f=new THREE.Mesh(aA,aL)}f.name=c;if(ad){f.matrixAutoUpdate=false;f.matrix.set(ad[0],ad[1],ad[2],ad[3],ad[4],ad[5],ad[6],ad[7],ad[8],ad[9],ad[10],ad[11],ad[12],ad[13],ad[14],ad[15])}else{f.position.set(ab[0],ab[1],ab[2]);if(Z){f.quaternion.set(Z[0],Z[1],Z[2],Z[3]);f.useQuaternion=true}else{f.rotation.set(Y[0],Y[1],Y[2])}f.scale.set(X[0],X[1],X[2])}f.visible=n.visible;f.castShadow=n.castShadow;f.receiveShadow=n.receiveShadow;l.add(f);aM.objects[c]=f}}else{ab=n.position;Y=n.rotation;Z=n.quaternion;X=n.scale;Z=0;f=new THREE.Object3D();f.name=c;f.position.set(ab[0],ab[1],ab[2]);if(Z){f.quaternion.set(Z[0],Z[1],Z[2],Z[3]);f.useQuaternion=true}else{f.rotation.set(Y[0],Y[1],Y[2])}f.scale.set(X[0],X[1],X[2]);f.visible=(n.visible!==undefined)?n.visible:false;l.add(f);aM.objects[c]=f;aM.empties[c]=f}if(f){if(n.properties!==undefined){for(var g in n.properties){var m=n.properties[g];f.properties[g]=m}}if(n.children!==undefined){av(f,n.children)}}}}}function aw(c,d){aM.geometries[d]=c;aJ()}function S(c){return function(d){aw(d,c);j-=1;az.onLoadComplete();ap()}}function O(c){return function(d){aM.geometries[c]=d}}function ap(){var c={totalModels:C,totalTextures:ah,loadedModels:C-j,loadedTextures:ah-aI};az.callbackProgress(c,aM);az.onLoadProgress();if(j===0&&aI===0){a(aM)}}var au=function(c){aI-=c;ap();az.onLoadComplete()};var A=function(c){return function(){au(c)}};for(L in H.cameras){am=H.cameras[L];if(am.type==="perspective"){aG=new THREE.PerspectiveCamera(am.fov,am.aspect,am.near,am.far)}else{if(am.type==="ortho"){aG=new THREE.OrthographicCamera(am.left,am.right,am.top,am.bottom,am.near,am.far)}}ab=am.position;V=am.target;U=am.up;aG.position.set(ab[0],ab[1],ab[2]);aG.target=new THREE.Vector3(V[0],V[1],V[2]);if(U){aG.up.set(U[0],U[1],U[2])}aM.cameras[L]=aG}var ay,k;for(F in H.lights){ae=H.lights[F];ay=(ae.color!==undefined)?ae.color:16777215;k=(ae.intensity!==undefined)?ae.intensity:1;if(ae.type==="directional"){ab=ae.direction;ax=new THREE.DirectionalLight(ay,k);ax.position.set(ab[0],ab[1],ab[2]);ax.position.normalize()}else{if(ae.type==="point"){ab=ae.position;al=ae.distance;ax=new THREE.PointLight(ay,k,al);ax.position.set(ab[0],ab[1],ab[2])}else{if(ae.type==="ambient"){ax=new THREE.AmbientLight(ay)}}}aM.scene.add(ax);aM.lights[F]=ax}for(I in H.fogs){aj=H.fogs[I];if(aj.type==="linear"){K=new THREE.Fog(0,aj.near,aj.far)}else{if(aj.type==="exp2"){K=new THREE.FogExp2(0,aj.density)}}am=aj.color;K.color.setRGB(am[0],am[1],am[2]);aM.fogs[I]=K}if(aM.cameras&&H.defaults.camera){aM.currentCamera=aM.cameras[H.defaults.camera]}if(aM.fogs&&H.defaults.fog){aM.scene.fog=aM.fogs[H.defaults.fog]}am=H.defaults.bgcolor;aM.bgColor=new THREE.Color();aM.bgColor.setRGB(am[0],am[1],am[2]);aM.bgColorAlpha=H.defaults.bgalpha;for(G in H.geometries){ai=H.geometries[G];if(ai.type in this.geometryHandlerMap){j+=1;az.onLoadStart()}}C=j;for(G in H.geometries){ai=H.geometries[G];if(ai.type==="cube"){aA=new THREE.CubeGeometry(ai.width,ai.height,ai.depth,ai.segmentsWidth,ai.segmentsHeight,ai.segmentsDepth,null,ai.flipped,ai.sides);aM.geometries[G]=aA}else{if(ai.type==="plane"){aA=new THREE.PlaneGeometry(ai.width,ai.height,ai.segmentsWidth,ai.segmentsHeight);aM.geometries[G]=aA}else{if(ai.type==="sphere"){aA=new THREE.SphereGeometry(ai.radius,ai.segmentsWidth,ai.segmentsHeight);aM.geometries[G]=aA}else{if(ai.type==="cylinder"){aA=new THREE.CylinderGeometry(ai.topRad,ai.botRad,ai.height,ai.radSegs,ai.heightSegs);aM.geometries[G]=aA}else{if(ai.type==="torus"){aA=new THREE.TorusGeometry(ai.radius,ai.tube,ai.segmentsR,ai.segmentsT);aM.geometries[G]=aA}else{if(ai.type==="icosahedron"){aA=new THREE.IcosahedronGeometry(ai.radius,ai.subdivisions);aM.geometries[G]=aA}else{if(ai.type in this.geometryHandlerMap){var an={};for(var T in ai){if(T!=="type"&&T!=="url"){an[T]=ai[T]}}var Q=this.geometryHandlerMap[ai.type]["loaderObject"];Q.load(P(ai.url,H.urlBaseType),S(G),an)}else{if(ai.type==="embedded"){var x=H.embeds[ai.id],b="";x.metadata=H.metadata;if(x){var af=this.geometryHandlerMap.ascii["loaderObject"];af.createModel(x,O(G),b)}}}}}}}}}}for(B in H.textures){aq=H.textures[B];if(aq.url instanceof Array){aI+=aq.url.length;for(var ac=0;ac<aq.url.length;ac++){az.onLoadStart()}}else{aI+=1;az.onLoadStart()}}ah=aI;for(B in H.textures){aq=H.textures[B];if(aq.mapping!==undefined&&THREE[aq.mapping]!==undefined){aq.mapping=new THREE[aq.mapping]()}if(aq.url instanceof Array){var v=aq.url.length;var W=[];for(var ag=0;ag<v;ag++){W[ag]=P(aq.url[ag],H.urlBaseType)}var w=W[0].endsWith(".dds");if(w){aC=THREE.ImageUtils.loadCompressedTextureCube(W,aq.mapping,A(v))}else{aC=THREE.ImageUtils.loadTextureCube(W,aq.mapping,A(v))}}else{var w=aq.url.toLowerCase().endsWith(".dds");var aE=P(aq.url,H.urlBaseType);var aK=A(1);if(w){aC=THREE.ImageUtils.loadCompressedTexture(aE,aq.mapping,aK)}else{aC=THREE.ImageUtils.loadTexture(aE,aq.mapping,aK)}if(THREE[aq.minFilter]!==undefined){aC.minFilter=THREE[aq.minFilter]}if(THREE[aq.magFilter]!==undefined){aC.magFilter=THREE[aq.magFilter]}if(aq.anisotropy){aC.anisotropy=aq.anisotropy}if(aq.repeat){aC.repeat.set(aq.repeat[0],aq.repeat[1]);if(aq.repeat[0]!==1){aC.wrapS=THREE.RepeatWrapping}if(aq.repeat[1]!==1){aC.wrapT=THREE.RepeatWrapping}}if(aq.offset){aC.offset.set(aq.offset[0],aq.offset[1])}if(aq.wrap){var ak={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(ak[aq.wrap[0]]!==undefined){aC.wrapS=ak[aq.wrap[0]]}if(ak[aq.wrap[1]]!==undefined){aC.wrapT=ak[aq.wrap[1]]}}}aM.textures[B]=aC}for(D in H.materials){ad=H.materials[D];for(J in ad.parameters){if(J==="envMap"||J==="map"||J==="lightMap"||J==="bumpMap"){ad.parameters[J]=aM.textures[ad.parameters[J]]}else{if(J==="shading"){ad.parameters[J]=(ad.parameters[J]==="flat")?THREE.FlatShading:THREE.SmoothShading}else{if(J==="side"){if(ad.parameters[J]=="double"){ad.parameters[J]=THREE.DoubleSide}else{if(ad.parameters[J]=="back"){ad.parameters[J]=THREE.BackSide}else{ad.parameters[J]=THREE.FrontSide}}}else{if(J==="blending"){ad.parameters[J]=ad.parameters[J] in THREE?THREE[ad.parameters[J]]:THREE.NormalBlending}else{if(J==="combine"){ad.parameters[J]=(ad.parameters[J]=="MixOperation")?THREE.MixOperation:THREE.MultiplyOperation}else{if(J==="vertexColors"){if(ad.parameters[J]=="face"){ad.parameters[J]=THREE.FaceColors}else{if(ad.parameters[J]){ad.parameters[J]=THREE.VertexColors}}}else{if(J==="wrapRGB"){var at=ad.parameters[J];ad.parameters[J]=new THREE.Vector3(at[0],at[1],at[2])}}}}}}}}if(ad.parameters.opacity!==undefined&&ad.parameters.opacity<1){ad.parameters.transparent=true}if(ad.parameters.normalMap){var aD=THREE.ShaderUtils.lib.normal;var E=THREE.UniformsUtils.clone(aD.uniforms);var y=ad.parameters.color;var e=ad.parameters.specular;var R=ad.parameters.ambient;var ao=ad.parameters.shininess;E.tNormal.value=aM.textures[ad.parameters.normalMap];if(ad.parameters.normalScale){E.uNormalScale.value.set(ad.parameters.normalScale[0],ad.parameters.normalScale[1])}if(ad.parameters.map){E.tDiffuse.value=ad.parameters.map;E.enableDiffuse.value=true}if(ad.parameters.envMap){E.tCube.value=ad.parameters.envMap;E.enableReflection.value=true;E.uReflectivity.value=ad.parameters.reflectivity}if(ad.parameters.lightMap){E.tAO.value=ad.parameters.lightMap;E.enableAO.value=true}if(ad.parameters.specularMap){E.tSpecular.value=aM.textures[ad.parameters.specularMap];E.enableSpecular.value=true}if(ad.parameters.displacementMap){E.tDisplacement.value=aM.textures[ad.parameters.displacementMap];E.enableDisplacement.value=true;E.uDisplacementBias.value=ad.parameters.displacementBias;E.uDisplacementScale.value=ad.parameters.displacementScale}E.uDiffuseColor.value.setHex(y);E.uSpecularColor.value.setHex(e);E.uAmbientColor.value.setHex(R);E.uShininess.value=ao;if(ad.parameters.opacity){E.uOpacity.value=ad.parameters.opacity}var N={fragmentShader:aD.fragmentShader,vertexShader:aD.vertexShader,uniforms:E,lights:true,fog:true};aL=new THREE.ShaderMaterial(N)}else{aL=new THREE[ad.type](ad.parameters)}aM.materials[D]=aL}aJ();az.callbackSync(aM);ap()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this;var c=new Image();c.addEventListener("load",function(){var d=new THREE.Texture(c);d.needsUpdate=true;b.dispatchEvent({type:"load",content:d})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(b.crossOrigin){c.crossOrigin=b.crossOrigin}c.src=a}};THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthTest=true;this.depthWrite=true;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=false;this.visible=true;this.needsUpdate=true};THREE.Material.prototype.setValues=function(a){if(a===undefined){return}for(var b in a){var d=a[b];if(d===undefined){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if(b in this){var c=this[b];if(c instanceof THREE.Color&&d instanceof THREE.Color){c.copy(d)}else{if(c instanceof THREE.Color&&typeof(d)==="number"){c.setHex(d)}else{if(c instanceof THREE.Vector3&&d instanceof THREE.Vector3){c.copy(d)}else{this[b]=d}}}}}};THREE.Material.prototype.clone=function(a){if(a===undefined){a=new THREE.Material()}a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);if(a!==-1){THREE.MaterialLibrary.splice(a,1)}};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=false;this.perPixel=false;this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial();THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial()};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(c,b){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.fragmentShader="void main() {}";this.vertexShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial();THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.Texture=function(d,b,f,e,i,c,h,g,a){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.image=d;this.mapping=b!==undefined?b:new THREE.UVMapping();this.wrapS=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrapT=e!==undefined?e:THREE.ClampToEdgeWrapping;this.magFilter=i!==undefined?i:THREE.LinearFilter;this.minFilter=c!==undefined?c:THREE.LinearMipMapLinearFilter;this.anisotropy=a!==undefined?a:1;this.format=h!==undefined?h:THREE.RGBAFormat;this.type=g!==undefined?g:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.needsUpdate=false;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture();a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);if(a!==-1){THREE.TextureLibrary.splice(a,1)}}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(d,c,j,h,g,a,f,e,i,b){THREE.Texture.call(this,null,a,f,e,i,b,h,g);this.image={width:c,height:j};this.mipmaps=d};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture();a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(e,c,j,h,g,a,f,d,i,b){THREE.Texture.call(this,null,a,f,d,i,b,h,g);this.image={data:e,width:c,height:j}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(a){if(a===undefined){a=new THREE.Particle(this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(b,a){THREE.Object3D.call(this);this.geometry=b;this.material=(a!==undefined)?a:new THREE.ParticleBasicMaterial({color:Math.random()*16777215});this.sortParticles=false;if(this.geometry){if(this.geometry.boundingSphere===null){this.geometry.computeBoundingSphere()}this.boundRadius=b.boundingSphere.radius}this.frustumCulled=false};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){if(a===undefined){a=new THREE.ParticleSystem(this.geometry,this.material)}a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(c,b,a){THREE.Object3D.call(this);this.geometry=c;this.material=(b!==undefined)?b:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=(a!==undefined)?a:THREE.LineStrip;if(this.geometry){if(!this.geometry.boundingSphere){this.geometry.computeBoundingSphere()}}};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){if(a===undefined){a=new THREE.Line(this.geometry,this.material,this.type)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(c,b){THREE.Object3D.call(this);this.geometry=c;this.material=(b!==undefined)?b:new THREE.MeshBasicMaterial({color:Math.random()*16777215,wireframe:true});if(this.geometry){if(this.geometry.boundingSphere===null){this.geometry.computeBoundingSphere()}this.boundRadius=c.boundingSphere.radius;if(this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0;a<this.geometry.morphTargets.length;a++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}}}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==undefined){return this.morphTargetDictionary[a]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){if(a===undefined){a=new THREE.Mesh(this.geometry,this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4()};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(d,b){if(this.matrixAutoUpdate){b|=this.updateMatrix()}if(b||this.matrixWorldNeedsUpdate){if(d){this.skinMatrix.multiply(d,this.matrix)}else{this.skinMatrix.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;b=true}var e,c,a=this.children.length;for(c=0;c<a;c++){this.children[c].update(this.skinMatrix,b)}};THREE.SkinnedMesh=function(f,e,d){THREE.Mesh.call(this,f,e);this.useVertexTexture=d!==undefined?d:true;this.identityMatrix=new THREE.Matrix4();this.bones=[];this.boneMatrices=[];var g,i,j,c,a,l;if(this.geometry.bones!==undefined){for(g=0;g<this.geometry.bones.length;g++){j=this.geometry.bones[g];c=j.pos;a=j.rotq;l=j.scl;i=this.addBone();i.name=j.name;i.position.set(c[0],c[1],c[2]);i.quaternion.set(a[0],a[1],a[2],a[3]);i.useQuaternion=true;if(l!==undefined){i.scale.set(l[0],l[1],l[2])}else{i.scale.set(1,1,1)}}for(g=0;g<this.bones.length;g++){j=this.geometry.bones[g];i=this.bones[g];if(j.parent===-1){this.add(i)}else{this.bones[j.parent].add(i)}}var h=this.bones.length;if(this.useVertexTexture){var k;if(h>256){k=64}else{if(h>64){k=32}else{if(h>16){k=16}else{k=8}}}this.boneTextureWidth=k;this.boneTextureHeight=k;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false}else{this.boneMatrices=new Float32Array(16*h)}this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){if(a===undefined){a=new THREE.Bone(this)}this.bones.push(a);return a};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(f){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||f){if(this.parent){this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;f=true}for(var e=0,d=this.children.length;e<d;e++){var h=this.children[e];if(h instanceof THREE.Bone){h.update(this.identityMatrix,false)}else{h.updateMatrixWorld(true)}}if(this.boneInverses==undefined){this.boneInverses=[];for(var a=0,g=this.bones.length;a<g;a++){var c=new THREE.Matrix4();c.getInverse(this.bones[a].skinMatrix);this.boneInverses.push(c)}}for(var a=0,g=this.bones.length;a<g;a++){THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]);THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,a*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}};THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(true);for(var b=0;b<this.geometry.skinIndices.length;b++){var a=this.geometry.skinWeights[b];var c=1/a.lengthManhattan();if(c!==Infinity){a.multiplyScalar(c)}else{a.set(1)}}};THREE.SkinnedMesh.prototype.clone=function(a){if(a===undefined){a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)}THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4();THREE.MorphAnimMesh=function(b,a){THREE.Mesh.call(this,b,a);this.duration=1000;this.mirroredLoop=false;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(b,a){this.startKeyframe=b;this.endKeyframe=a;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var g=this.geometry;if(!g.animations){g.animations={}}var a,l=g.animations;var f=/([a-z]+)(\d+)/;for(var d=0,j=g.morphTargets.length;d<j;d++){var k=g.morphTargets[d];var c=k.name.match(f);if(c&&c.length>1){var h=c[1];var e=c[2];if(!l[h]){l[h]={start:Infinity,end:-Infinity}}var b=l[h];if(d<b.start){b.start=d}if(d>b.end){b.end=d}if(!a){a=h}}}g.firstAnimation=a};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(b,c,a){if(!this.geometry.animations){this.geometry.animations={}}this.geometry.animations[b]={start:c,end:a}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,c){var b=this.geometry.animations[a];if(b){this.setFrameRange(b.start,b.end);this.duration=1000*((b.end-b.start)/c);this.time=0}else{console.warn("animation["+a+"] undefined")}};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true}if(this.time<0){this.time=0;this.directionBackwards=false}}}else{this.time=this.time%this.duration;if(this.time<0){this.time+=this.duration}}var a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);if(a!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[a]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=a}var b=(this.time%c)/c;if(this.directionBackwards){b=1-b}this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.MorphAnimMesh.prototype.clone=function(a){if(a===undefined){a=new THREE.MorphAnimMesh(this.geometry,this.material)}a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(b,a){THREE.Object3D.call(this);this.geometry=b;this.material=a};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(a){if(a===undefined){a=new THREE.Ribbon(this.geometry,this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(c,b){if(b===undefined){b=0}b=Math.abs(b);for(var a=0;a<this.LODs.length;a++){if(b<this.LODs[a].visibleAtDistance){break}}this.LODs.splice(a,0,{visibleAtDistance:b,object3D:c});this.add(c)};THREE.LOD.prototype.update=function(c){if(this.LODs.length>1){c.matrixWorldInverse.getInverse(c.matrixWorld);var b=c.matrixWorldInverse;var d=-(b.elements[2]*this.matrixWorld.elements[12]+b.elements[6]*this.matrixWorld.elements[13]+b.elements[10]*this.matrixWorld.elements[14]+b.elements[14]);this.LODs[0].object3D.visible=true;for(var a=1;a<this.LODs.length;a++){if(d>=this.LODs[a].visibleAtDistance){this.LODs[a-1].object3D.visible=false;this.LODs[a].object3D.visible=true}else{break}}for(;a<this.LODs.length;a++){this.LODs[a].object3D.visible=false}}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=(a.color!==undefined)?new THREE.Color(a.color):new THREE.Color(16777215);this.map=(a.map!==undefined)?a.map:new THREE.Texture();this.blending=(a.blending!==undefined)?a.blending:THREE.NormalBlending;this.blendSrc=a.blendSrc!==undefined?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=a.blendDst!==undefined?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=a.blendEquation!==undefined?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=(a.useScreenCoordinates!==undefined)?a.useScreenCoordinates:true;this.mergeWith3D=(a.mergeWith3D!==undefined)?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=(a.affectedByDistance!==undefined)?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=(a.scaleByViewport!==undefined)?a.scaleByViewport:!this.affectedByDistance;this.alignment=(a.alignment instanceof THREE.Vector2)?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1){this.matrix.scale(this.scale);this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)}this.matrixWorldNeedsUpdate=true};THREE.Sprite.prototype.clone=function(a){if(a===undefined){a=new THREE.Sprite({})}a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,a);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.fog=null;this.overrideMaterial=null;this.matrixAutoUpdate=false;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light){if(this.__lights.indexOf(a)===-1){this.__lights.push(a)}if(a.target&&a.target.parent===undefined){this.add(a.target)}}else{if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){if(this.__objects.indexOf(a)===-1){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);if(b!==-1){this.__objectsRemoved.splice(b,1)}}}}for(var d=0;d<a.children.length;d++){this.__addObject(a.children[d])}};THREE.Scene.prototype.__removeObject=function(b){if(b instanceof THREE.Light){var d=this.__lights.indexOf(b);if(d!==-1){this.__lights.splice(d,1)}}else{if(!(b instanceof THREE.Camera)){var d=this.__objects.indexOf(b);if(d!==-1){this.__objects.splice(d,1);this.__objectsRemoved.push(b);var a=this.__objectsAdded.indexOf(b);if(a!==-1){this.__objectsAdded.splice(a,1)}}}}for(var e=0;e<b.children.length;e++){this.__removeObject(b.children[e])}};THREE.Fog=function(c,b,a){this.color=new THREE.Color(c);this.near=(b!==undefined)?b:1;this.far=(a!==undefined)?a:1000};THREE.FogExp2=function(b,a){this.color=new THREE.Color(b);this.density=(a!==undefined)?a:0.00025};THREE.CanvasRenderer=function(A){console.log("THREE.CanvasRenderer",THREE.REVISION);A=A||{};var u=this,x,B,m,b=new THREE.Projector(),h=A.canvas!==undefined?A.canvas:document.createElement("canvas"),w,aq,ad,E,f=h.getContext("2d"),C=new THREE.Color(0),ae=0,ar=1,ao=0,v=null,an=null,G=null,k=null,ak=null,ac,aa,Y,X,W=new THREE.RenderableVertex(),U=new THREE.RenderableVertex(),t,s,e,d,aA,ax,am,al,R,P,J,I,g=new THREE.Color(),q=new THREE.Color(),p=new THREE.Color(),o=new THREE.Color(),n=new THREE.Color(),S=new THREE.Color(),r=new THREE.Color(),D={},N={},M,aC,T,j,az,av,aj,ai,Q,O,c=new THREE.Rectangle(),aD=new THREE.Rectangle(),at=new THREE.Rectangle(),a=false,au=new THREE.Color(),z=new THREE.Color(),Z=new THREE.Color(),ah=Math.PI*2,l=new THREE.Vector3(),ay,i,aB,L,H,K,ab=16;ay=document.createElement("canvas");ay.width=ay.height=2;i=ay.getContext("2d");i.fillStyle="rgba(0,0,0,1)";i.fillRect(0,0,2,2);aB=i.getImageData(0,0,2,2);L=aB.data;H=document.createElement("canvas");H.width=H.height=ab;K=H.getContext("2d");K.translate(-ab/2,-ab/2);K.scale(ab,ab);ab--;this.domElement=h;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.setSize=function(aF,aE){w=aF;aq=aE;ad=Math.floor(w/2);E=Math.floor(aq/2);h.width=w;h.height=aq;c.set(-ad,-E,ad,E);aD.set(-ad,-E,ad,E);ar=1;ao=0;v=null;an=null;G=null;k=null;ak=null};this.setClearColor=function(aE,aF){C.copy(aE);ae=aF!==undefined?aF:1;aD.set(-ad,-E,ad,E)};this.setClearColorHex=function(aF,aE){C.setHex(aF);ae=aE!==undefined?aE:1;aD.set(-ad,-E,ad,E)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){f.setTransform(1,0,0,-1,ad,E);if(aD.isEmpty()===false){aD.minSelf(c);aD.inflate(2);if(ae<1){f.clearRect(Math.floor(aD.getX()),Math.floor(aD.getY()),Math.floor(aD.getWidth()),Math.floor(aD.getHeight()))}if(ae>0){ag(THREE.NormalBlending);y(1);af("rgba("+Math.floor(C.r*255)+","+Math.floor(C.g*255)+","+Math.floor(C.b*255)+","+ae+")");f.fillRect(Math.floor(aD.getX()),Math.floor(aD.getY()),Math.floor(aD.getWidth()),Math.floor(aD.getHeight()))}aD.empty()}};this.render=function(aW,aT){if(aT instanceof THREE.Camera===false){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");return}var aV,aH,aI,aP;this.autoClear===true?this.clear():f.setTransform(1,0,0,-1,ad,E);u.info.render.vertices=0;u.info.render.faces=0;x=b.projectScene(aW,aT,this.sortObjects,this.sortElements);B=x.elements;m=x.lights;a=m.length>0;if(a===true){aK()}for(aV=0,aH=B.length;aV<aH;aV++){aI=B[aV];aP=aI.material;if(aP===undefined||aP.visible===false){continue}at.empty();if(aI instanceof THREE.RenderableParticle){ac=aI;ac.x*=ad;ac.y*=E;aM(ac,aI,aP,aW)}else{if(aI instanceof THREE.RenderableLine){ac=aI.v1;aa=aI.v2;ac.positionScreen.x*=ad;ac.positionScreen.y*=E;aa.positionScreen.x*=ad;aa.positionScreen.y*=E;at.addPoint(ac.positionScreen.x,ac.positionScreen.y);at.addPoint(aa.positionScreen.x,aa.positionScreen.y);if(c.intersects(at)===true){aG(ac,aa,aI,aP,aW)}}else{if(aI instanceof THREE.RenderableFace3){ac=aI.v1;aa=aI.v2;Y=aI.v3;ac.positionScreen.x*=ad;ac.positionScreen.y*=E;aa.positionScreen.x*=ad;aa.positionScreen.y*=E;Y.positionScreen.x*=ad;Y.positionScreen.y*=E;if(aP.overdraw===true){aE(ac.positionScreen,aa.positionScreen);aE(aa.positionScreen,Y.positionScreen);aE(Y.positionScreen,ac.positionScreen)}at.add3Points(ac.positionScreen.x,ac.positionScreen.y,aa.positionScreen.x,aa.positionScreen.y,Y.positionScreen.x,Y.positionScreen.y);if(c.intersects(at)===true){aL(ac,aa,Y,0,1,2,aI,aP,aW)}}else{if(aI instanceof THREE.RenderableFace4){ac=aI.v1;aa=aI.v2;Y=aI.v3;X=aI.v4;ac.positionScreen.x*=ad;ac.positionScreen.y*=E;aa.positionScreen.x*=ad;aa.positionScreen.y*=E;Y.positionScreen.x*=ad;Y.positionScreen.y*=E;X.positionScreen.x*=ad;X.positionScreen.y*=E;W.positionScreen.copy(aa.positionScreen);U.positionScreen.copy(X.positionScreen);if(aP.overdraw===true){aE(ac.positionScreen,aa.positionScreen);aE(aa.positionScreen,X.positionScreen);aE(X.positionScreen,ac.positionScreen);aE(Y.positionScreen,W.positionScreen);aE(Y.positionScreen,U.positionScreen)}at.addPoint(ac.positionScreen.x,ac.positionScreen.y);at.addPoint(aa.positionScreen.x,aa.positionScreen.y);at.addPoint(Y.positionScreen.x,Y.positionScreen.y);at.addPoint(X.positionScreen.x,X.positionScreen.y);if(c.intersects(at)===true){aJ(ac,aa,Y,X,W,U,aI,aP,aW)}}}}}aD.addRectangle(at)}f.setTransform(1,0,0,1,0,0);function aK(){au.setRGB(0,0,0);z.setRGB(0,0,0);Z.setRGB(0,0,0);for(var a2=0,a3=m.length;a2<a3;a2++){var a1=m[a2];var a0=a1.color;if(a1 instanceof THREE.AmbientLight){au.r+=a0.r;au.g+=a0.g;au.b+=a0.b}else{if(a1 instanceof THREE.DirectionalLight){z.r+=a0.r;z.g+=a0.g;z.b+=a0.b}else{if(a1 instanceof THREE.PointLight){Z.r+=a0.r;Z.g+=a0.g;Z.b+=a0.b}}}}}function aR(a5,a6,a1){for(var a0=0,a7=m.length;a0<a7;a0++){var a3=m[a0];var a2=a3.color;if(a3 instanceof THREE.DirectionalLight){var a8=a3.matrixWorld.getPosition().normalize();var a4=a6.dot(a8);if(a4<=0){continue}a4*=a3.intensity;a1.r+=a2.r*a4;a1.g+=a2.g*a4;a1.b+=a2.b*a4}else{if(a3 instanceof THREE.PointLight){var a8=a3.matrixWorld.getPosition();var a4=a6.dot(l.sub(a8,a5).normalize());if(a4<=0){continue}a4*=a3.distance==0?1:1-Math.min(a5.distanceTo(a8)/a3.distance,1);if(a4==0){continue}a4*=a3.intensity;a1.r+=a2.r*a4;a1.g+=a2.g*a4;a1.b+=a2.b*a4}}}}function aM(a6,a2,a4,a3){y(a4.opacity);ag(a4.blending);var a0,ba,a8,a7,a5,a9,a1;if(a4 instanceof THREE.ParticleBasicMaterial){if(a4.map===null){a8=a2.object.scale.x;a7=a2.object.scale.y;a8*=a2.scale.x*ad;a7*=a2.scale.y*E;at.set(a6.x-a8,a6.y-a7,a6.x+a8,a6.y+a7);if(c.intersects(at)===false){return}af(a4.color.getContextStyle());f.save();f.translate(a6.x,a6.y);f.rotate(-a2.rotation);f.scale(a8,a7);f.fillRect(-1,-1,2,2);f.restore()}else{a5=a4.map.image;a9=a5.width>>1;a1=a5.height>>1;a8=a2.scale.x*ad;a7=a2.scale.y*E;a0=a8*a9;ba=a7*a1;at.set(a6.x-a0,a6.y-ba,a6.x+a0,a6.y+ba);if(c.intersects(at)===false){return}f.save();f.translate(a6.x,a6.y);f.rotate(-a2.rotation);f.scale(a8,-a7);f.translate(-a9,-a1);f.drawImage(a5,0,0);f.restore()}}else{if(a4 instanceof THREE.ParticleCanvasMaterial){a0=a2.scale.x*ad;ba=a2.scale.y*E;at.set(a6.x-a0,a6.y-ba,a6.x+a0,a6.y+ba);if(c.intersects(at)===false){return}ap(a4.color.getContextStyle());af(a4.color.getContextStyle());f.save();f.translate(a6.x,a6.y);f.rotate(-a2.rotation);f.scale(a0,ba);a4.program(f);f.restore()}}}function aG(a4,a3,a0,a1,a2){y(a1.opacity);ag(a1.blending);f.beginPath();f.moveTo(a4.positionScreen.x,a4.positionScreen.y);f.lineTo(a3.positionScreen.x,a3.positionScreen.y);if(a1 instanceof THREE.LineBasicMaterial){F(a1.linewidth);V(a1.linecap);aw(a1.linejoin);ap(a1.color.getContextStyle());f.stroke();at.inflate(a1.linewidth*2)}}function aL(a9,a7,a6,a2,a1,a0,a3,a5,a4){u.info.render.vertices+=3;u.info.render.faces++;y(a5.opacity);ag(a5.blending);t=a9.positionScreen.x;s=a9.positionScreen.y;e=a7.positionScreen.x;d=a7.positionScreen.y;aA=a6.positionScreen.x;ax=a6.positionScreen.y;aS(t,s,e,d,aA,ax);if((a5 instanceof THREE.MeshLambertMaterial||a5 instanceof THREE.MeshPhongMaterial)&&a5.map===null&&a5.map===null){S.copy(a5.color);r.copy(a5.emissive);if(a5.vertexColors===THREE.FaceColors){S.r*=a3.color.r;S.g*=a3.color.g;S.b*=a3.color.b}if(a===true){if(a5.wireframe===false&&a5.shading==THREE.SmoothShading&&a3.vertexNormalsLength==3){q.r=p.r=o.r=au.r;q.g=p.g=o.g=au.g;q.b=p.b=o.b=au.b;aR(a3.v1.positionWorld,a3.vertexNormalsWorld[0],q);aR(a3.v2.positionWorld,a3.vertexNormalsWorld[1],p);aR(a3.v3.positionWorld,a3.vertexNormalsWorld[2],o);q.r=q.r*S.r+r.r;q.g=q.g*S.g+r.g;q.b=q.b*S.b+r.b;p.r=p.r*S.r+r.r;p.g=p.g*S.g+r.g;p.b=p.b*S.b+r.b;o.r=o.r*S.r+r.r;o.g=o.g*S.g+r.g;o.b=o.b*S.b+r.b;n.r=(p.r+o.r)*0.5;n.g=(p.g+o.g)*0.5;n.b=(p.b+o.b)*0.5;T=aZ(q,p,o,n);aU(t,s,e,d,aA,ax,0,0,1,0,0,1,T)}else{g.r=au.r;g.g=au.g;g.b=au.b;aR(a3.centroidWorld,a3.normalWorld,g);g.r=g.r*S.r+r.r;g.g=g.g*S.g+r.g;g.b=g.b*S.b+r.b;a5.wireframe===true?aY(g,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aX(g)}}else{a5.wireframe===true?aY(a5.color,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aX(a5.color)}}else{if(a5 instanceof THREE.MeshBasicMaterial||a5 instanceof THREE.MeshLambertMaterial||a5 instanceof THREE.MeshPhongMaterial){if(a5.map!==null){if(a5.map.mapping instanceof THREE.UVMapping){j=a3.uvs[0];aF(t,s,e,d,aA,ax,j[a2].u,j[a2].v,j[a1].u,j[a1].v,j[a0].u,j[a0].v,a5.map)}}else{if(a5.envMap!==null){if(a5.envMap.mapping instanceof THREE.SphericalReflectionMapping){var a8=aT.matrixWorldInverse;l.copy(a3.vertexNormalsWorld[a2]);az=(l.x*a8.elements[0]+l.y*a8.elements[4]+l.z*a8.elements[8])*0.5+0.5;av=(l.x*a8.elements[1]+l.y*a8.elements[5]+l.z*a8.elements[9])*0.5+0.5;l.copy(a3.vertexNormalsWorld[a1]);aj=(l.x*a8.elements[0]+l.y*a8.elements[4]+l.z*a8.elements[8])*0.5+0.5;ai=(l.x*a8.elements[1]+l.y*a8.elements[5]+l.z*a8.elements[9])*0.5+0.5;l.copy(a3.vertexNormalsWorld[a0]);Q=(l.x*a8.elements[0]+l.y*a8.elements[4]+l.z*a8.elements[8])*0.5+0.5;O=(l.x*a8.elements[1]+l.y*a8.elements[5]+l.z*a8.elements[9])*0.5+0.5;aF(t,s,e,d,aA,ax,az,av,aj,ai,Q,O,a5.envMap)}}else{g.copy(a5.color);if(a5.vertexColors===THREE.FaceColors){g.r*=a3.color.r;g.g*=a3.color.g;g.b*=a3.color.b}a5.wireframe===true?aY(g,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aX(g)}}}else{if(a5 instanceof THREE.MeshDepthMaterial){M=aT.near;aC=aT.far;q.r=q.g=q.b=1-aO(a9.positionScreen.z,M,aC);p.r=p.g=p.b=1-aO(a7.positionScreen.z,M,aC);o.r=o.g=o.b=1-aO(a6.positionScreen.z,M,aC);n.r=(p.r+o.r)*0.5;n.g=(p.g+o.g)*0.5;n.b=(p.b+o.b)*0.5;T=aZ(q,p,o,n);aU(t,s,e,d,aA,ax,0,0,1,0,0,1,T)}else{if(a5 instanceof THREE.MeshNormalMaterial){g.r=aN(a3.normalWorld.x);g.g=aN(a3.normalWorld.y);g.b=aN(a3.normalWorld.z);a5.wireframe===true?aY(g,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aX(g)}}}}}function aJ(a8,a7,a6,a5,a4,a2,a0,a3,a1){u.info.render.vertices+=4;u.info.render.faces++;y(a3.opacity);ag(a3.blending);if((a3.map!==undefined&&a3.map!==null)||(a3.envMap!==undefined&&a3.envMap!==null)){aL(a8,a7,a5,0,1,3,a0,a3,a1);aL(a4,a6,a2,1,2,3,a0,a3,a1);return}t=a8.positionScreen.x;s=a8.positionScreen.y;e=a7.positionScreen.x;d=a7.positionScreen.y;aA=a6.positionScreen.x;ax=a6.positionScreen.y;am=a5.positionScreen.x;al=a5.positionScreen.y;R=a4.positionScreen.x;P=a4.positionScreen.y;J=a2.positionScreen.x;I=a2.positionScreen.y;if(a3 instanceof THREE.MeshLambertMaterial||a3 instanceof THREE.MeshPhongMaterial){S.copy(a3.color);r.copy(a3.emissive);if(a3.vertexColors===THREE.FaceColors){S.r*=a0.color.r;S.g*=a0.color.g;S.b*=a0.color.b}if(a===true){if(a3.wireframe===false&&a3.shading==THREE.SmoothShading&&a0.vertexNormalsLength==4){q.r=p.r=o.r=n.r=au.r;q.g=p.g=o.g=n.g=au.g;q.b=p.b=o.b=n.b=au.b;aR(a0.v1.positionWorld,a0.vertexNormalsWorld[0],q);aR(a0.v2.positionWorld,a0.vertexNormalsWorld[1],p);aR(a0.v4.positionWorld,a0.vertexNormalsWorld[3],o);aR(a0.v3.positionWorld,a0.vertexNormalsWorld[2],n);q.r=q.r*S.r+r.r;q.g=q.g*S.g+r.g;q.b=q.b*S.b+r.b;p.r=p.r*S.r+r.r;p.g=p.g*S.g+r.g;p.b=p.b*S.b+r.b;o.r=o.r*S.r+r.r;o.g=o.g*S.g+r.g;o.b=o.b*S.b+r.b;n.r=n.r*S.r+r.r;n.g=n.g*S.g+r.g;n.b=n.b*S.b+r.b;T=aZ(q,p,o,n);aS(t,s,e,d,am,al);aU(t,s,e,d,am,al,0,0,1,0,0,1,T);aS(R,P,aA,ax,J,I);aU(R,P,aA,ax,J,I,1,0,1,1,0,1,T)}else{g.r=au.r;g.g=au.g;g.b=au.b;aR(a0.centroidWorld,a0.normalWorld,g);g.r=g.r*S.r+r.r;g.g=g.g*S.g+r.g;g.b=g.b*S.b+r.b;aQ(t,s,e,d,aA,ax,am,al);a3.wireframe===true?aY(g,a3.wireframeLinewidth,a3.wireframeLinecap,a3.wireframeLinejoin):aX(g)}}else{g.r=S.r+r.r;g.g=S.g+r.g;g.b=S.b+r.b;aQ(t,s,e,d,aA,ax,am,al);a3.wireframe===true?aY(g,a3.wireframeLinewidth,a3.wireframeLinecap,a3.wireframeLinejoin):aX(g)}}else{if(a3 instanceof THREE.MeshBasicMaterial){g.copy(a3.color);if(a3.vertexColors===THREE.FaceColors){g.r*=a0.color.r;g.g*=a0.color.g;g.b*=a0.color.b}aQ(t,s,e,d,aA,ax,am,al);a3.wireframe===true?aY(g,a3.wireframeLinewidth,a3.wireframeLinecap,a3.wireframeLinejoin):aX(g)}else{if(a3 instanceof THREE.MeshNormalMaterial){g.r=aN(a0.normalWorld.x);g.g=aN(a0.normalWorld.y);g.b=aN(a0.normalWorld.z);aQ(t,s,e,d,aA,ax,am,al);a3.wireframe===true?aY(g,a3.wireframeLinewidth,a3.wireframeLinecap,a3.wireframeLinejoin):aX(g)}else{if(a3 instanceof THREE.MeshDepthMaterial){M=aT.near;aC=aT.far;q.r=q.g=q.b=1-aO(a8.positionScreen.z,M,aC);p.r=p.g=p.b=1-aO(a7.positionScreen.z,M,aC);o.r=o.g=o.b=1-aO(a5.positionScreen.z,M,aC);n.r=n.g=n.b=1-aO(a6.positionScreen.z,M,aC);T=aZ(q,p,o,n);aS(t,s,e,d,am,al);aU(t,s,e,d,am,al,0,0,1,0,0,1,T);aS(R,P,aA,ax,J,I);aU(R,P,aA,ax,J,I,1,0,1,1,0,1,T)}}}}}function aS(a3,a5,a1,a4,a0,a2){f.beginPath();f.moveTo(a3,a5);f.lineTo(a1,a4);f.lineTo(a0,a2);f.closePath()}function aQ(a5,a7,a3,a6,a1,a4,a0,a2){f.beginPath();f.moveTo(a5,a7);f.lineTo(a3,a6);f.lineTo(a1,a4);f.lineTo(a0,a2);f.closePath()}function aY(a0,a3,a2,a1){F(a3);V(a2);aw(a1);ap(a0.getContextStyle());f.stroke();at.inflate(a3*2)}function aX(a0){af(a0.getContextStyle());f.fill()}function aF(bk,a7,bh,a5,bf,a3,bg,a4,be,a2,bd,a0,ba){if(ba instanceof THREE.DataTexture||ba.image===undefined||ba.image.width==0){return}if(ba.needsUpdate===true){var bs=ba.wrapS==THREE.RepeatWrapping;var bq=ba.wrapT==THREE.RepeatWrapping;D[ba.id]=f.createPattern(ba.image,bs===true&&bq===true?"repeat":bs===true&&bq===false?"repeat-x":bs===false&&bq===true?"repeat-y":"no-repeat");ba.needsUpdate=false}D[ba.id]===undefined?af("rgba(0,0,0,1)"):af(D[ba.id]);var bt,br,bp,bo,bm,bj,a8,bn,bl=ba.offset.x/ba.repeat.x,bi=ba.offset.y/ba.repeat.y,bc=ba.image.width*ba.repeat.x,bb=ba.image.height*ba.repeat.y;bg=(bg+bl)*bc;a4=(1-a4+bi)*bb;be=(be+bl)*bc;a2=(1-a2+bi)*bb;bd=(bd+bl)*bc;a0=(1-a0+bi)*bb;bh-=bk;a5-=a7;bf-=bk;a3-=a7;be-=bg;a2-=a4;bd-=bg;a0-=a4;a8=be*a0-bd*a2;if(a8===0){if(N[ba.id]===undefined){var a6=document.createElement("canvas");a6.width=ba.image.width;a6.height=ba.image.height;var a1=a6.getContext("2d");a1.drawImage(ba.image,0,0);N[ba.id]=a1.getImageData(0,0,ba.image.width,ba.image.height).data}var bu=N[ba.id];var a9=(Math.floor(bg)+Math.floor(a4)*ba.image.width)*4;g.setRGB(bu[a9]/255,bu[a9+1]/255,bu[a9+2]/255);aX(g);return}bn=1/a8;bt=(a0*bh-a2*bf)*bn;br=(a0*a5-a2*a3)*bn;bp=(be*bf-bd*bh)*bn;bo=(be*a3-bd*a5)*bn;bm=bk-bt*bg-bp*a4;bj=a7-br*bg-bo*a4;f.save();f.transform(bt,br,bp,bo,bm,bj);f.fill();f.restore()}function aU(bg,a5,be,a4,bc,a2,bd,a3,bb,a1,ba,a0,a8){var bm,bl,bk,bj,bh,bf,a6,bi,a9=a8.width-1,a7=a8.height-1;bd*=a9;a3*=a7;bb*=a9;a1*=a7;ba*=a9;a0*=a7;be-=bg;a4-=a5;bc-=bg;a2-=a5;bb-=bd;a1-=a3;ba-=bd;a0-=a3;a6=bb*a0-ba*a1;bi=1/a6;bm=(a0*be-a1*bc)*bi;bl=(a0*a4-a1*a2)*bi;bk=(bb*bc-ba*be)*bi;bj=(bb*a2-ba*a4)*bi;bh=bg-bm*bd-bk*a3;bf=a5-bl*bd-bj*a3;f.save();f.transform(bm,bl,bk,bj,bh,bf);f.clip();f.drawImage(a8,0,0);f.restore()}function aZ(a1,a0,a3,a2){L[0]=(a1.r*255)|0;L[1]=(a1.g*255)|0;L[2]=(a1.b*255)|0;L[4]=(a0.r*255)|0;L[5]=(a0.g*255)|0;L[6]=(a0.b*255)|0;L[8]=(a3.r*255)|0;L[9]=(a3.g*255)|0;L[10]=(a3.b*255)|0;L[12]=(a2.r*255)|0;L[13]=(a2.g*255)|0;L[14]=(a2.b*255)|0;i.putImageData(aB,0,0);K.drawImage(ay,0,0);return H}function aO(a3,a2,a1){var a0=(a3-a2)/(a1-a2);return a0*a0*(3-2*a0)}function aN(a1){var a0=(a1+1)*0.5;return a0<0?0:(a0>1?1:a0)}function aE(a5,a3){var a0=a3.x-a5.x,a4=a3.y-a5.y,a1=a0*a0+a4*a4,a2;if(a1===0){return}a2=1/Math.sqrt(a1);a0*=a2;a4*=a2;a3.x+=a0;a3.y+=a4;a5.x-=a0;a5.y-=a4}};function y(aE){if(ar!==aE){f.globalAlpha=aE;ar=aE}}function ag(aE){if(ao!==aE){if(aE===THREE.NormalBlending){f.globalCompositeOperation="source-over"}else{if(aE===THREE.AdditiveBlending){f.globalCompositeOperation="lighter"}else{if(aE===THREE.SubtractiveBlending){f.globalCompositeOperation="darker"}}}ao=aE}}function F(aE){if(G!==aE){f.lineWidth=aE;G=aE}}function V(aE){if(k!==aE){f.lineCap=aE;k=aE}}function aw(aE){if(ak!==aE){f.lineJoin=aE;ak=aE}}function ap(aE){if(v!==aE){f.strokeStyle=aE;v=aE}}function af(aE){if(an!==aE){f.fillStyle=aE;an=aE}}};THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 mPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 mPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 mPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","if ( useRefract ) {","vReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );","} else {","vReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( map, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( map, vUv );","#endif","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngle[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","lVector = normalize( lVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );","if ( spotEffect > spotLightAngle[ i ] ) {","spotEffect = pow( spotEffect, spotLightExponent[ i ] );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = mPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngle[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngle[ i ] ) {","spotEffect = pow( spotEffect, spotLightExponent[ i ] );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );","vec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#ifdef SHADOWMAP_SOFT","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")};THREE.UniformsUtils={merge:function(b){var c,e,d,a={};for(c=0;c<b.length;c++){d=this.clone(b[c]);for(e in d){a[e]=d[e]}}return a},clone:function(a){var d,e,f,c,b={};for(d in a){b[d]={};for(e in a[d]){c=a[d][e];if(c instanceof THREE.Color||c instanceof THREE.Vector2||c instanceof THREE.Vector3||c instanceof THREE.Vector4||c instanceof THREE.Matrix4||c instanceof THREE.Texture){b[d][e]=c.clone()}else{if(c instanceof Array){b[d][e]=c.slice()}else{b[d][e]=c}}}}return b}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalMatrix * normal;","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}};THREE.WebGLRenderer=function(O){console.log("THREE.WebGLRenderer",THREE.REVISION);O=O||{};var i=O.canvas!==undefined?O.canvas:document.createElement("canvas"),aR=O.precision!==undefined?O.precision:"highp",ak=O.alpha!==undefined?O.alpha:true,br=O.premultipliedAlpha!==undefined?O.premultipliedAlpha:true,aA=O.antialias!==undefined?O.antialias:false,bB=O.stencil!==undefined?O.stencil:true,aG=O.preserveDrawingBuffer!==undefined?O.preserveDrawingBuffer:false,Q=O.clearColor!==undefined?new THREE.Color(O.clearColor):new THREE.Color(0),aS=O.clearAlpha!==undefined?O.clearAlpha:0,P=O.maxLights!==undefined?O.maxLights:4;this.domElement=i;this.context=null;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.autoUpdateObjects=true;this.autoUpdateScene=true;this.gammaInput=false;this.gammaOutput=false;this.physicallyBasedShading=false;this.shadowMapEnabled=false;this.shadowMapAutoUpdate=true;this.shadowMapSoft=true;this.shadowMapCullFrontFaces=true;this.shadowMapDebug=false;this.shadowMapCascade=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var G=this,b=[],bt=0,A=null,bh=null,at=-1,aB=null,J=null,aC=0,bi=0,y=-1,aa=-1,bz=-1,Y=-1,l=-1,M=-1,aN=-1,ac=-1,bs=null,az=null,c=null,bp=null,e=0,d=0,be=0,K=0,T=0,aE=0,aP=new THREE.Frustum(),ax=new THREE.Matrix4(),av=new THREE.Matrix4(),s=new THREE.Vector4(),k=new THREE.Vector3(),by=true,t={ambient:[0,0,0],directional:{length:0,colors:new Array(),positions:new Array()},point:{length:0,colors:new Array(),positions:new Array(),distances:new Array()},spot:{length:0,colors:new Array(),positions:new Array(),distances:new Array(),directions:new Array(),angles:new Array(),exponents:new Array()},hemi:{length:0,skyColors:new Array(),groundColors:new Array(),positions:new Array()}};var aU;var bA;var h;var a5;var aV;ba();a0();this.context=aU;var a1=aU.getParameter(aU.MAX_TEXTURE_IMAGE_UNITS);var an=aU.getParameter(aU.MAX_VERTEX_TEXTURE_IMAGE_UNITS);var ad=aU.getParameter(aU.MAX_TEXTURE_SIZE);var aq=aU.getParameter(aU.MAX_CUBE_MAP_TEXTURE_SIZE);var ah=a5?aU.getParameter(a5.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;var ay=(an>0);var aY=ay&&bA;var aT=aV?aU.getParameter(aU.COMPRESSED_TEXTURE_FORMATS):[];this.getContext=function(){return aU};this.supportsVertexTextures=function(){return ay};this.getMaxAnisotropy=function(){return ah};this.setSize=function(bD,bC){i.width=bD;i.height=bC;this.setViewport(0,0,i.width,i.height)};this.setViewport=function(bD,bF,bE,bC){e=bD!==undefined?bD:0;d=bF!==undefined?bF:0;be=bE!==undefined?bE:i.width;K=bC!==undefined?bC:i.height;aU.viewport(e,d,be,K)};this.setScissor=function(bD,bF,bE,bC){aU.scissor(bD,bF,bE,bC)};this.enableScissorTest=function(bC){bC?aU.enable(aU.SCISSOR_TEST):aU.disable(aU.SCISSOR_TEST)};this.setClearColorHex=function(bC,bD){Q.setHex(bC);aS=bD;aU.clearColor(Q.r,Q.g,Q.b,aS)};this.setClearColor=function(bC,bD){Q.copy(bC);aS=bD;aU.clearColor(Q.r,Q.g,Q.b,aS)};this.getClearColor=function(){return Q};this.getClearAlpha=function(){return aS};this.clear=function(bC,bF,bD){var bE=0;if(bC===undefined||bC){bE|=aU.COLOR_BUFFER_BIT}if(bF===undefined||bF){bE|=aU.DEPTH_BUFFER_BIT}if(bD===undefined||bD){bE|=aU.STENCIL_BUFFER_BIT}aU.clear(bE)};this.clearTarget=function(bE,bC,bF,bD){this.setRenderTarget(bE);this.clear(bC,bF,bD)};this.addPostPlugin=function(bC){bC.init(this);this.renderPluginsPost.push(bC)};this.addPrePlugin=function(bC){bC.init(this);this.renderPluginsPre.push(bC)};this.deallocateObject=function(bC){if(!bC.__webglInit){return}bC.__webglInit=false;delete bC._modelViewMatrix;delete bC._normalMatrix;delete bC._normalMatrixArray;delete bC._modelViewMatrixArray;delete bC._modelMatrixArray;if(bC instanceof THREE.Mesh){for(var bD in bC.geometry.geometryGroups){a8(bC.geometry.geometryGroups[bD])}}else{if(bC instanceof THREE.Ribbon){a9(bC.geometry)}else{if(bC instanceof THREE.Line){bc(bC.geometry)}else{if(bC instanceof THREE.ParticleSystem){bw(bC.geometry)}}}}};this.deallocateTexture=function(bC){if(!bC.__webglInit){return}bC.__webglInit=false;aU.deleteTexture(bC.__webglTexture);G.info.memory.textures--};this.deallocateRenderTarget=function(bD){if(!bD||!bD.__webglTexture){return}aU.deleteTexture(bD.__webglTexture);if(bD instanceof THREE.WebGLRenderTargetCube){for(var bC=0;bC<6;bC++){aU.deleteFramebuffer(bD.__webglFramebuffer[bC]);aU.deleteRenderbuffer(bD.__webglRenderbuffer[bC])}}else{aU.deleteFramebuffer(bD.__webglFramebuffer);aU.deleteRenderbuffer(bD.__webglRenderbuffer)}};this.deallocateMaterial=function(bI){var bE=bI.program;if(!bE){return}bI.program=undefined;var bF,bD,bH;var bG=false;for(bF=0,bD=b.length;bF<bD;bF++){bH=b[bF];if(bH.program===bE){bH.usedTimes--;if(bH.usedTimes===0){bG=true}break}}if(bG){var bC=[];for(bF=0,bD=b.length;bF<bD;bF++){bH=b[bF];if(bH.program!==bE){bC.push(bH)}}b=bC;aU.deleteProgram(bE);G.info.memory.programs--}};this.updateShadowMap=function(bD,bC){A=null;bz=-1;aN=-1;ac=-1;aB=-1;at=-1;by=true;y=-1;aa=-1;this.shadowMapPlugin.update(bD,bC)};function W(bC){bC.__webglVertexBuffer=aU.createBuffer();bC.__webglColorBuffer=aU.createBuffer();G.info.memory.geometries++}function bx(bC){bC.__webglVertexBuffer=aU.createBuffer();bC.__webglColorBuffer=aU.createBuffer();G.info.memory.geometries++}function a7(bC){bC.__webglVertexBuffer=aU.createBuffer();bC.__webglColorBuffer=aU.createBuffer();G.info.memory.geometries++}function bv(bD){bD.__webglVertexBuffer=aU.createBuffer();bD.__webglNormalBuffer=aU.createBuffer();bD.__webglTangentBuffer=aU.createBuffer();bD.__webglColorBuffer=aU.createBuffer();bD.__webglUVBuffer=aU.createBuffer();bD.__webglUV2Buffer=aU.createBuffer();bD.__webglSkinIndicesBuffer=aU.createBuffer();bD.__webglSkinWeightsBuffer=aU.createBuffer();bD.__webglFaceBuffer=aU.createBuffer();bD.__webglLineBuffer=aU.createBuffer();var bC,bE;if(bD.numMorphTargets){bD.__webglMorphTargetsBuffers=[];for(bC=0,bE=bD.numMorphTargets;bC<bE;bC++){bD.__webglMorphTargetsBuffers.push(aU.createBuffer())}}if(bD.numMorphNormals){bD.__webglMorphNormalsBuffers=[];for(bC=0,bE=bD.numMorphNormals;bC<bE;bC++){bD.__webglMorphNormalsBuffers.push(aU.createBuffer())}}G.info.memory.geometries++}function bw(bC){aU.deleteBuffer(bC.__webglVertexBuffer);aU.deleteBuffer(bC.__webglColorBuffer);G.info.memory.geometries--}function bc(bC){aU.deleteBuffer(bC.__webglVertexBuffer);aU.deleteBuffer(bC.__webglColorBuffer);G.info.memory.geometries--}function a9(bC){aU.deleteBuffer(bC.__webglVertexBuffer);aU.deleteBuffer(bC.__webglColorBuffer);G.info.memory.geometries--}function a8(bD){aU.deleteBuffer(bD.__webglVertexBuffer);aU.deleteBuffer(bD.__webglNormalBuffer);aU.deleteBuffer(bD.__webglTangentBuffer);aU.deleteBuffer(bD.__webglColorBuffer);aU.deleteBuffer(bD.__webglUVBuffer);aU.deleteBuffer(bD.__webglUV2Buffer);aU.deleteBuffer(bD.__webglSkinIndicesBuffer);aU.deleteBuffer(bD.__webglSkinWeightsBuffer);aU.deleteBuffer(bD.__webglFaceBuffer);aU.deleteBuffer(bD.__webglLineBuffer);var bC,bF;if(bD.numMorphTargets){for(bC=0,bF=bD.numMorphTargets;bC<bF;bC++){aU.deleteBuffer(bD.__webglMorphTargetsBuffers[bC])}}if(bD.numMorphNormals){for(bC=0,bF=bD.numMorphNormals;bC<bF;bC++){aU.deleteBuffer(bD.__webglMorphNormalsBuffers[bC])}}if(bD.__webglCustomAttributesList){for(var bE in bD.__webglCustomAttributesList){aU.deleteBuffer(bD.__webglCustomAttributesList[bE].buffer)}}G.info.memory.geometries--}function L(bI,bD){var bF=bI.vertices.length;var bG=bD.material;if(bG.attributes){if(bI.__webglCustomAttributesList===undefined){bI.__webglCustomAttributesList=[]}for(var bC in bG.attributes){var bH=bG.attributes[bC];if(!bH.__webglInitialized||bH.createUniqueBuffers){bH.__webglInitialized=true;var bE=1;if(bH.type==="v2"){bE=2}else{if(bH.type==="v3"){bE=3}else{if(bH.type==="v4"){bE=4}else{if(bH.type==="c"){bE=3}}}}bH.size=bE;bH.array=new Float32Array(bF*bE);bH.buffer=aU.createBuffer();bH.buffer.belongsToAttribute=bC;bH.needsUpdate=true}bI.__webglCustomAttributesList.push(bH)}}}function bb(bE,bC){var bD=bE.vertices.length;bE.__vertexArray=new Float32Array(bD*3);bE.__colorArray=new Float32Array(bD*3);bE.__sortArray=[];bE.__webglParticleCount=bD;L(bE,bC)}function B(bE,bC){var bD=bE.vertices.length;bE.__vertexArray=new Float32Array(bD*3);bE.__colorArray=new Float32Array(bD*3);bE.__webglLineCount=bD;L(bE,bC)}function bm(bD){var bC=bD.vertices.length;bD.__vertexArray=new Float32Array(bC*3);bD.__colorArray=new Float32Array(bC*3);bD.__webglVertexCount=bC}function z(bK,bT){var bC=bT.geometry,bU=bK.faces3,bS=bK.faces4,bN=bU.length*3+bS.length*4,bF=bU.length*1+bS.length*2,bH=bU.length*3+bS.length*4,bE=aF(bT,bK),bJ=ai(bE),bL=U(bE),bQ=aO(bE);bK.__vertexArray=new Float32Array(bN*3);if(bL){bK.__normalArray=new Float32Array(bN*3)}if(bC.hasTangents){bK.__tangentArray=new Float32Array(bN*4)}if(bQ){bK.__colorArray=new Float32Array(bN*3)}if(bJ){if(bC.faceUvs.length>0||bC.faceVertexUvs.length>0){bK.__uvArray=new Float32Array(bN*2)}if(bC.faceUvs.length>1||bC.faceVertexUvs.length>1){bK.__uv2Array=new Float32Array(bN*2)}}if(bT.geometry.skinWeights.length&&bT.geometry.skinIndices.length){bK.__skinIndexArray=new Float32Array(bN*4);bK.__skinWeightArray=new Float32Array(bN*4)}bK.__faceArray=new Uint16Array(bF*3);bK.__lineArray=new Uint16Array(bH*2);var bM,bP;if(bK.numMorphTargets){bK.__morphTargetsArrays=[];for(bM=0,bP=bK.numMorphTargets;bM<bP;bM++){bK.__morphTargetsArrays.push(new Float32Array(bN*3))}}if(bK.numMorphNormals){bK.__morphNormalsArrays=[];for(bM=0,bP=bK.numMorphNormals;bM<bP;bM++){bK.__morphNormalsArrays.push(new Float32Array(bN*3))}}bK.__webglFaceCount=bF*3;bK.__webglLineCount=bH*2;if(bE.attributes){if(bK.__webglCustomAttributesList===undefined){bK.__webglCustomAttributesList=[]}for(var bR in bE.attributes){var bO=bE.attributes[bR];var bG={};for(var bD in bO){bG[bD]=bO[bD]}if(!bG.__webglInitialized||bG.createUniqueBuffers){bG.__webglInitialized=true;var bI=1;if(bG.type==="v2"){bI=2}else{if(bG.type==="v3"){bI=3}else{if(bG.type==="v4"){bI=4}else{if(bG.type==="c"){bI=3}}}}bG.size=bI;bG.array=new Float32Array(bN*bI);bG.buffer=aU.createBuffer();bG.buffer.belongsToAttribute=bR;bO.needsUpdate=true;bG.__original=bO}bK.__webglCustomAttributesList.push(bG)}}bK.__inittedArrays=true}function aF(bD,bC){if(bD.material&&!(bD.material instanceof THREE.MeshFaceMaterial)){return bD.material}else{if(bC.materialIndex>=0){return bD.geometry.materials[bC.materialIndex]}}}function aK(bC){return bC&&bC.shading!==undefined&&bC.shading===THREE.SmoothShading}function U(bC){if((bC instanceof THREE.MeshBasicMaterial&&!bC.envMap)||bC instanceof THREE.MeshDepthMaterial){return false}if(aK(bC)){return THREE.SmoothShading}else{return THREE.FlatShading}}function aO(bC){if(bC.vertexColors){return bC.vertexColors}return false}function ai(bC){if(bC.map||bC.lightMap||bC.bumpMap||bC.normalMap||bC.specularMap||bC instanceof THREE.ShaderMaterial){return true}return false}function E(bF){var bC,bE,bD;for(bC in bF.attributes){if(bC==="index"){bD=aU.ELEMENT_ARRAY_BUFFER}else{bD=aU.ARRAY_BUFFER}bE=bF.attributes[bC];bE.buffer=aU.createBuffer();aU.bindBuffer(bD,bE.buffer);aU.bufferData(bD,bE.array,aU.STATIC_DRAW)}}function N(bD,bP,b2){var bN,b0,bY,bF,bI,bV,bG=bD.vertices,bZ=bG.length,bK=bD.colors,bJ=bK.length,bO=bD.__vertexArray,bC=bD.__colorArray,bE=bD.__sortArray,bT=bD.verticesNeedUpdate,bH=bD.elementsNeedUpdate,bQ=bD.colorsNeedUpdate,bS=bD.__webglCustomAttributesList,bW,bL,b1,bR,bM,bU,bX;if(b2.sortParticles){av.copy(ax);av.multiplySelf(b2.matrixWorld);for(bN=0;bN<bZ;bN++){bY=bG[bN];s.copy(bY);av.multiplyVector3(s);bE[bN]=[s.z,bN]}bE.sort(function(b4,b3){return b3[0]-b4[0]});for(bN=0;bN<bZ;bN++){bY=bG[bE[bN][1]];bF=bN*3;bO[bF]=bY.x;bO[bF+1]=bY.y;bO[bF+2]=bY.z}for(b0=0;b0<bJ;b0++){bF=b0*3;bV=bK[bE[b0][1]];bC[bF]=bV.r;bC[bF+1]=bV.g;bC[bF+2]=bV.b}if(bS){for(bW=0,bL=bS.length;bW<bL;bW++){bX=bS[bW];if(!(bX.boundTo===undefined||bX.boundTo==="vertices")){continue}bF=0;bM=bX.value.length;if(bX.size===1){for(bR=0;bR<bM;bR++){bI=bE[bR][1];bX.array[bR]=bX.value[bI]}}else{if(bX.size===2){for(bR=0;bR<bM;bR++){bI=bE[bR][1];bU=bX.value[bI];bX.array[bF]=bU.x;bX.array[bF+1]=bU.y;bF+=2}}else{if(bX.size===3){if(bX.type==="c"){for(bR=0;bR<bM;bR++){bI=bE[bR][1];bU=bX.value[bI];bX.array[bF]=bU.r;bX.array[bF+1]=bU.g;bX.array[bF+2]=bU.b;bF+=3}}else{for(bR=0;bR<bM;bR++){bI=bE[bR][1];bU=bX.value[bI];bX.array[bF]=bU.x;bX.array[bF+1]=bU.y;bX.array[bF+2]=bU.z;bF+=3}}}else{if(bX.size===4){for(bR=0;bR<bM;bR++){bI=bE[bR][1];bU=bX.value[bI];bX.array[bF]=bU.x;bX.array[bF+1]=bU.y;bX.array[bF+2]=bU.z;bX.array[bF+3]=bU.w;bF+=4}}}}}}}}else{if(bT){for(bN=0;bN<bZ;bN++){bY=bG[bN];bF=bN*3;bO[bF]=bY.x;bO[bF+1]=bY.y;bO[bF+2]=bY.z}}if(bQ){for(b0=0;b0<bJ;b0++){bV=bK[b0];bF=b0*3;bC[bF]=bV.r;bC[bF+1]=bV.g;bC[bF+2]=bV.b}}if(bS){for(bW=0,bL=bS.length;bW<bL;bW++){bX=bS[bW];if(bX.needsUpdate&&(bX.boundTo===undefined||bX.boundTo==="vertices")){bM=bX.value.length;bF=0;if(bX.size===1){for(bR=0;bR<bM;bR++){bX.array[bR]=bX.value[bR]}}else{if(bX.size===2){for(bR=0;bR<bM;bR++){bU=bX.value[bR];bX.array[bF]=bU.x;bX.array[bF+1]=bU.y;bF+=2}}else{if(bX.size===3){if(bX.type==="c"){for(bR=0;bR<bM;bR++){bU=bX.value[bR];bX.array[bF]=bU.r;bX.array[bF+1]=bU.g;bX.array[bF+2]=bU.b;bF+=3}}else{for(bR=0;bR<bM;bR++){bU=bX.value[bR];bX.array[bF]=bU.x;bX.array[bF+1]=bU.y;bX.array[bF+2]=bU.z;bF+=3}}}else{if(bX.size===4){for(bR=0;bR<bM;bR++){bU=bX.value[bR];bX.array[bF]=bU.x;bX.array[bF+1]=bU.y;bX.array[bF+2]=bU.z;bX.array[bF+3]=bU.w;bF+=4}}}}}}}}}if(bT||b2.sortParticles){aU.bindBuffer(aU.ARRAY_BUFFER,bD.__webglVertexBuffer);aU.bufferData(aU.ARRAY_BUFFER,bO,bP)}if(bQ||b2.sortParticles){aU.bindBuffer(aU.ARRAY_BUFFER,bD.__webglColorBuffer);aU.bufferData(aU.ARRAY_BUFFER,bC,bP)}if(bS){for(bW=0,bL=bS.length;bW<bL;bW++){bX=bS[bW];if(bX.needsUpdate||b2.sortParticles){aU.bindBuffer(aU.ARRAY_BUFFER,bX.buffer);aU.bufferData(aU.ARRAY_BUFFER,bX.array,bP)}}}}function bu(bD,bM){var bK,bX,bV,bE,bS,bF=bD.vertices,bH=bD.colors,bW=bF.length,bG=bH.length,bL=bD.__vertexArray,bC=bD.__colorArray,bQ=bD.verticesNeedUpdate,bN=bD.colorsNeedUpdate,bP=bD.__webglCustomAttributesList,bT,bI,bY,bO,bJ,bR,bU;if(bQ){for(bK=0;bK<bW;bK++){bV=bF[bK];bE=bK*3;bL[bE]=bV.x;bL[bE+1]=bV.y;bL[bE+2]=bV.z}aU.bindBuffer(aU.ARRAY_BUFFER,bD.__webglVertexBuffer);aU.bufferData(aU.ARRAY_BUFFER,bL,bM)}if(bN){for(bX=0;bX<bG;bX++){bS=bH[bX];bE=bX*3;bC[bE]=bS.r;bC[bE+1]=bS.g;bC[bE+2]=bS.b}aU.bindBuffer(aU.ARRAY_BUFFER,bD.__webglColorBuffer);aU.bufferData(aU.ARRAY_BUFFER,bC,bM)}if(bP){for(bT=0,bI=bP.length;bT<bI;bT++){bU=bP[bT];if(bU.needsUpdate&&(bU.boundTo===undefined||bU.boundTo==="vertices")){bE=0;bJ=bU.value.length;if(bU.size===1){for(bO=0;bO<bJ;bO++){bU.array[bO]=bU.value[bO]}}else{if(bU.size===2){for(bO=0;bO<bJ;bO++){bR=bU.value[bO];bU.array[bE]=bR.x;bU.array[bE+1]=bR.y;bE+=2}}else{if(bU.size===3){if(bU.type==="c"){for(bO=0;bO<bJ;bO++){bR=bU.value[bO];bU.array[bE]=bR.r;bU.array[bE+1]=bR.g;bU.array[bE+2]=bR.b;bE+=3}}else{for(bO=0;bO<bJ;bO++){bR=bU.value[bO];bU.array[bE]=bR.x;bU.array[bE+1]=bR.y;bU.array[bE+2]=bR.z;bE+=3}}}else{if(bU.size===4){for(bO=0;bO<bJ;bO++){bR=bU.value[bO];bU.array[bE]=bR.x;bU.array[bE+1]=bR.y;bU.array[bE+2]=bR.z;bU.array[bE+3]=bR.w;bE+=4}}}}}aU.bindBuffer(aU.ARRAY_BUFFER,bU.buffer);aU.bufferData(aU.ARRAY_BUFFER,bU.array,bM)}}}}function ag(bN,bH){var bQ,bM,bK,bI,bG,bL=bN.vertices,bC=bN.colors,bF=bL.length,bP=bC.length,bD=bN.__vertexArray,bO=bN.__colorArray,bJ=bN.verticesNeedUpdate,bE=bN.colorsNeedUpdate;if(bJ){for(bQ=0;bQ<bF;bQ++){bK=bL[bQ];bI=bQ*3;bD[bI]=bK.x;bD[bI+1]=bK.y;bD[bI+2]=bK.z}aU.bindBuffer(aU.ARRAY_BUFFER,bN.__webglVertexBuffer);aU.bufferData(aU.ARRAY_BUFFER,bD,bH)}if(bE){for(bM=0;bM<bP;bM++){bG=bC[bM];bI=bM*3;bO[bI]=bG.r;bO[bI+1]=bG.g;bO[bI+2]=bG.b}aU.bindBuffer(aU.ARRAY_BUFFER,bN.__webglColorBuffer);aU.bufferData(aU.ARRAY_BUFFER,bO,bH)}}function p(cS,cY,dw,bQ,du){if(!cS.__inittedArrays){return}var co=U(du),bN=aO(du),cR=ai(du),cd=(co===THREE.SmoothShading);var cu,de,dk,bD,bU,bI,cz,bV,cn,bE,cm,dr,cI,cH,cG,cF,ds,dq,dn,dl,dj,dg,df,dd,cP,cO,cM,cL,c9,c8,c5,c0,bM,bL,bK,bJ,cj,ch,cg,cf,b1,bZ,bX,bW,cq,cV,ct,cl,b6,cK,cQ,b7,ce,cp,cN,cv,cJ,cy,b3=0,bS=0,cU=0,dp=0,cr=0,cc=0,bT=0,cE=0,bR=0,cs=0,bC=0,bO=0,bY=0,ci,bH=cS.__vertexArray,cb=cS.__uvArray,bP=cS.__uv2Array,cZ=cS.__normalArray,c7=cS.__tangentArray,cB=cS.__colorArray,cX=cS.__skinIndexArray,di=cS.__skinWeightArray,dh=cS.__morphTargetsArrays,b8=cS.__morphNormalsArrays,ca=cS.__webglCustomAttributesList,bG,dm=cS.__faceArray,cx=cS.__lineArray,cT=cY.geometry,b5=cT.verticesNeedUpdate,cw=cT.elementsNeedUpdate,cC=cT.uvsNeedUpdate,bF=cT.normalsNeedUpdate,dt=cT.tangentsNeedUpdate,c6=cT.colorsNeedUpdate,dx=cT.morphTargetsNeedUpdate,cD=cT.vertices,b2=cS.faces3,b0=cS.faces4,da=cT.faces,cA=cT.faceVertexUvs[0],b9=cT.faceVertexUvs[1],db=cT.colors,ck=cT.skinIndices,dc=cT.skinWeights,dv=cT.morphTargets,cW=cT.morphNormals;if(b5){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];cI=cD[bD.a];cH=cD[bD.b];cG=cD[bD.c];bH[bS]=cI.x;bH[bS+1]=cI.y;bH[bS+2]=cI.z;bH[bS+3]=cH.x;bH[bS+4]=cH.y;bH[bS+5]=cH.z;bH[bS+6]=cG.x;bH[bS+7]=cG.y;bH[bS+8]=cG.z;bS+=9}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];cI=cD[bD.a];cH=cD[bD.b];cG=cD[bD.c];cF=cD[bD.d];bH[bS]=cI.x;bH[bS+1]=cI.y;bH[bS+2]=cI.z;bH[bS+3]=cH.x;bH[bS+4]=cH.y;bH[bS+5]=cH.z;bH[bS+6]=cG.x;bH[bS+7]=cG.y;bH[bS+8]=cG.z;bH[bS+9]=cF.x;bH[bS+10]=cF.y;bH[bS+11]=cF.z;bS+=12}aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglVertexBuffer);aU.bufferData(aU.ARRAY_BUFFER,bH,dw)}if(dx){for(b7=0,ce=dv.length;b7<ce;b7++){bC=0;for(cu=0,de=b2.length;cu<de;cu++){cv=b2[cu];bD=da[cv];cI=dv[b7].vertices[bD.a];cH=dv[b7].vertices[bD.b];cG=dv[b7].vertices[bD.c];cp=dh[b7];cp[bC]=cI.x;cp[bC+1]=cI.y;cp[bC+2]=cI.z;cp[bC+3]=cH.x;cp[bC+4]=cH.y;cp[bC+5]=cH.z;cp[bC+6]=cG.x;cp[bC+7]=cG.y;cp[bC+8]=cG.z;if(du.morphNormals){if(cd){cJ=cW[b7].vertexNormals[cv];dj=cJ.a;dg=cJ.b;df=cJ.c}else{dj=cW[b7].faceNormals[cv];dg=dj;df=dj}cN=b8[b7];cN[bC]=dj.x;cN[bC+1]=dj.y;cN[bC+2]=dj.z;cN[bC+3]=dg.x;cN[bC+4]=dg.y;cN[bC+5]=dg.z;cN[bC+6]=df.x;cN[bC+7]=df.y;cN[bC+8]=df.z}bC+=9}for(cu=0,de=b0.length;cu<de;cu++){cv=b0[cu];bD=da[cv];cI=dv[b7].vertices[bD.a];cH=dv[b7].vertices[bD.b];cG=dv[b7].vertices[bD.c];cF=dv[b7].vertices[bD.d];cp=dh[b7];cp[bC]=cI.x;cp[bC+1]=cI.y;cp[bC+2]=cI.z;cp[bC+3]=cH.x;cp[bC+4]=cH.y;cp[bC+5]=cH.z;cp[bC+6]=cG.x;cp[bC+7]=cG.y;cp[bC+8]=cG.z;cp[bC+9]=cF.x;cp[bC+10]=cF.y;cp[bC+11]=cF.z;if(du.morphNormals){if(cd){cJ=cW[b7].vertexNormals[cv];dj=cJ.a;dg=cJ.b;df=cJ.c;dd=cJ.d}else{dj=cW[b7].faceNormals[cv];dg=dj;df=dj;dd=dj}cN=b8[b7];cN[bC]=dj.x;cN[bC+1]=dj.y;cN[bC+2]=dj.z;cN[bC+3]=dg.x;cN[bC+4]=dg.y;cN[bC+5]=dg.z;cN[bC+6]=df.x;cN[bC+7]=df.y;cN[bC+8]=df.z;cN[bC+9]=dd.x;cN[bC+10]=dd.y;cN[bC+11]=dd.z}bC+=12}aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglMorphTargetsBuffers[b7]);aU.bufferData(aU.ARRAY_BUFFER,dh[b7],dw);if(du.morphNormals){aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglMorphNormalsBuffers[b7]);aU.bufferData(aU.ARRAY_BUFFER,b8[b7],dw)}}}if(dc.length){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];c9=dc[bD.a];c8=dc[bD.b];c5=dc[bD.c];di[cs]=c9.x;di[cs+1]=c9.y;di[cs+2]=c9.z;di[cs+3]=c9.w;di[cs+4]=c8.x;di[cs+5]=c8.y;di[cs+6]=c8.z;di[cs+7]=c8.w;di[cs+8]=c5.x;di[cs+9]=c5.y;di[cs+10]=c5.z;di[cs+11]=c5.w;bM=ck[bD.a];bL=ck[bD.b];bK=ck[bD.c];cX[cs]=bM.x;cX[cs+1]=bM.y;cX[cs+2]=bM.z;cX[cs+3]=bM.w;cX[cs+4]=bL.x;cX[cs+5]=bL.y;cX[cs+6]=bL.z;cX[cs+7]=bL.w;cX[cs+8]=bK.x;cX[cs+9]=bK.y;cX[cs+10]=bK.z;cX[cs+11]=bK.w;cs+=12}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];c9=dc[bD.a];c8=dc[bD.b];c5=dc[bD.c];c0=dc[bD.d];di[cs]=c9.x;di[cs+1]=c9.y;di[cs+2]=c9.z;di[cs+3]=c9.w;di[cs+4]=c8.x;di[cs+5]=c8.y;di[cs+6]=c8.z;di[cs+7]=c8.w;di[cs+8]=c5.x;di[cs+9]=c5.y;di[cs+10]=c5.z;di[cs+11]=c5.w;di[cs+12]=c0.x;di[cs+13]=c0.y;di[cs+14]=c0.z;di[cs+15]=c0.w;bM=ck[bD.a];bL=ck[bD.b];bK=ck[bD.c];bJ=ck[bD.d];cX[cs]=bM.x;cX[cs+1]=bM.y;cX[cs+2]=bM.z;cX[cs+3]=bM.w;cX[cs+4]=bL.x;cX[cs+5]=bL.y;cX[cs+6]=bL.z;cX[cs+7]=bL.w;cX[cs+8]=bK.x;cX[cs+9]=bK.y;cX[cs+10]=bK.z;cX[cs+11]=bK.w;cX[cs+12]=bJ.x;cX[cs+13]=bJ.y;cX[cs+14]=bJ.z;cX[cs+15]=bJ.w;cs+=16}if(cs>0){aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglSkinIndicesBuffer);aU.bufferData(aU.ARRAY_BUFFER,cX,dw);aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglSkinWeightsBuffer);aU.bufferData(aU.ARRAY_BUFFER,di,dw)}}if(c6&&bN){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];bV=bD.vertexColors;cn=bD.color;if(bV.length===3&&bN===THREE.VertexColors){cP=bV[0];cO=bV[1];cM=bV[2]}else{cP=cn;cO=cn;cM=cn}cB[bR]=cP.r;cB[bR+1]=cP.g;cB[bR+2]=cP.b;cB[bR+3]=cO.r;cB[bR+4]=cO.g;cB[bR+5]=cO.b;cB[bR+6]=cM.r;cB[bR+7]=cM.g;cB[bR+8]=cM.b;bR+=9}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];bV=bD.vertexColors;cn=bD.color;if(bV.length===4&&bN===THREE.VertexColors){cP=bV[0];cO=bV[1];cM=bV[2];cL=bV[3]}else{cP=cn;cO=cn;cM=cn;cL=cn}cB[bR]=cP.r;cB[bR+1]=cP.g;cB[bR+2]=cP.b;cB[bR+3]=cO.r;cB[bR+4]=cO.g;cB[bR+5]=cO.b;cB[bR+6]=cM.r;cB[bR+7]=cM.g;cB[bR+8]=cM.b;cB[bR+9]=cL.r;cB[bR+10]=cL.g;cB[bR+11]=cL.b;bR+=12}if(bR>0){aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglColorBuffer);aU.bufferData(aU.ARRAY_BUFFER,cB,dw)}}if(dt&&cT.hasTangents){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];bE=bD.vertexTangents;ds=bE[0];dq=bE[1];dn=bE[2];c7[bT]=ds.x;c7[bT+1]=ds.y;c7[bT+2]=ds.z;c7[bT+3]=ds.w;c7[bT+4]=dq.x;c7[bT+5]=dq.y;c7[bT+6]=dq.z;c7[bT+7]=dq.w;c7[bT+8]=dn.x;c7[bT+9]=dn.y;c7[bT+10]=dn.z;c7[bT+11]=dn.w;bT+=12}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];bE=bD.vertexTangents;ds=bE[0];dq=bE[1];dn=bE[2];dl=bE[3];c7[bT]=ds.x;c7[bT+1]=ds.y;c7[bT+2]=ds.z;c7[bT+3]=ds.w;c7[bT+4]=dq.x;c7[bT+5]=dq.y;c7[bT+6]=dq.z;c7[bT+7]=dq.w;c7[bT+8]=dn.x;c7[bT+9]=dn.y;c7[bT+10]=dn.z;c7[bT+11]=dn.w;c7[bT+12]=dl.x;c7[bT+13]=dl.y;c7[bT+14]=dl.z;c7[bT+15]=dl.w;bT+=16}aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglTangentBuffer);aU.bufferData(aU.ARRAY_BUFFER,c7,dw)}if(bF&&co){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];bU=bD.vertexNormals;bI=bD.normal;if(bU.length===3&&cd){for(ct=0;ct<3;ct++){b6=bU[ct];cZ[cc]=b6.x;cZ[cc+1]=b6.y;cZ[cc+2]=b6.z;cc+=3}}else{for(ct=0;ct<3;ct++){cZ[cc]=bI.x;cZ[cc+1]=bI.y;cZ[cc+2]=bI.z;cc+=3}}}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];bU=bD.vertexNormals;bI=bD.normal;if(bU.length===4&&cd){for(ct=0;ct<4;ct++){b6=bU[ct];cZ[cc]=b6.x;cZ[cc+1]=b6.y;cZ[cc+2]=b6.z;cc+=3}}else{for(ct=0;ct<4;ct++){cZ[cc]=bI.x;cZ[cc+1]=bI.y;cZ[cc+2]=bI.z;cc+=3}}}aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglNormalBuffer);aU.bufferData(aU.ARRAY_BUFFER,cZ,dw)}if(cC&&cA&&cR){for(cu=0,de=b2.length;cu<de;cu++){dk=b2[cu];cm=cA[dk];if(cm===undefined){continue}for(ct=0;ct<3;ct++){cK=cm[ct];cb[cU]=cK.u;cb[cU+1]=cK.v;cU+=2}}for(cu=0,de=b0.length;cu<de;cu++){dk=b0[cu];cm=cA[dk];if(cm===undefined){continue}for(ct=0;ct<4;ct++){cK=cm[ct];cb[cU]=cK.u;cb[cU+1]=cK.v;cU+=2}}if(cU>0){aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglUVBuffer);aU.bufferData(aU.ARRAY_BUFFER,cb,dw)}}if(cC&&b9&&cR){for(cu=0,de=b2.length;cu<de;cu++){dk=b2[cu];dr=b9[dk];if(dr===undefined){continue}for(ct=0;ct<3;ct++){cQ=dr[ct];bP[dp]=cQ.u;bP[dp+1]=cQ.v;dp+=2}}for(cu=0,de=b0.length;cu<de;cu++){dk=b0[cu];dr=b9[dk];if(dr===undefined){continue}for(ct=0;ct<4;ct++){cQ=dr[ct];bP[dp]=cQ.u;bP[dp+1]=cQ.v;dp+=2}}if(dp>0){aU.bindBuffer(aU.ARRAY_BUFFER,cS.__webglUV2Buffer);aU.bufferData(aU.ARRAY_BUFFER,bP,dw)}}if(cw){for(cu=0,de=b2.length;cu<de;cu++){dm[cr]=b3;dm[cr+1]=b3+1;dm[cr+2]=b3+2;cr+=3;cx[cE]=b3;cx[cE+1]=b3+1;cx[cE+2]=b3;cx[cE+3]=b3+2;cx[cE+4]=b3+1;cx[cE+5]=b3+2;cE+=6;b3+=3}for(cu=0,de=b0.length;cu<de;cu++){dm[cr]=b3;dm[cr+1]=b3+1;dm[cr+2]=b3+3;dm[cr+3]=b3+1;dm[cr+4]=b3+2;dm[cr+5]=b3+3;cr+=6;cx[cE]=b3;cx[cE+1]=b3+1;cx[cE+2]=b3;cx[cE+3]=b3+3;cx[cE+4]=b3+1;cx[cE+5]=b3+2;cx[cE+6]=b3+2;cx[cE+7]=b3+3;cE+=8;b3+=4}aU.bindBuffer(aU.ELEMENT_ARRAY_BUFFER,cS.__webglFaceBuffer);aU.bufferData(aU.ELEMENT_ARRAY_BUFFER,dm,dw);aU.bindBuffer(aU.ELEMENT_ARRAY_BUFFER,cS.__webglLineBuffer);aU.bufferData(aU.ELEMENT_ARRAY_BUFFER,cx,dw)}if(ca){for(ct=0,cl=ca.length;ct<cl;ct++){bG=ca[ct];if(!bG.__original.needsUpdate){continue}bO=0;bY=0;if(bG.size===1){if(bG.boundTo===undefined||bG.boundTo==="vertices"){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];bG.array[bO]=bG.value[bD.a];bG.array[bO+1]=bG.value[bD.b];bG.array[bO+2]=bG.value[bD.c];bO+=3}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];bG.array[bO]=bG.value[bD.a];bG.array[bO+1]=bG.value[bD.b];bG.array[bO+2]=bG.value[bD.c];bG.array[bO+3]=bG.value[bD.d];bO+=4}}else{if(bG.boundTo==="faces"){for(cu=0,de=b2.length;cu<de;cu++){ci=bG.value[b2[cu]];bG.array[bO]=ci;bG.array[bO+1]=ci;bG.array[bO+2]=ci;bO+=3}for(cu=0,de=b0.length;cu<de;cu++){ci=bG.value[b0[cu]];bG.array[bO]=ci;bG.array[bO+1]=ci;bG.array[bO+2]=ci;bG.array[bO+3]=ci;bO+=4}}}}else{if(bG.size===2){if(bG.boundTo===undefined||bG.boundTo==="vertices"){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];cI=bG.value[bD.a];cH=bG.value[bD.b];cG=bG.value[bD.c];bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cH.x;bG.array[bO+3]=cH.y;bG.array[bO+4]=cG.x;bG.array[bO+5]=cG.y;bO+=6}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];cI=bG.value[bD.a];cH=bG.value[bD.b];cG=bG.value[bD.c];cF=bG.value[bD.d];bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cH.x;bG.array[bO+3]=cH.y;bG.array[bO+4]=cG.x;bG.array[bO+5]=cG.y;bG.array[bO+6]=cF.x;bG.array[bO+7]=cF.y;bO+=8}}else{if(bG.boundTo==="faces"){for(cu=0,de=b2.length;cu<de;cu++){ci=bG.value[b2[cu]];cI=ci;cH=ci;cG=ci;bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cH.x;bG.array[bO+3]=cH.y;bG.array[bO+4]=cG.x;bG.array[bO+5]=cG.y;bO+=6}for(cu=0,de=b0.length;cu<de;cu++){ci=bG.value[b0[cu]];cI=ci;cH=ci;cG=ci;cF=ci;bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cH.x;bG.array[bO+3]=cH.y;bG.array[bO+4]=cG.x;bG.array[bO+5]=cG.y;bG.array[bO+6]=cF.x;bG.array[bO+7]=cF.y;bO+=8}}}}else{if(bG.size===3){var b4;if(bG.type==="c"){b4=["r","g","b"]}else{b4=["x","y","z"]}if(bG.boundTo===undefined||bG.boundTo==="vertices"){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];cI=bG.value[bD.a];cH=bG.value[bD.b];cG=bG.value[bD.c];bG.array[bO]=cI[b4[0]];bG.array[bO+1]=cI[b4[1]];bG.array[bO+2]=cI[b4[2]];bG.array[bO+3]=cH[b4[0]];bG.array[bO+4]=cH[b4[1]];bG.array[bO+5]=cH[b4[2]];bG.array[bO+6]=cG[b4[0]];bG.array[bO+7]=cG[b4[1]];bG.array[bO+8]=cG[b4[2]];bO+=9}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];cI=bG.value[bD.a];cH=bG.value[bD.b];cG=bG.value[bD.c];cF=bG.value[bD.d];bG.array[bO]=cI[b4[0]];bG.array[bO+1]=cI[b4[1]];bG.array[bO+2]=cI[b4[2]];bG.array[bO+3]=cH[b4[0]];bG.array[bO+4]=cH[b4[1]];bG.array[bO+5]=cH[b4[2]];bG.array[bO+6]=cG[b4[0]];bG.array[bO+7]=cG[b4[1]];bG.array[bO+8]=cG[b4[2]];bG.array[bO+9]=cF[b4[0]];bG.array[bO+10]=cF[b4[1]];bG.array[bO+11]=cF[b4[2]];bO+=12}}else{if(bG.boundTo==="faces"){for(cu=0,de=b2.length;cu<de;cu++){ci=bG.value[b2[cu]];cI=ci;cH=ci;cG=ci;bG.array[bO]=cI[b4[0]];bG.array[bO+1]=cI[b4[1]];bG.array[bO+2]=cI[b4[2]];bG.array[bO+3]=cH[b4[0]];bG.array[bO+4]=cH[b4[1]];bG.array[bO+5]=cH[b4[2]];bG.array[bO+6]=cG[b4[0]];bG.array[bO+7]=cG[b4[1]];bG.array[bO+8]=cG[b4[2]];bO+=9}for(cu=0,de=b0.length;cu<de;cu++){ci=bG.value[b0[cu]];cI=ci;cH=ci;cG=ci;cF=ci;bG.array[bO]=cI[b4[0]];bG.array[bO+1]=cI[b4[1]];bG.array[bO+2]=cI[b4[2]];bG.array[bO+3]=cH[b4[0]];bG.array[bO+4]=cH[b4[1]];bG.array[bO+5]=cH[b4[2]];bG.array[bO+6]=cG[b4[0]];bG.array[bO+7]=cG[b4[1]];bG.array[bO+8]=cG[b4[2]];bG.array[bO+9]=cF[b4[0]];bG.array[bO+10]=cF[b4[1]];bG.array[bO+11]=cF[b4[2]];bO+=12}}else{if(bG.boundTo==="faceVertices"){for(cu=0,de=b2.length;cu<de;cu++){ci=bG.value[b2[cu]];cI=ci[0];cH=ci[1];cG=ci[2];bG.array[bO]=cI[b4[0]];bG.array[bO+1]=cI[b4[1]];bG.array[bO+2]=cI[b4[2]];bG.array[bO+3]=cH[b4[0]];bG.array[bO+4]=cH[b4[1]];bG.array[bO+5]=cH[b4[2]];bG.array[bO+6]=cG[b4[0]];bG.array[bO+7]=cG[b4[1]];bG.array[bO+8]=cG[b4[2]];bO+=9}for(cu=0,de=b0.length;cu<de;cu++){ci=bG.value[b0[cu]];cI=ci[0];cH=ci[1];cG=ci[2];cF=ci[3];bG.array[bO]=cI[b4[0]];bG.array[bO+1]=cI[b4[1]];bG.array[bO+2]=cI[b4[2]];bG.array[bO+3]=cH[b4[0]];bG.array[bO+4]=cH[b4[1]];bG.array[bO+5]=cH[b4[2]];bG.array[bO+6]=cG[b4[0]];bG.array[bO+7]=cG[b4[1]];bG.array[bO+8]=cG[b4[2]];bG.array[bO+9]=cF[b4[0]];bG.array[bO+10]=cF[b4[1]];bG.array[bO+11]=cF[b4[2]];bO+=12}}}}}else{if(bG.size===4){if(bG.boundTo===undefined||bG.boundTo==="vertices"){for(cu=0,de=b2.length;cu<de;cu++){bD=da[b2[cu]];cI=bG.value[bD.a];cH=bG.value[bD.b];cG=bG.value[bD.c];bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cI.z;bG.array[bO+3]=cI.w;bG.array[bO+4]=cH.x;bG.array[bO+5]=cH.y;bG.array[bO+6]=cH.z;bG.array[bO+7]=cH.w;bG.array[bO+8]=cG.x;bG.array[bO+9]=cG.y;bG.array[bO+10]=cG.z;bG.array[bO+11]=cG.w;bO+=12}for(cu=0,de=b0.length;cu<de;cu++){bD=da[b0[cu]];cI=bG.value[bD.a];cH=bG.value[bD.b];cG=bG.value[bD.c];cF=bG.value[bD.d];bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cI.z;bG.array[bO+3]=cI.w;bG.array[bO+4]=cH.x;bG.array[bO+5]=cH.y;bG.array[bO+6]=cH.z;bG.array[bO+7]=cH.w;bG.array[bO+8]=cG.x;bG.array[bO+9]=cG.y;bG.array[bO+10]=cG.z;bG.array[bO+11]=cG.w;bG.array[bO+12]=cF.x;bG.array[bO+13]=cF.y;bG.array[bO+14]=cF.z;bG.array[bO+15]=cF.w;bO+=16}}else{if(bG.boundTo==="faces"){for(cu=0,de=b2.length;cu<de;cu++){ci=bG.value[b2[cu]];cI=ci;cH=ci;cG=ci;bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cI.z;bG.array[bO+3]=cI.w;bG.array[bO+4]=cH.x;bG.array[bO+5]=cH.y;bG.array[bO+6]=cH.z;bG.array[bO+7]=cH.w;bG.array[bO+8]=cG.x;bG.array[bO+9]=cG.y;bG.array[bO+10]=cG.z;bG.array[bO+11]=cG.w;bO+=12}for(cu=0,de=b0.length;cu<de;cu++){ci=bG.value[b0[cu]];cI=ci;cH=ci;cG=ci;cF=ci;bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cI.z;bG.array[bO+3]=cI.w;bG.array[bO+4]=cH.x;bG.array[bO+5]=cH.y;bG.array[bO+6]=cH.z;bG.array[bO+7]=cH.w;bG.array[bO+8]=cG.x;bG.array[bO+9]=cG.y;bG.array[bO+10]=cG.z;bG.array[bO+11]=cG.w;bG.array[bO+12]=cF.x;bG.array[bO+13]=cF.y;bG.array[bO+14]=cF.z;bG.array[bO+15]=cF.w;bO+=16}}else{if(bG.boundTo==="faceVertices"){for(cu=0,de=b2.length;cu<de;cu++){ci=bG.value[b2[cu]];cI=ci[0];cH=ci[1];cG=ci[2];bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cI.z;bG.array[bO+3]=cI.w;bG.array[bO+4]=cH.x;bG.array[bO+5]=cH.y;bG.array[bO+6]=cH.z;bG.array[bO+7]=cH.w;bG.array[bO+8]=cG.x;bG.array[bO+9]=cG.y;bG.array[bO+10]=cG.z;bG.array[bO+11]=cG.w;bO+=12}for(cu=0,de=b0.length;cu<de;cu++){ci=bG.value[b0[cu]];cI=ci[0];cH=ci[1];cG=ci[2];cF=ci[3];bG.array[bO]=cI.x;bG.array[bO+1]=cI.y;bG.array[bO+2]=cI.z;bG.array[bO+3]=cI.w;bG.array[bO+4]=cH.x;bG.array[bO+5]=cH.y;bG.array[bO+6]=cH.z;bG.array[bO+7]=cH.w;bG.array[bO+8]=cG.x;bG.array[bO+9]=cG.y;bG.array[bO+10]=cG.z;bG.array[bO+11]=cG.w;bG.array[bO+12]=cF.x;bG.array[bO+13]=cF.y;bG.array[bO+14]=cF.z;bG.array[bO+15]=cF.w;bO+=16}}}}}}}}aU.bindBuffer(aU.ARRAY_BUFFER,bG.buffer);aU.bufferData(aU.ARRAY_BUFFER,bG.array,dw)}}if(bQ){delete cS.__inittedArrays;delete cS.__colorArray;delete cS.__normalArray;delete cS.__tangentArray;delete cS.__uvArray;delete cS.__uv2Array;delete cS.__faceArray;delete cS.__vertexArray;delete cS.__lineArray;delete cS.__skinIndexArray;delete cS.__skinWeightArray}}function aW(bK,bE,bL){var bF=bK.attributes;var bI=bF.index;var bH=bF.position;var bJ=bF.normal;var bC=bF.uv;var bD=bF.color;var bM=bF.tangent;if(bK.elementsNeedUpdate&&bI!==undefined){aU.bindBuffer(aU.ELEMENT_ARRAY_BUFFER,bI.buffer);aU.bufferData(aU.ELEMENT_ARRAY_BUFFER,bI.array,bE)}if(bK.verticesNeedUpdate&&bH!==undefined){aU.bindBuffer(aU.ARRAY_BUFFER,bH.buffer);aU.bufferData(aU.ARRAY_BUFFER,bH.array,bE)}if(bK.normalsNeedUpdate&&bJ!==undefined){aU.bindBuffer(aU.ARRAY_BUFFER,bJ.buffer);aU.bufferData(aU.ARRAY_BUFFER,bJ.array,bE)}if(bK.uvsNeedUpdate&&bC!==undefined){aU.bindBuffer(aU.ARRAY_BUFFER,bC.buffer);aU.bufferData(aU.ARRAY_BUFFER,bC.array,bE)}if(bK.colorsNeedUpdate&&bD!==undefined){aU.bindBuffer(aU.ARRAY_BUFFER,bD.buffer);aU.bufferData(aU.ARRAY_BUFFER,bD.array,bE)}if(bK.tangentsNeedUpdate&&bM!==undefined){aU.bindBuffer(aU.ARRAY_BUFFER,bM.buffer);aU.bufferData(aU.ARRAY_BUFFER,bM.array,bE)}if(bL){for(var bG in bK.attributes){delete bK.attributes[bG].array}}}this.renderBufferImmediate=function(bR,bF,bH){if(bR.hasPositions&&!bR.__webglVertexBuffer){bR.__webglVertexBuffer=aU.createBuffer()}if(bR.hasNormals&&!bR.__webglNormalBuffer){bR.__webglNormalBuffer=aU.createBuffer()}if(bR.hasUvs&&!bR.__webglUvBuffer){bR.__webglUvBuffer=aU.createBuffer()}if(bR.hasColors&&!bR.__webglColorBuffer){bR.__webglColorBuffer=aU.createBuffer()}if(bR.hasPositions){aU.bindBuffer(aU.ARRAY_BUFFER,bR.__webglVertexBuffer);aU.bufferData(aU.ARRAY_BUFFER,bR.positionArray,aU.DYNAMIC_DRAW);aU.enableVertexAttribArray(bF.attributes.position);aU.vertexAttribPointer(bF.attributes.position,3,aU.FLOAT,false,0,0)}if(bR.hasNormals){aU.bindBuffer(aU.ARRAY_BUFFER,bR.__webglNormalBuffer);if(bH.shading===THREE.FlatShading){var bP,bO,bM,bE,bK,bT,bD,bJ,bS,bC,bI,bQ,bN,bL,bG=bR.count*3;for(bL=0;bL<bG;bL+=9){bN=bR.normalArray;bE=bN[bL];bD=bN[bL+1];bC=bN[bL+2];bK=bN[bL+3];bJ=bN[bL+4];bI=bN[bL+5];bT=bN[bL+6];bS=bN[bL+7];bQ=bN[bL+8];bP=(bE+bK+bT)/3;bO=(bD+bJ+bS)/3;bM=(bC+bI+bQ)/3;bN[bL]=bP;bN[bL+1]=bO;bN[bL+2]=bM;bN[bL+3]=bP;bN[bL+4]=bO;bN[bL+5]=bM;bN[bL+6]=bP;bN[bL+7]=bO;bN[bL+8]=bM}}aU.bufferData(aU.ARRAY_BUFFER,bR.normalArray,aU.DYNAMIC_DRAW);aU.enableVertexAttribArray(bF.attributes.normal);aU.vertexAttribPointer(bF.attributes.normal,3,aU.FLOAT,false,0,0)}if(bR.hasUvs&&bH.map){aU.bindBuffer(aU.ARRAY_BUFFER,bR.__webglUvBuffer);aU.bufferData(aU.ARRAY_BUFFER,bR.uvArray,aU.DYNAMIC_DRAW);aU.enableVertexAttribArray(bF.attributes.uv);aU.vertexAttribPointer(bF.attributes.uv,2,aU.FLOAT,false,0,0)}if(bR.hasColors&&bH.vertexColors!==THREE.NoColors){aU.bindBuffer(aU.ARRAY_BUFFER,bR.__webglColorBuffer);aU.bufferData(aU.ARRAY_BUFFER,bR.colorArray,aU.DYNAMIC_DRAW);aU.enableVertexAttribArray(bF.attributes.color);aU.vertexAttribPointer(bF.attributes.color,3,aU.FLOAT,false,0,0)}aU.drawArrays(aU.TRIANGLES,0,bR.count);bR.count=0};this.renderBufferDirect=function(bY,b2,bD,bQ,bG,b5){if(bQ.visible===false){return}var bL,bM,bV,bZ,b1,bR;bL=aH(bY,b2,bD,bQ,b5);bM=bL.attributes;var bT=false,bW=bQ.wireframe?1:0,b0=(bG.id*16777215)+(bL.id*2)+bW;if(b0!==aB){aB=b0;bT=true}if(b5 instanceof THREE.Mesh){var bH=bG.offsets;if(bH.length>1){bT=true}for(var bX=0,bO=bH.length;bX<bO;++bX){var bF=bH[bX].index;if(bT){var b4=bG.attributes.position;var bP=b4.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,b4.buffer);aU.vertexAttribPointer(bM.position,bP,aU.FLOAT,false,0,bF*bP*4);var b3=bG.attributes.normal;if(bM.normal>=0&&b3){var bE=b3.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,b3.buffer);aU.vertexAttribPointer(bM.normal,bE,aU.FLOAT,false,0,bF*bE*4)}var bJ=bG.attributes.uv;if(bM.uv>=0&&bJ){if(bJ.buffer){var bC=bJ.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,bJ.buffer);aU.vertexAttribPointer(bM.uv,bC,aU.FLOAT,false,0,bF*bC*4);aU.enableVertexAttribArray(bM.uv)}else{aU.disableVertexAttribArray(bM.uv)}}var bU=bG.attributes.color;if(bM.color>=0&&bU){var bK=bU.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,bU.buffer);aU.vertexAttribPointer(bM.color,bK,aU.FLOAT,false,0,bF*bK*4)}var bN=bG.attributes.tangent;if(bM.tangent>=0&&bN){var bS=bN.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,bN.buffer);aU.vertexAttribPointer(bM.tangent,bS,aU.FLOAT,false,0,bF*bS*4)}var bI=bG.attributes.index;aU.bindBuffer(aU.ELEMENT_ARRAY_BUFFER,bI.buffer)}aU.drawElements(aU.TRIANGLES,bH[bX].count,aU.UNSIGNED_SHORT,bH[bX].start*2);G.info.render.calls++;G.info.render.vertices+=bH[bX].count;G.info.render.faces+=bH[bX].count/3}}else{if(b5 instanceof THREE.ParticleSystem){if(bT){var b4=bG.attributes.position;var bP=b4.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,b4.buffer);aU.vertexAttribPointer(bM.position,bP,aU.FLOAT,false,0,0);var bU=bG.attributes.color;if(bM.color>=0&&bU){var bK=bU.itemSize;aU.bindBuffer(aU.ARRAY_BUFFER,bU.buffer);aU.vertexAttribPointer(bM.color,bK,aU.FLOAT,false,0,0)}aU.drawArrays(aU.POINTS,0,b4.numItems/3);G.info.render.calls++;G.info.render.points+=b4.numItems/3}}}};this.renderBuffer=function(bM,bI,bC,bN,bG,bF){if(bN.visible===false){return}var bL,bJ,bP,bS,bR,bD,bK,bQ;bL=aH(bM,bI,bC,bN,bF);bJ=bL.attributes;var bE=false,bO=bN.wireframe?1:0,bH=(bG.id*16777215)+(bL.id*2)+bO;if(bH!==aB){aB=bH;bE=true}if(!bN.morphTargets&&bJ.position>=0){if(bE){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglVertexBuffer);aU.vertexAttribPointer(bJ.position,3,aU.FLOAT,false,0,0)}}else{if(bF.morphTargetBase){Z(bN,bG,bF)}}if(bE){if(bG.__webglCustomAttributesList){for(bK=0,bQ=bG.__webglCustomAttributesList.length;bK<bQ;bK++){bD=bG.__webglCustomAttributesList[bK];if(bJ[bD.buffer.belongsToAttribute]>=0){aU.bindBuffer(aU.ARRAY_BUFFER,bD.buffer);aU.vertexAttribPointer(bJ[bD.buffer.belongsToAttribute],bD.size,aU.FLOAT,false,0,0)}}}if(bJ.color>=0){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglColorBuffer);aU.vertexAttribPointer(bJ.color,3,aU.FLOAT,false,0,0)}if(bJ.normal>=0){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglNormalBuffer);aU.vertexAttribPointer(bJ.normal,3,aU.FLOAT,false,0,0)}if(bJ.tangent>=0){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglTangentBuffer);aU.vertexAttribPointer(bJ.tangent,4,aU.FLOAT,false,0,0)}if(bJ.uv>=0){if(bG.__webglUVBuffer){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglUVBuffer);aU.vertexAttribPointer(bJ.uv,2,aU.FLOAT,false,0,0);aU.enableVertexAttribArray(bJ.uv)}else{aU.disableVertexAttribArray(bJ.uv)}}if(bJ.uv2>=0){if(bG.__webglUV2Buffer){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglUV2Buffer);aU.vertexAttribPointer(bJ.uv2,2,aU.FLOAT,false,0,0);aU.enableVertexAttribArray(bJ.uv2)}else{aU.disableVertexAttribArray(bJ.uv2)}}if(bN.skinning&&bJ.skinIndex>=0&&bJ.skinWeight>=0){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglSkinIndicesBuffer);aU.vertexAttribPointer(bJ.skinIndex,4,aU.FLOAT,false,0,0);aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglSkinWeightsBuffer);aU.vertexAttribPointer(bJ.skinWeight,4,aU.FLOAT,false,0,0)}}if(bF instanceof THREE.Mesh){if(bN.wireframe){X(bN.wireframeLinewidth);if(bE){aU.bindBuffer(aU.ELEMENT_ARRAY_BUFFER,bG.__webglLineBuffer)}aU.drawElements(aU.LINES,bG.__webglLineCount,aU.UNSIGNED_SHORT,0)}else{if(bE){aU.bindBuffer(aU.ELEMENT_ARRAY_BUFFER,bG.__webglFaceBuffer)}aU.drawElements(aU.TRIANGLES,bG.__webglFaceCount,aU.UNSIGNED_SHORT,0)}G.info.render.calls++;G.info.render.vertices+=bG.__webglFaceCount;G.info.render.faces+=bG.__webglFaceCount/3}else{if(bF instanceof THREE.Line){bS=(bF.type===THREE.LineStrip)?aU.LINE_STRIP:aU.LINES;X(bN.linewidth);aU.drawArrays(bS,0,bG.__webglLineCount);G.info.render.calls++}else{if(bF instanceof THREE.ParticleSystem){aU.drawArrays(aU.POINTS,0,bG.__webglParticleCount);G.info.render.calls++;G.info.render.points+=bG.__webglParticleCount}else{if(bF instanceof THREE.Ribbon){aU.drawArrays(aU.TRIANGLE_STRIP,0,bG.__webglVertexCount);G.info.render.calls++}}}}};function Z(bK,bG,bF){var bI=bK.program.attributes;if(bF.morphTargetBase!==-1){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglMorphTargetsBuffers[bF.morphTargetBase]);aU.vertexAttribPointer(bI.position,3,aU.FLOAT,false,0,0)}else{if(bI.position>=0){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglVertexBuffer);aU.vertexAttribPointer(bI.position,3,aU.FLOAT,false,0,0)}}if(bF.morphTargetForcedOrder.length){var bC=0;var bD=bF.morphTargetForcedOrder;var bM=bF.morphTargetInfluences;while(bC<bK.numSupportedMorphTargets&&bC<bD.length){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglMorphTargetsBuffers[bD[bC]]);aU.vertexAttribPointer(bI["morphTarget"+bC],3,aU.FLOAT,false,0,0);if(bK.morphNormals){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglMorphNormalsBuffers[bD[bC]]);aU.vertexAttribPointer(bI["morphNormal"+bC],3,aU.FLOAT,false,0,0)}bF.__webglMorphTargetInfluences[bC]=bM[bD[bC]];bC++}}else{var bL,bE=[];var bM=bF.morphTargetInfluences;var bJ,bN=bM.length;for(bJ=0;bJ<bN;bJ++){bL=bM[bJ];if(bL>0){bE.push([bJ,bL])}}if(bE.length>bK.numSupportedMorphTargets){bE.sort(a);bE.length=bK.numSupportedMorphTargets}else{if(bE.length>bK.numSupportedMorphNormals){bE.sort(a)}else{if(bE.length===0){bE.push([0,0])}}}var bH,bC=0;while(bC<bK.numSupportedMorphTargets){if(bE[bC]){bH=bE[bC][0];aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglMorphTargetsBuffers[bH]);aU.vertexAttribPointer(bI["morphTarget"+bC],3,aU.FLOAT,false,0,0);if(bK.morphNormals){aU.bindBuffer(aU.ARRAY_BUFFER,bG.__webglMorphNormalsBuffers[bH]);aU.vertexAttribPointer(bI["morphNormal"+bC],3,aU.FLOAT,false,0,0)}bF.__webglMorphTargetInfluences[bC]=bM[bH]}else{aU.vertexAttribPointer(bI["morphTarget"+bC],3,aU.FLOAT,false,0,0);if(bK.morphNormals){aU.vertexAttribPointer(bI["morphNormal"+bC],3,aU.FLOAT,false,0,0)}bF.__webglMorphTargetInfluences[bC]=0}bC++}}if(bK.program.uniforms.morphTargetInfluences!==null){aU.uniform1fv(bK.program.uniforms.morphTargetInfluences,bF.__webglMorphTargetInfluences)}}function I(bD,bC){return bC.z-bD.z}function a(bD,bC){return bC[1]-bD[1]}this.render=function(bI,bM,bJ,bK){if(bM instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var bG,bN,bH,bE,bC,bF=bI.__lights,bD=bI.fog;at=-1;by=true;if(this.autoUpdateScene){bI.updateMatrixWorld()}if(bM.parent===undefined){bM.updateMatrixWorld()}if(!bM._viewMatrixArray){bM._viewMatrixArray=new Float32Array(16)}if(!bM._projectionMatrixArray){bM._projectionMatrixArray=new Float32Array(16)}bM.matrixWorldInverse.getInverse(bM.matrixWorld);bM.matrixWorldInverse.flattenToArray(bM._viewMatrixArray);bM.projectionMatrix.flattenToArray(bM._projectionMatrixArray);ax.multiply(bM.projectionMatrix,bM.matrixWorldInverse);aP.setFromMatrix(ax);if(this.autoUpdateObjects){this.initWebGLObjects(bI)}aD(this.renderPluginsPre,bI,bM);G.info.render.calls=0;G.info.render.vertices=0;G.info.render.faces=0;G.info.render.points=0;this.setRenderTarget(bJ);if(this.autoClear||bK){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}bC=bI.__webglObjects;for(bG=0,bN=bC.length;bG<bN;bG++){bH=bC[bG];bE=bH.object;bH.render=false;if(bE.visible){if(!(bE instanceof THREE.Mesh||bE instanceof THREE.ParticleSystem)||!(bE.frustumCulled)||aP.contains(bE)){aZ(bE,bM);m(bH);bH.render=true;if(this.sortObjects===true){if(bE.renderDepth!==null){bH.z=bE.renderDepth}else{s.copy(bE.matrixWorld.getPosition());ax.multiplyVector3(s);bH.z=s.z}}}}}if(this.sortObjects){bC.sort(I)}bC=bI.__webglObjectsImmediate;for(bG=0,bN=bC.length;bG<bN;bG++){bH=bC[bG];bE=bH.object;if(bE.visible){aZ(bE,bM);R(bH)}}if(bI.overrideMaterial){var bL=bI.overrideMaterial;this.setBlending(bL.blending,bL.blendEquation,bL.blendSrc,bL.blendDst);this.setDepthTest(bL.depthTest);this.setDepthWrite(bL.depthWrite);a3(bL.polygonOffset,bL.polygonOffsetFactor,bL.polygonOffsetUnits);ar(bI.__webglObjects,false,"",bM,bF,bD,true,bL);bq(bI.__webglObjectsImmediate,"",bM,bF,bD,false,bL)}else{this.setBlending(THREE.NormalBlending);ar(bI.__webglObjects,true,"opaque",bM,bF,bD,false);bq(bI.__webglObjectsImmediate,"opaque",bM,bF,bD,false);ar(bI.__webglObjects,false,"transparent",bM,bF,bD,true);bq(bI.__webglObjectsImmediate,"transparent",bM,bF,bD,true)}aD(this.renderPluginsPost,bI,bM);if(bJ&&bJ.generateMipmaps&&bJ.minFilter!==THREE.NearestFilter&&bJ.minFilter!==THREE.LinearFilter){g(bJ)}this.setDepthTest(true);this.setDepthWrite(true)};function aD(bC,bG,bF){if(!bC.length){return}for(var bE=0,bD=bC.length;bE<bD;bE++){A=null;J=null;bz=-1;aN=-1;ac=-1;y=-1;aa=-1;aB=-1;at=-1;by=true;bC[bE].render(bG,bF,T,aE);A=null;J=null;bz=-1;aN=-1;ac=-1;y=-1;aa=-1;aB=-1;at=-1;by=true}}function ar(bC,bP,bL,bO,bI,bD,bM,bQ){var bK,bG,bH,bN,bE,bF,bR;if(bP){bE=bC.length-1;bF=-1;bR=-1}else{bE=0;bF=bC.length;bR=1}for(var bJ=bE;bJ!==bF;bJ+=bR){bK=bC[bJ];if(bK.render){bG=bK.object;bH=bK.buffer;if(bQ){bN=bQ}else{bN=bK[bL];if(!bN){continue}if(bM){G.setBlending(bN.blending,bN.blendEquation,bN.blendSrc,bN.blendDst)}G.setDepthTest(bN.depthTest);G.setDepthWrite(bN.depthWrite);a3(bN.polygonOffset,bN.polygonOffsetFactor,bN.polygonOffsetUnits)}G.setMaterialFaces(bN);if(bH instanceof THREE.BufferGeometry){G.renderBufferDirect(bO,bI,bD,bN,bH,bG)}else{G.renderBuffer(bO,bI,bD,bN,bH,bG)}}}}function bq(bC,bJ,bM,bF,bD,bK,bN){var bI,bE,bL,bH;for(var bG=0,bO=bC.length;bG<bO;bG++){bI=bC[bG];bE=bI.object;if(bE.visible){if(bN){bL=bN}else{bL=bI[bJ];if(!bL){continue}if(bK){G.setBlending(bL.blending,bL.blendEquation,bL.blendSrc,bL.blendDst)}G.setDepthTest(bL.depthTest);G.setDepthWrite(bL.depthWrite);a3(bL.polygonOffset,bL.polygonOffsetFactor,bL.polygonOffsetUnits)}G.renderImmediateObject(bM,bF,bD,bL,bE)}}}this.renderImmediateObject=function(bG,bE,bH,bF,bD){var bC=aH(bG,bE,bH,bF,bD);aB=-1;G.setMaterialFaces(bF);if(bD.immediateRenderCallback){bD.immediateRenderCallback(bC,aU,aP)}else{bD.render(function(bI){G.renderBufferImmediate(bI,bC,bF)})}};function R(bE){var bC=bE.object,bD=bC.material;if(bD.transparent){bE.transparent=bD;bE.opaque=null}else{bE.opaque=bD;bE.transparent=null}}function m(bH){var bF=bH.object,bE=bH.buffer,bG,bD,bC;bC=bF.material;if(bC instanceof THREE.MeshFaceMaterial){bD=bE.materialIndex;if(bD>=0){bG=bF.geometry.materials[bD];if(bG.transparent){bH.transparent=bG;bH.opaque=null}else{bH.opaque=bG;bH.transparent=null}}}else{bG=bC;if(bG){if(bG.transparent){bH.transparent=bG;bH.opaque=null}else{bH.opaque=bG;bH.transparent=null}}}}function bl(bK){var bG,bM,bJ,bN,bI,bC,bE,bH={};var bL=bK.morphTargets.length;var bD=bK.morphNormals.length;bK.geometryGroups={};for(bG=0,bM=bK.faces.length;bG<bM;bG++){bJ=bK.faces[bG];bN=bJ.materialIndex;bC=(bN!==undefined)?bN:-1;if(bH[bC]===undefined){bH[bC]={hash:bC,counter:0}}bE=bH[bC].hash+"_"+bH[bC].counter;if(bK.geometryGroups[bE]===undefined){bK.geometryGroups[bE]={faces3:[],faces4:[],materialIndex:bN,vertices:0,numMorphTargets:bL,numMorphNormals:bD}}bI=bJ instanceof THREE.Face3?3:4;if(bK.geometryGroups[bE].vertices+bI>65535){bH[bC].counter+=1;bE=bH[bC].hash+"_"+bH[bC].counter;if(bK.geometryGroups[bE]===undefined){bK.geometryGroups[bE]={faces3:[],faces4:[],materialIndex:bN,vertices:0,numMorphTargets:bL,numMorphNormals:bD}}}if(bJ instanceof THREE.Face3){bK.geometryGroups[bE].faces3.push(bG)}else{bK.geometryGroups[bE].faces4.push(bG)}bK.geometryGroups[bE].vertices+=bI}bK.geometryGroupsList=[];for(var bF in bK.geometryGroups){bK.geometryGroups[bF].id=aC++;bK.geometryGroupsList.push(bK.geometryGroups[bF])}}this.initWebGLObjects=function(bD){if(!bD.__webglObjects){bD.__webglObjects=[];bD.__webglObjectsImmediate=[];bD.__webglSprites=[];bD.__webglFlares=[]}while(bD.__objectsAdded.length){r(bD.__objectsAdded[0],bD);bD.__objectsAdded.splice(0,1)}while(bD.__objectsRemoved.length){aM(bD.__objectsRemoved[0],bD);bD.__objectsRemoved.splice(0,1)}for(var bE=0,bC=bD.__webglObjects.length;bE<bC;bE++){al(bD.__webglObjects[bE].object)}};function r(bD,bF){var bE,bG,bC;if(!bD.__webglInit){bD.__webglInit=true;bD._modelViewMatrix=new THREE.Matrix4();bD._normalMatrix=new THREE.Matrix3();if(bD instanceof THREE.Mesh){bG=bD.geometry;if(bG instanceof THREE.Geometry){if(bG.geometryGroups===undefined){bl(bG)}for(bE in bG.geometryGroups){bC=bG.geometryGroups[bE];if(!bC.__webglVertexBuffer){bv(bC);z(bC,bD);bG.verticesNeedUpdate=true;bG.morphTargetsNeedUpdate=true;bG.elementsNeedUpdate=true;bG.uvsNeedUpdate=true;bG.normalsNeedUpdate=true;bG.tangentsNeedUpdate=true;bG.colorsNeedUpdate=true}}}else{if(bG instanceof THREE.BufferGeometry){E(bG)}}}else{if(bD instanceof THREE.Ribbon){bG=bD.geometry;if(!bG.__webglVertexBuffer){a7(bG);bm(bG);bG.verticesNeedUpdate=true;bG.colorsNeedUpdate=true}}else{if(bD instanceof THREE.Line){bG=bD.geometry;if(!bG.__webglVertexBuffer){bx(bG);B(bG,bD);bG.verticesNeedUpdate=true;bG.colorsNeedUpdate=true}}else{if(bD instanceof THREE.ParticleSystem){bG=bD.geometry;if(!bG.__webglVertexBuffer){if(bG instanceof THREE.Geometry){W(bG);bb(bG,bD);bG.verticesNeedUpdate=true;bG.colorsNeedUpdate=true}else{if(bG instanceof THREE.BufferGeometry){E(bG)}}}}}}}}if(!bD.__webglActive){if(bD instanceof THREE.Mesh){bG=bD.geometry;if(bG instanceof THREE.BufferGeometry){j(bF.__webglObjects,bG,bD)}else{for(bE in bG.geometryGroups){bC=bG.geometryGroups[bE];j(bF.__webglObjects,bC,bD)}}}else{if(bD instanceof THREE.Ribbon||bD instanceof THREE.Line||bD instanceof THREE.ParticleSystem){bG=bD.geometry;j(bF.__webglObjects,bG,bD)}else{if(bD instanceof THREE.ImmediateRenderObject||bD.immediateRenderCallback){H(bF.__webglObjectsImmediate,bD)}else{if(bD instanceof THREE.Sprite){bF.__webglSprites.push(bD)}else{if(bD instanceof THREE.LensFlare){bF.__webglFlares.push(bD)}}}}}bD.__webglActive=true}}function j(bE,bC,bD){bE.push({buffer:bC,object:bD,opaque:null,transparent:null})}function H(bD,bC){bD.push({object:bC,opaque:null,transparent:null})}function al(bE){var bI=bE.geometry,bC,bG,bH;if(bE instanceof THREE.Mesh){if(bI instanceof THREE.BufferGeometry){if(bI.verticesNeedUpdate||bI.elementsNeedUpdate||bI.uvsNeedUpdate||bI.normalsNeedUpdate||bI.colorsNeedUpdate||bI.tangentsNeedUpdate){aW(bI,aU.DYNAMIC_DRAW,!bI.dynamic)}bI.verticesNeedUpdate=false;bI.elementsNeedUpdate=false;bI.uvsNeedUpdate=false;bI.normalsNeedUpdate=false;bI.colorsNeedUpdate=false;bI.tangentsNeedUpdate=false}else{for(var bF=0,bD=bI.geometryGroupsList.length;bF<bD;bF++){bC=bI.geometryGroupsList[bF];bH=aF(bE,bC);bG=bH.attributes&&aJ(bH);if(bI.verticesNeedUpdate||bI.morphTargetsNeedUpdate||bI.elementsNeedUpdate||bI.uvsNeedUpdate||bI.normalsNeedUpdate||bI.colorsNeedUpdate||bI.tangentsNeedUpdate||bG){p(bC,bE,aU.DYNAMIC_DRAW,!bI.dynamic,bH)}}bI.verticesNeedUpdate=false;bI.morphTargetsNeedUpdate=false;bI.elementsNeedUpdate=false;bI.uvsNeedUpdate=false;bI.normalsNeedUpdate=false;bI.colorsNeedUpdate=false;bI.tangentsNeedUpdate=false;bH.attributes&&af(bH)}}else{if(bE instanceof THREE.Ribbon){if(bI.verticesNeedUpdate||bI.colorsNeedUpdate){ag(bI,aU.DYNAMIC_DRAW)}bI.verticesNeedUpdate=false;bI.colorsNeedUpdate=false}else{if(bE instanceof THREE.Line){bH=aF(bE,bC);bG=bH.attributes&&aJ(bH);if(bI.verticesNeedUpdate||bI.colorsNeedUpdate||bG){bu(bI,aU.DYNAMIC_DRAW)}bI.verticesNeedUpdate=false;bI.colorsNeedUpdate=false;bH.attributes&&af(bH)}else{if(bE instanceof THREE.ParticleSystem){if(bI instanceof THREE.BufferGeometry){if(bI.verticesNeedUpdate||bI.colorsNeedUpdate){aW(bI,aU.DYNAMIC_DRAW,!bI.dynamic)}bI.verticesNeedUpdate=false;bI.colorsNeedUpdate=false}else{bH=aF(bE,bC);bG=bH.attributes&&aJ(bH);if(bI.verticesNeedUpdate||bI.colorsNeedUpdate||bE.sortParticles||bG){N(bI,aU.DYNAMIC_DRAW,bE)}bI.verticesNeedUpdate=false;bI.colorsNeedUpdate=false;bH.attributes&&af(bH)}}}}}}function aJ(bD){for(var bC in bD.attributes){if(bD.attributes[bC].needsUpdate){return true}}return false}function af(bD){for(var bC in bD.attributes){bD.attributes[bC].needsUpdate=false}}function aM(bC,bD){if(bC instanceof THREE.Mesh||bC instanceof THREE.ParticleSystem||bC instanceof THREE.Ribbon||bC instanceof THREE.Line){aI(bD.__webglObjects,bC)}else{if(bC instanceof THREE.Sprite){aL(bD.__webglSprites,bC)}else{if(bC instanceof THREE.LensFlare){aL(bD.__webglFlares,bC)}else{if(bC instanceof THREE.ImmediateRenderObject||bC.immediateRenderCallback){aI(bD.__webglObjectsImmediate,bC)}}}}bC.__webglActive=false}function aI(bD,bC){for(var bE=bD.length-1;bE>=0;bE--){if(bD[bE].object===bC){bD.splice(bE,1)}}}function aL(bD,bC){for(var bE=bD.length-1;bE>=0;bE--){if(bD[bE]===bC){bD.splice(bE,1)}}}this.initMaterial=function(bM,bK,bD,bI){var bR,bO,bN,bL,bQ,bG,bC,bH,bP;if(bM instanceof THREE.MeshDepthMaterial){bP="depth"}else{if(bM instanceof THREE.MeshNormalMaterial){bP="normal"}else{if(bM instanceof THREE.MeshBasicMaterial){bP="basic"}else{if(bM instanceof THREE.MeshLambertMaterial){bP="lambert"}else{if(bM instanceof THREE.MeshPhongMaterial){bP="phong"}else{if(bM instanceof THREE.LineBasicMaterial){bP="basic"}else{if(bM instanceof THREE.ParticleBasicMaterial){bP="particle_basic"}}}}}}}if(bP){aQ(bM,THREE.ShaderLib[bP])}bG=u(bK);bH=bn(bK);bC=f(bI);bQ={map:!!bM.map,envMap:!!bM.envMap,lightMap:!!bM.lightMap,bumpMap:!!bM.bumpMap,normalMap:!!bM.normalMap,specularMap:!!bM.specularMap,vertexColors:bM.vertexColors,fog:bD,useFog:bM.fog,sizeAttenuation:bM.sizeAttenuation,skinning:bM.skinning,maxBones:bC,useVertexTexture:aY&&bI&&bI.useVertexTexture,boneTextureWidth:bI&&bI.boneTextureWidth,boneTextureHeight:bI&&bI.boneTextureHeight,morphTargets:bM.morphTargets,morphNormals:bM.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:bG.directional,maxPointLights:bG.point,maxSpotLights:bG.spot,maxHemiLights:bG.hemi,maxShadows:bH,shadowMapEnabled:this.shadowMapEnabled&&bI.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:bM.alphaTest,metal:bM.metal,perPixel:bM.perPixel,wrapAround:bM.wrapAround,doubleSided:bM.side===THREE.DoubleSide,flipSided:bM.side===THREE.BackSide};bM.program=a2(bP,bM.fragmentShader,bM.vertexShader,bM.uniforms,bM.attributes,bM.defines,bQ);var bJ=bM.program.attributes;if(bJ.position>=0){aU.enableVertexAttribArray(bJ.position)}if(bJ.color>=0){aU.enableVertexAttribArray(bJ.color)}if(bJ.normal>=0){aU.enableVertexAttribArray(bJ.normal)}if(bJ.tangent>=0){aU.enableVertexAttribArray(bJ.tangent)}if(bM.skinning&&bJ.skinIndex>=0&&bJ.skinWeight>=0){aU.enableVertexAttribArray(bJ.skinIndex);aU.enableVertexAttribArray(bJ.skinWeight)}if(bM.attributes){for(bO in bM.attributes){if(bJ[bO]!==undefined&&bJ[bO]>=0){aU.enableVertexAttribArray(bJ[bO])}}}if(bM.morphTargets){bM.numSupportedMorphTargets=0;var bF,bE="morphTarget";for(bL=0;bL<this.maxMorphTargets;bL++){bF=bE+bL;if(bJ[bF]>=0){aU.enableVertexAttribArray(bJ[bF]);bM.numSupportedMorphTargets++}}}if(bM.morphNormals){bM.numSupportedMorphNormals=0;var bF,bE="morphNormal";for(bL=0;bL<this.maxMorphNormals;bL++){bF=bE+bL;if(bJ[bF]>=0){aU.enableVertexAttribArray(bJ[bF]);bM.numSupportedMorphNormals++}}}bM.uniformsList=[];for(bR in bM.uniforms){bM.uniformsList.push([bM.uniforms[bR],bR])}};function aQ(bD,bC){bD.uniforms=THREE.UniformsUtils.clone(bC.uniforms);bD.vertexShader=bC.vertexShader;bD.fragmentShader=bC.fragmentShader}function aH(bI,bE,bC,bJ,bD){bi=0;if(bJ.needsUpdate){if(bJ.program){G.deallocateMaterial(bJ)}G.initMaterial(bJ,bE,bC,bD);bJ.needsUpdate=false}if(bJ.morphTargets){if(!bD.__webglMorphTargetInfluences){bD.__webglMorphTargetInfluences=new Float32Array(G.maxMorphTargets)}}var bH=false;var bF=bJ.program,bM=bF.uniforms,bK=bJ.uniforms;if(bF!==A){aU.useProgram(bF);A=bF;bH=true}if(bJ.id!==at){at=bJ.id;bH=true}if(bH||bI!==J){aU.uniformMatrix4fv(bM.projectionMatrix,false,bI._projectionMatrixArray);if(bI!==J){J=bI}}if(bJ.skinning){if(aY&&bD.useVertexTexture){if(bM.boneTexture!==null){var bL=F();aU.uniform1i(bM.boneTexture,bL);G.setTexture(bD.boneTexture,bL)}}else{if(bM.boneGlobalMatrices!==null){aU.uniformMatrix4fv(bM.boneGlobalMatrices,false,bD.boneMatrices)}}}if(bH){if(bC&&bJ.fog){aX(bK,bC)}if(bJ instanceof THREE.MeshPhongMaterial||bJ instanceof THREE.MeshLambertMaterial||bJ.lights){if(by){bg(bF,bE);by=false}x(bK,t)}if(bJ instanceof THREE.MeshBasicMaterial||bJ instanceof THREE.MeshLambertMaterial||bJ instanceof THREE.MeshPhongMaterial){aj(bK,bJ)}if(bJ instanceof THREE.LineBasicMaterial){ap(bK,bJ)}else{if(bJ instanceof THREE.ParticleBasicMaterial){ae(bK,bJ)}else{if(bJ instanceof THREE.MeshPhongMaterial){ao(bK,bJ)}else{if(bJ instanceof THREE.MeshLambertMaterial){bd(bK,bJ)}else{if(bJ instanceof THREE.MeshDepthMaterial){bK.mNear.value=bI.near;bK.mFar.value=bI.far;bK.opacity.value=bJ.opacity}else{if(bJ instanceof THREE.MeshNormalMaterial){bK.opacity.value=bJ.opacity}}}}}}if(bD.receiveShadow&&!bJ._shadowPass){C(bK,bE)}a6(bF,bJ.uniformsList);if(bJ instanceof THREE.ShaderMaterial||bJ instanceof THREE.MeshPhongMaterial||bJ.envMap){if(bM.cameraPosition!==null){var bG=bI.matrixWorld.getPosition();aU.uniform3f(bM.cameraPosition,bG.x,bG.y,bG.z)}}if(bJ instanceof THREE.MeshPhongMaterial||bJ instanceof THREE.MeshLambertMaterial||bJ instanceof THREE.ShaderMaterial||bJ.skinning){if(bM.viewMatrix!==null){aU.uniformMatrix4fv(bM.viewMatrix,false,bI._viewMatrixArray)}}}w(bM,bD);if(bM.modelMatrix!==null){aU.uniformMatrix4fv(bM.modelMatrix,false,bD.matrixWorld.elements)}return bF}function aj(bD,bE){bD.opacity.value=bE.opacity;if(G.gammaInput){bD.diffuse.value.copyGammaToLinear(bE.color)}else{bD.diffuse.value=bE.color}bD.map.value=bE.map;bD.lightMap.value=bE.lightMap;bD.specularMap.value=bE.specularMap;if(bE.bumpMap){bD.bumpMap.value=bE.bumpMap;bD.bumpScale.value=bE.bumpScale}if(bE.normalMap){bD.normalMap.value=bE.normalMap;bD.normalScale.value.copy(bE.normalScale)}var bC;if(bE.map){bC=bE.map}else{if(bE.specularMap){bC=bE.specularMap}else{if(bE.normalMap){bC=bE.normalMap}else{if(bE.bumpMap){bC=bE.bumpMap}}}}if(bC!==undefined){var bG=bC.offset;var bF=bC.repeat;bD.offsetRepeat.value.set(bG.x,bG.y,bF.x,bF.y)}bD.envMap.value=bE.envMap;bD.flipEnvMap.value=(bE.envMap instanceof THREE.WebGLRenderTargetCube)?1:-1;if(G.gammaInput){bD.reflectivity.value=bE.reflectivity}else{bD.reflectivity.value=bE.reflectivity}bD.refractionRatio.value=bE.refractionRatio;bD.combine.value=bE.combine;bD.useRefract.value=bE.envMap&&bE.envMap.mapping instanceof THREE.CubeRefractionMapping}function ap(bC,bD){bC.diffuse.value=bD.color;bC.opacity.value=bD.opacity}function ae(bC,bD){bC.psColor.value=bD.color;bC.opacity.value=bD.opacity;bC.size.value=bD.size;bC.scale.value=i.height/2;bC.map.value=bD.map}function aX(bC,bD){bC.fogColor.value=bD.color;if(bD instanceof THREE.Fog){bC.fogNear.value=bD.near;bC.fogFar.value=bD.far}else{if(bD instanceof THREE.FogExp2){bC.fogDensity.value=bD.density}}}function ao(bC,bD){bC.shininess.value=bD.shininess;if(G.gammaInput){bC.ambient.value.copyGammaToLinear(bD.ambient);bC.emissive.value.copyGammaToLinear(bD.emissive);bC.specular.value.copyGammaToLinear(bD.specular)}else{bC.ambient.value=bD.ambient;bC.emissive.value=bD.emissive;bC.specular.value=bD.specular}if(bD.wrapAround){bC.wrapRGB.value.copy(bD.wrapRGB)}}function bd(bC,bD){if(G.gammaInput){bC.ambient.value.copyGammaToLinear(bD.ambient);bC.emissive.value.copyGammaToLinear(bD.emissive)}else{bC.ambient.value=bD.ambient;bC.emissive.value=bD.emissive}if(bD.wrapAround){bC.wrapRGB.value.copy(bD.wrapRGB)}}function x(bC,bD){bC.ambientLightColor.value=bD.ambient;bC.directionalLightColor.value=bD.directional.colors;bC.directionalLightDirection.value=bD.directional.positions;bC.pointLightColor.value=bD.point.colors;bC.pointLightPosition.value=bD.point.positions;bC.pointLightDistance.value=bD.point.distances;bC.spotLightColor.value=bD.spot.colors;bC.spotLightPosition.value=bD.spot.positions;bC.spotLightDistance.value=bD.spot.distances;bC.spotLightDirection.value=bD.spot.directions;bC.spotLightAngle.value=bD.spot.angles;bC.spotLightExponent.value=bD.spot.exponents;bC.hemisphereLightSkyColor.value=bD.hemi.skyColors;bC.hemisphereLightGroundColor.value=bD.hemi.groundColors;bC.hemisphereLightPosition.value=bD.hemi.positions}function C(bC,bG){if(bC.shadowMatrix){var bF=0;for(var bH=0,bE=bG.length;bH<bE;bH++){var bD=bG[bH];if(!bD.castShadow){continue}if(bD instanceof THREE.SpotLight||(bD instanceof THREE.DirectionalLight&&!bD.shadowCascade)){bC.shadowMap.value[bF]=bD.shadowMap;bC.shadowMapSize.value[bF]=bD.shadowMapSize;bC.shadowMatrix.value[bF]=bD.shadowMatrix;bC.shadowDarkness.value[bF]=bD.shadowDarkness;bC.shadowBias.value[bF]=bD.shadowBias;bF++}}}}function w(bC,bD){aU.uniformMatrix4fv(bC.modelViewMatrix,false,bD._modelViewMatrix.elements);if(bC.normalMatrix){aU.uniformMatrix3fv(bC.normalMatrix,false,bD._normalMatrix.elements)}}function F(){var bC=bi;if(bC>=a1){console.warn("Trying to use "+bC+" texture units while this GPU supports only "+a1)}bi+=1;return bC}function a6(bH,bN){var bC,bL,bJ,bM,bI,bO,bG,bK,bE,bF,bD;for(bE=0,bF=bN.length;bE<bF;bE++){bM=bH.uniforms[bN[bE][1]];if(!bM){continue}bC=bN[bE][0];bJ=bC.type;bL=bC.value;if(bJ==="i"){aU.uniform1i(bM,bL)}else{if(bJ==="f"){aU.uniform1f(bM,bL)}else{if(bJ==="v2"){aU.uniform2f(bM,bL.x,bL.y)}else{if(bJ==="v3"){aU.uniform3f(bM,bL.x,bL.y,bL.z)}else{if(bJ==="v4"){aU.uniform4f(bM,bL.x,bL.y,bL.z,bL.w)}else{if(bJ==="c"){aU.uniform3f(bM,bL.r,bL.g,bL.b)}else{if(bJ==="iv1"){aU.uniform1iv(bM,bL)}else{if(bJ==="iv"){aU.uniform3iv(bM,bL)}else{if(bJ==="fv1"){aU.uniform1fv(bM,bL)}else{if(bJ==="fv"){aU.uniform3fv(bM,bL)}else{if(bJ==="v2v"){if(bC._array===undefined){bC._array=new Float32Array(2*bL.length)}for(bG=0,bK=bL.length;bG<bK;bG++){bD=bG*2;bC._array[bD]=bL[bG].x;bC._array[bD+1]=bL[bG].y}aU.uniform2fv(bM,bC._array)}else{if(bJ==="v3v"){if(bC._array===undefined){bC._array=new Float32Array(3*bL.length)}for(bG=0,bK=bL.length;bG<bK;bG++){bD=bG*3;bC._array[bD]=bL[bG].x;bC._array[bD+1]=bL[bG].y;bC._array[bD+2]=bL[bG].z}aU.uniform3fv(bM,bC._array)}else{if(bJ==="v4v"){if(bC._array===undefined){bC._array=new Float32Array(4*bL.length)}for(bG=0,bK=bL.length;bG<bK;bG++){bD=bG*4;bC._array[bD]=bL[bG].x;bC._array[bD+1]=bL[bG].y;bC._array[bD+2]=bL[bG].z;bC._array[bD+3]=bL[bG].w}aU.uniform4fv(bM,bC._array)}else{if(bJ==="m4"){if(bC._array===undefined){bC._array=new Float32Array(16)}bL.flattenToArray(bC._array);aU.uniformMatrix4fv(bM,false,bC._array)}else{if(bJ==="m4v"){if(bC._array===undefined){bC._array=new Float32Array(16*bL.length)}for(bG=0,bK=bL.length;bG<bK;bG++){bL[bG].flattenToArrayOffset(bC._array,bG*16)}aU.uniformMatrix4fv(bM,false,bC._array)}else{if(bJ==="t"){bI=bL;bO=F();aU.uniform1i(bM,bO);if(!bI){continue}if(bI.image instanceof Array&&bI.image.length===6){o(bI,bO)}else{if(bI instanceof THREE.WebGLRenderTargetCube){bj(bI,bO)}else{G.setTexture(bI,bO)}}}else{if(bJ==="tv"){if(bC._array===undefined){bC._array=[]}for(bG=0,bK=bC.value.length;bG<bK;bG++){bC._array[bG]=F()}aU.uniform1iv(bM,bC._array);for(bG=0,bK=bC.value.length;bG<bK;bG++){bI=bC.value[bG];bO=bC._array[bG];if(!bI){continue}G.setTexture(bI,bO)}}}}}}}}}}}}}}}}}}}}function aZ(bC,bD){bC._modelViewMatrix.multiply(bD.matrixWorldInverse,bC.matrixWorld);bC._normalMatrix.getInverse(bC._modelViewMatrix);bC._normalMatrix.transpose()}function bo(bF,bE,bC,bD){bF[bE]=bC.r*bC.r*bD;bF[bE+1]=bC.g*bC.g*bD;bF[bE+2]=bC.b*bC.b*bD}function a4(bF,bE,bD,bC){bF[bE]=bD.r*bC;bF[bE+1]=bD.g*bC;bF[bE+2]=bD.b*bC}function bg(bC,bH){var cb,bY,bS,b7,b2=0,cc=0,cd=0,bW,bE,bJ,bX,bI,b1,bQ,bU=t,bO=bU.directional.colors,bF=bU.directional.positions,b8=bU.point.colors,b4=bU.point.positions,bV=bU.point.distances,b9=bU.spot.colors,bG=bU.spot.positions,b5=bU.spot.distances,bN=bU.spot.directions,bZ=bU.spot.angles,bP=bU.spot.exponents,bD=bU.hemi.skyColors,ca=bU.hemi.groundColors,bM=bU.hemi.positions,ce=0,bT=0,bR=0,bK=0,bL=0,b6=0,b3=0,b0=0;for(cb=0,bY=bH.length;cb<bY;cb++){bS=bH[cb];if(bS.onlyShadow||!bS.visible){continue}bW=bS.color;bX=bS.intensity;bQ=bS.distance;if(bS instanceof THREE.AmbientLight){if(G.gammaInput){b2+=bW.r*bW.r;cc+=bW.g*bW.g;cd+=bW.b*bW.b}else{b2+=bW.r;cc+=bW.g;cd+=bW.b}}else{if(bS instanceof THREE.DirectionalLight){bL=ce*3;if(G.gammaInput){bo(bO,bL,bW,bX*bX)}else{a4(bO,bL,bW,bX)}k.copy(bS.matrixWorld.getPosition());k.subSelf(bS.target.matrixWorld.getPosition());k.normalize();bF[bL]=k.x;bF[bL+1]=k.y;bF[bL+2]=k.z;ce+=1}else{if(bS instanceof THREE.PointLight){b6=bT*3;if(G.gammaInput){bo(b8,b6,bW,bX*bX)}else{a4(b8,b6,bW,bX)}b1=bS.matrixWorld.getPosition();b4[b6]=b1.x;b4[b6+1]=b1.y;b4[b6+2]=b1.z;bV[bT]=bQ;bT+=1}else{if(bS instanceof THREE.SpotLight){b3=bR*3;if(G.gammaInput){bo(b9,b3,bW,bX*bX)}else{a4(b9,b3,bW,bX)}b1=bS.matrixWorld.getPosition();bG[b3]=b1.x;bG[b3+1]=b1.y;bG[b3+2]=b1.z;b5[bR]=bQ;k.copy(b1);k.subSelf(bS.target.matrixWorld.getPosition());k.normalize();bN[b3]=k.x;bN[b3+1]=k.y;bN[b3+2]=k.z;bZ[bR]=Math.cos(bS.angle);bP[bR]=bS.exponent;bR+=1}else{if(bS instanceof THREE.HemisphereLight){bE=bS.color;bJ=bS.groundColor;b0=bK*3;if(G.gammaInput){bI=bX*bX;bo(bD,b0,bE,bI);bo(ca,b0,bJ,bI)}else{a4(bD,b0,bE,bX);a4(ca,b0,bJ,bX)}b1=bS.matrixWorld.getPosition();bM[b0]=b1.x;bM[b0+1]=b1.y;bM[b0+2]=b1.z;bK+=1}}}}}}for(cb=ce*3,bY=bO.length;cb<bY;cb++){bO[cb]=0}for(cb=bT*3,bY=b8.length;cb<bY;cb++){b8[cb]=0}for(cb=bR*3,bY=b9.length;cb<bY;cb++){b9[cb]=0}for(cb=bK*3,bY=bD.length;cb<bY;cb++){bD[cb]=0}for(cb=bK*3,bY=ca.length;cb<bY;cb++){ca[cb]=0}bU.directional.length=ce;bU.point.length=bT;bU.spot.length=bR;bU.hemi.length=bK;bU.ambient[0]=b2;bU.ambient[1]=cc;bU.ambient[2]=cd}this.setFaceCulling=function(bD,bC){if(bD){if(!bC||bC==="ccw"){aU.frontFace(aU.CCW)}else{aU.frontFace(aU.CW)}if(bD==="back"){aU.cullFace(aU.BACK)}else{if(bD==="front"){aU.cullFace(aU.FRONT)}else{aU.cullFace(aU.FRONT_AND_BACK)}}aU.enable(aU.CULL_FACE)}else{aU.disable(aU.CULL_FACE)}};this.setMaterialFaces=function(bE){var bC=bE.side===THREE.DoubleSide;var bD=bE.side===THREE.BackSide;if(y!==bC){if(bC){aU.disable(aU.CULL_FACE)}else{aU.enable(aU.CULL_FACE)}y=bC}if(aa!==bD){if(bD){aU.frontFace(aU.CW)}else{aU.frontFace(aU.CCW)}aa=bD}};this.setDepthTest=function(bC){if(aN!==bC){if(bC){aU.enable(aU.DEPTH_TEST)}else{aU.disable(aU.DEPTH_TEST)}aN=bC}};this.setDepthWrite=function(bC){if(ac!==bC){aU.depthMask(bC);ac=bC}};function X(bC){if(bC!==bp){aU.lineWidth(bC);bp=bC}}function a3(bE,bD,bC){if(bs!==bE){if(bE){aU.enable(aU.POLYGON_OFFSET_FILL)}else{aU.disable(aU.POLYGON_OFFSET_FILL)}bs=bE}if(bE&&(az!==bD||c!==bC)){aU.polygonOffset(bD,bC);az=bD;c=bC}}this.setBlending=function(bD,bC,bE,bF){if(bD!==bz){if(bD===THREE.NoBlending){aU.disable(aU.BLEND)}else{if(bD===THREE.AdditiveBlending){aU.enable(aU.BLEND);aU.blendEquation(aU.FUNC_ADD);aU.blendFunc(aU.SRC_ALPHA,aU.ONE)}else{if(bD===THREE.SubtractiveBlending){aU.enable(aU.BLEND);aU.blendEquation(aU.FUNC_ADD);aU.blendFunc(aU.ZERO,aU.ONE_MINUS_SRC_COLOR)}else{if(bD===THREE.MultiplyBlending){aU.enable(aU.BLEND);aU.blendEquation(aU.FUNC_ADD);aU.blendFunc(aU.ZERO,aU.SRC_COLOR)}else{if(bD===THREE.CustomBlending){aU.enable(aU.BLEND);aU.blendEquation(aU.FUNC_ADD);aU.blendFunc(aU.SRC_ALPHA,aU.ONE_MINUS_SRC_ALPHA)}else{aU.enable(aU.BLEND);aU.blendEquationSeparate(aU.FUNC_ADD,aU.FUNC_ADD);aU.blendFuncSeparate(aU.SRC_ALPHA,aU.ONE_MINUS_SRC_ALPHA,aU.ONE,aU.ONE_MINUS_SRC_ALPHA)}}}}}bz=bD}if(bD===THREE.CustomBlending){if(bC!==Y){aU.blendEquation(au(bC));Y=bC}if(bE!==l||bF!==M){aU.blendFunc(au(bE),au(bF));l=bE;M=bF}}else{Y=null;l=null;M=null}};function bf(bD){var bE,bC,bG=[];for(var bF in bD){bE=bD[bF];if(bE===false){continue}bC="#define "+bF+" "+bE;bG.push(bC)}return bG.join("\n")}function a2(bK,bC,bG,bX,bO,bU,bM){var bR,bV,bW,bN,bD;var bQ=[];if(bK){bQ.push(bK)}else{bQ.push(bC);bQ.push(bG)}for(bW in bU){bQ.push(bW);bQ.push(bU[bW])}for(bR in bM){bQ.push(bR);bQ.push(bM[bR])}bD=bQ.join();for(bR=0,bV=b.length;bR<bV;bR++){var bI=b[bR];if(bI.code===bD){bI.usedTimes++;return bI.program}}var bF=bf(bU);bN=aU.createProgram();var bE=["precision "+aR+" float;",bF,ay?"#define VERTEX_TEXTURES":"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"",G.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+bM.maxDirLights,"#define MAX_POINT_LIGHTS "+bM.maxPointLights,"#define MAX_SPOT_LIGHTS "+bM.maxSpotLights,"#define MAX_HEMI_LIGHTS "+bM.maxHemiLights,"#define MAX_SHADOWS "+bM.maxShadows,"#define MAX_BONES "+bM.maxBones,bM.map?"#define USE_MAP":"",bM.envMap?"#define USE_ENVMAP":"",bM.lightMap?"#define USE_LIGHTMAP":"",bM.bumpMap?"#define USE_BUMPMAP":"",bM.normalMap?"#define USE_NORMALMAP":"",bM.specularMap?"#define USE_SPECULARMAP":"",bM.vertexColors?"#define USE_COLOR":"",bM.skinning?"#define USE_SKINNING":"",bM.useVertexTexture?"#define BONE_TEXTURE":"",bM.boneTextureWidth?"#define N_BONE_PIXEL_X "+bM.boneTextureWidth.toFixed(1):"",bM.boneTextureHeight?"#define N_BONE_PIXEL_Y "+bM.boneTextureHeight.toFixed(1):"",bM.morphTargets?"#define USE_MORPHTARGETS":"",bM.morphNormals?"#define USE_MORPHNORMALS":"",bM.perPixel?"#define PHONG_PER_PIXEL":"",bM.wrapAround?"#define WRAP_AROUND":"",bM.doubleSided?"#define DOUBLE_SIDED":"",bM.flipSided?"#define FLIP_SIDED":"",bM.shadowMapEnabled?"#define USE_SHADOWMAP":"",bM.shadowMapSoft?"#define SHADOWMAP_SOFT":"",bM.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",bM.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",bM.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n");var bJ=["precision "+aR+" float;",(bM.bumpMap||bM.normalMap)?"#extension GL_OES_standard_derivatives : enable":"",bF,"#define MAX_DIR_LIGHTS "+bM.maxDirLights,"#define MAX_POINT_LIGHTS "+bM.maxPointLights,"#define MAX_SPOT_LIGHTS "+bM.maxSpotLights,"#define MAX_HEMI_LIGHTS "+bM.maxHemiLights,"#define MAX_SHADOWS "+bM.maxShadows,bM.alphaTest?"#define ALPHATEST "+bM.alphaTest:"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"",G.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",(bM.useFog&&bM.fog)?"#define USE_FOG":"",(bM.useFog&&bM.fog instanceof THREE.FogExp2)?"#define FOG_EXP2":"",bM.map?"#define USE_MAP":"",bM.envMap?"#define USE_ENVMAP":"",bM.lightMap?"#define USE_LIGHTMAP":"",bM.bumpMap?"#define USE_BUMPMAP":"",bM.normalMap?"#define USE_NORMALMAP":"",bM.specularMap?"#define USE_SPECULARMAP":"",bM.vertexColors?"#define USE_COLOR":"",bM.metal?"#define METAL":"",bM.perPixel?"#define PHONG_PER_PIXEL":"",bM.wrapAround?"#define WRAP_AROUND":"",bM.doubleSided?"#define DOUBLE_SIDED":"",bM.flipSided?"#define FLIP_SIDED":"",bM.shadowMapEnabled?"#define USE_SHADOWMAP":"",bM.shadowMapSoft?"#define SHADOWMAP_SOFT":"",bM.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",bM.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n");var bS=am("fragment",bJ+bC);var bH=am("vertex",bE+bG);aU.attachShader(bN,bH);aU.attachShader(bN,bS);aU.linkProgram(bN);if(!aU.getProgramParameter(bN,aU.LINK_STATUS)){console.error("Could not initialise shader\nVALIDATE_STATUS: "+aU.getProgramParameter(bN,aU.VALIDATE_STATUS)+", gl error ["+aU.getError()+"]")}aU.deleteShader(bS);aU.deleteShader(bH);bN.uniforms={};bN.attributes={};var bL,bP,bY,bT;bL=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];if(bM.useVertexTexture){bL.push("boneTexture")}else{bL.push("boneGlobalMatrices")}for(bP in bX){bL.push(bP)}D(bN,bL);bL=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight"];for(bT=0;bT<bM.maxMorphTargets;bT++){bL.push("morphTarget"+bT)}for(bT=0;bT<bM.maxMorphNormals;bT++){bL.push("morphNormal"+bT)}for(bY in bO){bL.push(bY)}bk(bN,bL);bN.id=bt++;b.push({program:bN,code:bD,usedTimes:1});G.info.memory.programs=b.length;return bN}function D(bE,bC){var bF,bD,bG;for(bF=0,bD=bC.length;bF<bD;bF++){bG=bC[bF];bE.uniforms[bG]=aU.getUniformLocation(bE,bG)}}function bk(bE,bC){var bF,bD,bG;for(bF=0,bD=bC.length;bF<bD;bF++){bG=bC[bF];bE.attributes[bG]=aU.getAttribLocation(bE,bG)}}function ab(bD){var bF=bD.split("\n");for(var bE=0,bC=bF.length;bE<bC;bE++){bF[bE]=(bE+1)+": "+bF[bE]}return bF.join("\n")}function am(bD,bC){var bE;if(bD==="fragment"){bE=aU.createShader(aU.FRAGMENT_SHADER)}else{if(bD==="vertex"){bE=aU.createShader(aU.VERTEX_SHADER)}}aU.shaderSource(bE,bC);aU.compileShader(bE);if(!aU.getShaderParameter(bE,aU.COMPILE_STATUS)){console.error(aU.getShaderInfoLog(bE));console.error(ab(bC));return null}return bE}function V(bC){return(bC&(bC-1))===0}function S(bC,bD,bE){if(bE){aU.texParameteri(bC,aU.TEXTURE_WRAP_S,au(bD.wrapS));aU.texParameteri(bC,aU.TEXTURE_WRAP_T,au(bD.wrapT));aU.texParameteri(bC,aU.TEXTURE_MAG_FILTER,au(bD.magFilter));aU.texParameteri(bC,aU.TEXTURE_MIN_FILTER,au(bD.minFilter))}else{aU.texParameteri(bC,aU.TEXTURE_WRAP_S,aU.CLAMP_TO_EDGE);aU.texParameteri(bC,aU.TEXTURE_WRAP_T,aU.CLAMP_TO_EDGE);aU.texParameteri(bC,aU.TEXTURE_MAG_FILTER,aw(bD.magFilter));aU.texParameteri(bC,aU.TEXTURE_MIN_FILTER,aw(bD.minFilter))}if(a5&&bD.type!==THREE.FloatType){if(bD.anisotropy>1||bD.__oldAnisotropy){aU.texParameterf(bC,a5.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(bD.anisotropy,ah));bD.__oldAnisotropy=bD.anisotropy}}}this.setTexture=function(bJ,bL){if(bJ.needsUpdate){if(!bJ.__webglInit){bJ.__webglInit=true;bJ.__webglTexture=aU.createTexture();G.info.memory.textures++}aU.activeTexture(aU.TEXTURE0+bL);aU.bindTexture(aU.TEXTURE_2D,bJ.__webglTexture);aU.pixelStorei(aU.UNPACK_FLIP_Y_WEBGL,bJ.flipY);aU.pixelStorei(aU.UNPACK_PREMULTIPLY_ALPHA_WEBGL,bJ.premultiplyAlpha);var bF=bJ.image,bI=V(bF.width)&&V(bF.height),bC=au(bJ.format),bE=au(bJ.type);S(aU.TEXTURE_2D,bJ,bI);if(bJ instanceof THREE.CompressedTexture){var bD,bG=bJ.mipmaps;for(var bH=0,bK=bG.length;bH<bK;bH++){bD=bG[bH];aU.compressedTexImage2D(aU.TEXTURE_2D,bH,bC,bD.width,bD.height,0,bD.data)}}else{if(bJ instanceof THREE.DataTexture){aU.texImage2D(aU.TEXTURE_2D,0,bC,bF.width,bF.height,0,bC,bE,bF.data)}else{aU.texImage2D(aU.TEXTURE_2D,0,bC,bC,bE,bJ.image)}}if(bJ.generateMipmaps&&bI){aU.generateMipmap(aU.TEXTURE_2D)}bJ.needsUpdate=false;if(bJ.onUpdate){bJ.onUpdate()}}else{aU.activeTexture(aU.TEXTURE0+bL);aU.bindTexture(aU.TEXTURE_2D,bJ.__webglTexture)}};function v(bH,bI){if(bH.width<=bI&&bH.height<=bI){return bH}var bG=Math.max(bH.width,bH.height);var bF=Math.floor(bH.width*bI/bG);var bD=Math.floor(bH.height*bI/bG);var bE=document.createElement("canvas");bE.width=bF;bE.height=bD;var bC=bE.getContext("2d");bC.drawImage(bH,0,0,bH.width,bH.height,0,0,bF,bD);return bE}function o(bN,bO){if(bN.image.length===6){if(bN.needsUpdate){if(!bN.image.__webglTextureCube){bN.image.__webglTextureCube=aU.createTexture()}aU.activeTexture(aU.TEXTURE0+bO);aU.bindTexture(aU.TEXTURE_CUBE_MAP,bN.image.__webglTextureCube);aU.pixelStorei(aU.UNPACK_FLIP_Y_WEBGL,bN.flipY);var bF=bN instanceof THREE.CompressedTexture;var bC=[];for(var bL=0;bL<6;bL++){if(G.autoScaleCubemaps&&!bF){bC[bL]=v(bN.image[bL],aq)}else{bC[bL]=bN.image[bL]}}var bI=bC[0],bM=V(bI.width)&&V(bI.height),bD=au(bN.format),bG=au(bN.type);S(aU.TEXTURE_CUBE_MAP,bN,bM);for(var bL=0;bL<6;bL++){if(bF){var bE,bH=bC[bL].mipmaps;for(var bJ=0,bK=bH.length;bJ<bK;bJ++){bE=bH[bJ];aU.compressedTexImage2D(aU.TEXTURE_CUBE_MAP_POSITIVE_X+bL,bJ,bD,bE.width,bE.height,0,bE.data)}}else{aU.texImage2D(aU.TEXTURE_CUBE_MAP_POSITIVE_X+bL,0,bD,bD,bG,bC[bL])}}if(bN.generateMipmaps&&bM){aU.generateMipmap(aU.TEXTURE_CUBE_MAP)}bN.needsUpdate=false;if(bN.onUpdate){bN.onUpdate()}}else{aU.activeTexture(aU.TEXTURE0+bO);aU.bindTexture(aU.TEXTURE_CUBE_MAP,bN.image.__webglTextureCube)}}}function bj(bC,bD){aU.activeTexture(aU.TEXTURE0+bD);aU.bindTexture(aU.TEXTURE_CUBE_MAP,bC.__webglTexture)}function n(bE,bD,bC){aU.bindFramebuffer(aU.FRAMEBUFFER,bE);aU.framebufferTexture2D(aU.FRAMEBUFFER,aU.COLOR_ATTACHMENT0,bC,bD.__webglTexture,0)}function q(bC,bD){aU.bindRenderbuffer(aU.RENDERBUFFER,bC);if(bD.depthBuffer&&!bD.stencilBuffer){aU.renderbufferStorage(aU.RENDERBUFFER,aU.DEPTH_COMPONENT16,bD.width,bD.height);aU.framebufferRenderbuffer(aU.FRAMEBUFFER,aU.DEPTH_ATTACHMENT,aU.RENDERBUFFER,bC)}else{if(bD.depthBuffer&&bD.stencilBuffer){aU.renderbufferStorage(aU.RENDERBUFFER,aU.DEPTH_STENCIL,bD.width,bD.height);aU.framebufferRenderbuffer(aU.FRAMEBUFFER,aU.DEPTH_STENCIL_ATTACHMENT,aU.RENDERBUFFER,bC)}else{aU.renderbufferStorage(aU.RENDERBUFFER,aU.RGBA4,bD.width,bD.height)}}}this.setRenderTarget=function(bG){var bI=(bG instanceof THREE.WebGLRenderTargetCube);if(bG&&!bG.__webglFramebuffer){if(bG.depthBuffer===undefined){bG.depthBuffer=true}if(bG.stencilBuffer===undefined){bG.stencilBuffer=true}bG.__webglTexture=aU.createTexture();var bJ=V(bG.width)&&V(bG.height),bC=au(bG.format),bE=au(bG.type);if(bI){bG.__webglFramebuffer=[];bG.__webglRenderbuffer=[];aU.bindTexture(aU.TEXTURE_CUBE_MAP,bG.__webglTexture);S(aU.TEXTURE_CUBE_MAP,bG,bJ);for(var bF=0;bF<6;bF++){bG.__webglFramebuffer[bF]=aU.createFramebuffer();bG.__webglRenderbuffer[bF]=aU.createRenderbuffer();aU.texImage2D(aU.TEXTURE_CUBE_MAP_POSITIVE_X+bF,0,bC,bG.width,bG.height,0,bC,bE,null);n(bG.__webglFramebuffer[bF],bG,aU.TEXTURE_CUBE_MAP_POSITIVE_X+bF);q(bG.__webglRenderbuffer[bF],bG)}if(bJ){aU.generateMipmap(aU.TEXTURE_CUBE_MAP)}}else{bG.__webglFramebuffer=aU.createFramebuffer();bG.__webglRenderbuffer=aU.createRenderbuffer();aU.bindTexture(aU.TEXTURE_2D,bG.__webglTexture);S(aU.TEXTURE_2D,bG,bJ);aU.texImage2D(aU.TEXTURE_2D,0,bC,bG.width,bG.height,0,bC,bE,null);n(bG.__webglFramebuffer,bG,aU.TEXTURE_2D);q(bG.__webglRenderbuffer,bG);if(bJ){aU.generateMipmap(aU.TEXTURE_2D)}}if(bI){aU.bindTexture(aU.TEXTURE_CUBE_MAP,null)}else{aU.bindTexture(aU.TEXTURE_2D,null)}aU.bindRenderbuffer(aU.RENDERBUFFER,null);aU.bindFramebuffer(aU.FRAMEBUFFER,null)}var bL,bD,bM,bK,bH;if(bG){if(bI){bL=bG.__webglFramebuffer[bG.activeCubeFace]}else{bL=bG.__webglFramebuffer}bD=bG.width;bM=bG.height;bK=0;bH=0}else{bL=null;bD=be;bM=K;bK=e;bH=d}if(bL!==bh){aU.bindFramebuffer(aU.FRAMEBUFFER,bL);aU.viewport(bK,bH,bD,bM);bh=bL}T=bD;aE=bM};function g(bC){if(bC instanceof THREE.WebGLRenderTargetCube){aU.bindTexture(aU.TEXTURE_CUBE_MAP,bC.__webglTexture);aU.generateMipmap(aU.TEXTURE_CUBE_MAP);aU.bindTexture(aU.TEXTURE_CUBE_MAP,null)}else{aU.bindTexture(aU.TEXTURE_2D,bC.__webglTexture);aU.generateMipmap(aU.TEXTURE_2D);aU.bindTexture(aU.TEXTURE_2D,null)}}function aw(bC){if(bC===THREE.NearestFilter||bC===THREE.NearestMipMapNearestFilter||bC===THREE.NearestMipMapLinearFilter){return aU.NEAREST}return aU.LINEAR}function au(bC){if(bC===THREE.RepeatWrapping){return aU.REPEAT}if(bC===THREE.ClampToEdgeWrapping){return aU.CLAMP_TO_EDGE}if(bC===THREE.MirroredRepeatWrapping){return aU.MIRRORED_REPEAT}if(bC===THREE.NearestFilter){return aU.NEAREST}if(bC===THREE.NearestMipMapNearestFilter){return aU.NEAREST_MIPMAP_NEAREST}if(bC===THREE.NearestMipMapLinearFilter){return aU.NEAREST_MIPMAP_LINEAR}if(bC===THREE.LinearFilter){return aU.LINEAR}if(bC===THREE.LinearMipMapNearestFilter){return aU.LINEAR_MIPMAP_NEAREST}if(bC===THREE.LinearMipMapLinearFilter){return aU.LINEAR_MIPMAP_LINEAR}if(bC===THREE.UnsignedByteType){return aU.UNSIGNED_BYTE}if(bC===THREE.UnsignedShort4444Type){return aU.UNSIGNED_SHORT_4_4_4_4}if(bC===THREE.UnsignedShort5551Type){return aU.UNSIGNED_SHORT_5_5_5_1}if(bC===THREE.UnsignedShort565Type){return aU.UNSIGNED_SHORT_5_6_5}if(bC===THREE.ByteType){return aU.BYTE}if(bC===THREE.ShortType){return aU.SHORT}if(bC===THREE.UnsignedShortType){return aU.UNSIGNED_SHORT}if(bC===THREE.IntType){return aU.INT}if(bC===THREE.UnsignedIntType){return aU.UNSIGNED_INT}if(bC===THREE.FloatType){return aU.FLOAT}if(bC===THREE.AlphaFormat){return aU.ALPHA}if(bC===THREE.RGBFormat){return aU.RGB}if(bC===THREE.RGBAFormat){return aU.RGBA}if(bC===THREE.LuminanceFormat){return aU.LUMINANCE}if(bC===THREE.LuminanceAlphaFormat){return aU.LUMINANCE_ALPHA}if(bC===THREE.AddEquation){return aU.FUNC_ADD}if(bC===THREE.SubtractEquation){return aU.FUNC_SUBTRACT}if(bC===THREE.ReverseSubtractEquation){return aU.FUNC_REVERSE_SUBTRACT}if(bC===THREE.ZeroFactor){return aU.ZERO}if(bC===THREE.OneFactor){return aU.ONE}if(bC===THREE.SrcColorFactor){return aU.SRC_COLOR}if(bC===THREE.OneMinusSrcColorFactor){return aU.ONE_MINUS_SRC_COLOR}if(bC===THREE.SrcAlphaFactor){return aU.SRC_ALPHA}if(bC===THREE.OneMinusSrcAlphaFactor){return aU.ONE_MINUS_SRC_ALPHA}if(bC===THREE.DstAlphaFactor){return aU.DST_ALPHA}if(bC===THREE.OneMinusDstAlphaFactor){return aU.ONE_MINUS_DST_ALPHA}if(bC===THREE.DstColorFactor){return aU.DST_COLOR}if(bC===THREE.OneMinusDstColorFactor){return aU.ONE_MINUS_DST_COLOR}if(bC===THREE.SrcAlphaSaturateFactor){return aU.SRC_ALPHA_SATURATE}if(aV!==undefined){if(bC===THREE.RGB_S3TC_DXT1_Format){return aV.COMPRESSED_RGB_S3TC_DXT1_EXT}if(bC===THREE.RGBA_S3TC_DXT1_Format){return aV.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(bC===THREE.RGBA_S3TC_DXT3_Format){return aV.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(bC===THREE.RGBA_S3TC_DXT5_Format){return aV.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}function f(bF){if(aY&&bF&&bF.useVertexTexture){return 1024}else{var bD=aU.getParameter(aU.MAX_VERTEX_UNIFORM_VECTORS);var bE=Math.floor((bD-20)/4);var bC=bE;if(bF!==undefined&&bF instanceof THREE.SkinnedMesh){bC=Math.min(bF.bones.length,bC);if(bC<bF.bones.length){console.warn("WebGLRenderer: too many bones - "+bF.bones.length+", this GPU supports just "+bC+" (try OpenGL instead of ANGLE)")}}return bC}}function u(bG){var bD,bL,bH,bN,bI,bC,bF,bE,bJ,bK,bM;bN=bI=bC=bF=bE=bJ=bK=bM=0;for(bD=0,bL=bG.length;bD<bL;bD++){bH=bG[bD];if(bH.onlyShadow){continue}if(bH instanceof THREE.DirectionalLight){bN++}if(bH instanceof THREE.PointLight){bI++}if(bH instanceof THREE.SpotLight){bC++}if(bH instanceof THREE.HemisphereLight){bF++}}if((bI+bC+bN+bF)<=P){bE=bN;bJ=bI;bK=bC;bM=bF}else{bE=Math.ceil(P*bN/(bI+bN));bJ=P-bE;bK=bJ;bM=bE}return{directional:bE,point:bJ,spot:bK,hemi:bM}}function bn(bE){var bD,bG,bC,bF=0;for(bD=0,bG=bE.length;bD<bG;bD++){bC=bE[bD];if(!bC.castShadow){continue}if(bC instanceof THREE.SpotLight){bF++}if(bC instanceof THREE.DirectionalLight&&!bC.shadowCascade){bF++}}return bF}function ba(){try{if(!(aU=i.getContext("experimental-webgl",{alpha:ak,premultipliedAlpha:br,antialias:aA,stencil:bB,preserveDrawingBuffer:aG}))){throw"Error creating WebGL context."}}catch(bC){console.error(bC)}bA=aU.getExtension("OES_texture_float");h=aU.getExtension("OES_standard_derivatives");a5=aU.getExtension("EXT_texture_filter_anisotropic")||aU.getExtension("MOZ_EXT_texture_filter_anisotropic")||aU.getExtension("WEBKIT_EXT_texture_filter_anisotropic");aV=aU.getExtension("WEBGL_compressed_texture_s3tc")||aU.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||aU.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");if(!bA){console.log("THREE.WebGLRenderer: Float textures not supported.")}if(!h){console.log("THREE.WebGLRenderer: Standard derivatives not supported.")}if(!a5){console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.")}if(!aV){console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}}function a0(){aU.clearColor(0,0,0,1);aU.clearDepth(1);aU.clearStencil(0);aU.enable(aU.DEPTH_TEST);aU.depthFunc(aU.LEQUAL);aU.frontFace(aU.CCW);aU.cullFace(aU.BACK);aU.enable(aU.CULL_FACE);aU.enable(aU.BLEND);aU.blendEquation(aU.FUNC_ADD);aU.blendFunc(aU.SRC_ALPHA,aU.ONE_MINUS_SRC_ALPHA);aU.clearColor(Q.r,Q.g,Q.b,aS)}this.shadowMapPlugin=new THREE.ShadowMapPlugin();this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin());this.addPostPlugin(new THREE.LensFlarePlugin())};THREE.WebGLRenderTarget=function(c,a,b){this.width=c;this.height=a;b=b||{};this.wrapS=b.wrapS!==undefined?b.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=b.wrapT!==undefined?b.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=b.magFilter!==undefined?b.magFilter:THREE.LinearFilter;this.minFilter=b.minFilter!==undefined?b.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=b.anisotropy!==undefined?b.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=b.format!==undefined?b.format:THREE.RGBAFormat;this.type=b.type!==undefined?b.type:THREE.UnsignedByteType;this.depthBuffer=b.depthBuffer!==undefined?b.depthBuffer:true;this.stencilBuffer=b.stencilBuffer!==undefined?b.stencilBuffer:true;this.generateMipmaps=true};THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};THREE.WebGLRenderTargetCube=function(c,a,b){THREE.WebGLRenderTarget.call(this,c,a,b);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3();this.positionScreen=new THREE.Vector4();this.visible=true};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.v3=new THREE.RenderableVertex();this.centroidWorld=new THREE.Vector3();this.centroidScreen=new THREE.Vector3();this.normalWorld=new THREE.Vector3();this.vertexNormalsWorld=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.vertexNormalsLength=0;this.color=null;this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.v3=new THREE.RenderableVertex();this.v4=new THREE.RenderableVertex();this.centroidWorld=new THREE.Vector3();this.centroidScreen=new THREE.Vector3();this.normalWorld=new THREE.Vector3();this.vertexNormalsWorld=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.vertexNormalsLength=0;this.color=null;this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.object=null;this.z=null};THREE.RenderableParticle=function(){this.object=null;this.x=null;this.y=null;this.z=null;this.rotation=null;this.scale=new THREE.Vector2();this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.material=null};THREE.ColorUtils={adjustHSV:function(b,e,d,a){var c=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(b,c);c.h=THREE.Math.clamp(c.h+e,0,1);c.s=THREE.Math.clamp(c.s+d,0,1);c.v=THREE.Math.clamp(c.v+a,0,1);b.setHSV(c.h,c.s,c.v)},rgbToHsv:function(c,f){var a=c.r;var h=c.g;var j=c.b;var k=Math.max(Math.max(a,h),j);var d=Math.min(Math.min(a,h),j);var i;var e;var l=k;if(d===k){i=0;e=0}else{var m=(k-d);e=m/k;if(a===k){i=(h-j)/m}else{if(h===k){i=2+((j-a)/m)}else{i=4+((a-h)/m)}}i/=6;if(i<0){i+=1}if(i>1){i-=1}}if(f===undefined){f={h:0,s:0,v:0}}f.h=i;f.s=e;f.v=l;return f}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};THREE.GeometryUtils={merge:function(p,l){var y,H,o=p.vertices.length,u=p.faceVertexUvs[0].length,n=l instanceof THREE.Mesh?l.geometry:l,d=p.vertices,c=n.vertices,b=p.faces,a=n.faces,E=p.faceVertexUvs[0],C=n.faceVertexUvs[0];var F={};for(var z=0;z<p.materials.length;z++){var v=p.materials[z].id;F[v]=z}if(l instanceof THREE.Mesh){l.matrixAutoUpdate&&l.updateMatrix();y=l.matrix;H=new THREE.Matrix4();H.extractRotation(y,l.scale)}for(var z=0,m=c.length;z<m;z++){var D=c[z];var t=D.clone();if(y){y.multiplyVector3(t)}d.push(t)}for(z=0,m=a.length;z<m;z++){var k=a[z],r,G,w,q=k.vertexNormals,B=k.vertexColors;if(k instanceof THREE.Face3){r=new THREE.Face3(k.a+o,k.b+o,k.c+o)}else{if(k instanceof THREE.Face4){r=new THREE.Face4(k.a+o,k.b+o,k.c+o,k.d+o)}}r.normal.copy(k.normal);if(H){H.multiplyVector3(r.normal)}for(var x=0,A=q.length;x<A;x++){G=q[x].clone();if(H){H.multiplyVector3(G)}r.vertexNormals.push(G)}r.color.copy(k.color);for(var x=0,A=B.length;x<A;x++){w=B[x];r.vertexColors.push(w.clone())}if(k.materialIndex!==undefined){var s=n.materials[k.materialIndex];var f=s.id;var h=F[f];if(h===undefined){h=p.materials.length;F[f]=h;p.materials.push(s)}r.materialIndex=h}r.centroid.copy(k.centroid);if(y){y.multiplyVector3(r.centroid)}b.push(r)}for(z=0,m=C.length;z<m;z++){var g=C[z],e=[];for(var x=0,A=g.length;x<A;x++){e.push(new THREE.UV(g[x].u,g[x].v))}E.push(e)}},clone:function(n){var h=new THREE.Geometry();var g,o;var l=n.vertices,c=n.faces,e=n.faceVertexUvs[0];if(n.materials){h.materials=n.materials.slice()}for(g=0,o=l.length;g<o;g++){var k=l[g];h.vertices.push(k.clone())}for(g=0,o=c.length;g<o;g++){var m=c[g];h.faces.push(m.clone())}for(g=0,o=e.length;g<o;g++){var b=e[g],a=[];for(var d=0,f=b.length;d<f;d++){a.push(new THREE.UV(b[d].u,b[d].v))}h.faceVertexUvs[0].push(a)}return h},randomPointInTriangle:function(h,f,k){var g,e,j,d=new THREE.Vector3(),i=THREE.GeometryUtils.__v1;g=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();if((g+e)>1){g=1-g;e=1-e}j=1-g-e;d.copy(h);d.multiplyScalar(g);i.copy(f);i.multiplyScalar(e);d.addSelf(i);i.copy(k);i.multiplyScalar(j);d.addSelf(i);return d},randomPointInFace:function(f,g,e){var d,c,b,j;if(f instanceof THREE.Face3){d=g.vertices[f.a];c=g.vertices[f.b];b=g.vertices[f.c];return THREE.GeometryUtils.randomPointInTriangle(d,c,b)}else{if(f instanceof THREE.Face4){d=g.vertices[f.a];c=g.vertices[f.b];b=g.vertices[f.c];j=g.vertices[f.d];var i,h;if(e){if(f._area1&&f._area2){i=f._area1;h=f._area2}else{i=THREE.GeometryUtils.triangleArea(d,c,j);h=THREE.GeometryUtils.triangleArea(c,b,j);f._area1=i;f._area2=h}}else{i=THREE.GeometryUtils.triangleArea(d,c,j),h=THREE.GeometryUtils.triangleArea(c,b,j)}var a=THREE.GeometryUtils.random()*(i+h);if(a<i){return THREE.GeometryUtils.randomPointInTriangle(d,c,j)}else{return THREE.GeometryUtils.randomPointInTriangle(c,b,j)}}}},randomPointsInGeometry:function(b,k){var e,o,a=b.faces,c=b.vertices,f=a.length,q=0,t=[],s,p,m,l;for(o=0;o<f;o++){e=a[o];if(e instanceof THREE.Face3){s=c[e.a];p=c[e.b];m=c[e.c];e._area=THREE.GeometryUtils.triangleArea(s,p,m)}else{if(e instanceof THREE.Face4){s=c[e.a];p=c[e.b];m=c[e.c];l=c[e.d];e._area1=THREE.GeometryUtils.triangleArea(s,p,l);e._area2=THREE.GeometryUtils.triangleArea(p,m,l);e._area=e._area1+e._area2}}q+=e._area;t[o]=q}function h(n){function r(x,v){if(v<x){return x}var w=x+Math.floor((v-x)/2);if(t[w]>n){return r(x,w-1)}else{if(t[w]<n){return r(w+1,v)}else{return w}}}var i=r(0,t.length-1);return i}var j,d,g=[];var u={};for(o=0;o<k;o++){j=THREE.GeometryUtils.random()*q;d=h(j);g[o]=THREE.GeometryUtils.randomPointInFace(a[d],b,true);if(!u[d]){u[d]=1}else{u[d]+=1}}return g},triangleArea:function(g,e,k){var i,f,d,j,h=THREE.GeometryUtils.__v1;h.sub(g,e);f=h.length();h.sub(g,k);d=h.length();h.sub(e,k);j=h.length();i=0.5*(f+d+j);return Math.sqrt(i*(i-f)*(i-d)*(i-j))},center:function(c){c.computeBoundingBox();var b=c.boundingBox;var a=new THREE.Vector3();a.add(b.min,b.max);a.multiplyScalar(-0.5);c.applyMatrix(new THREE.Matrix4().makeTranslation(a.x,a.y,a.z));c.computeBoundingBox();return a},normalizeUVs:function(g){var b=g.faceVertexUvs[0];for(var f=0,a=b.length;f<a;f++){var e=b[f];for(var c=0,d=e.length;c<d;c++){if(e[c].u!==1){e[c].u=e[c].u-Math.floor(e[c].u)}if(e[c].v!==1){e[c].v=e[c].v-Math.floor(e[c].v)}}}},triangulateQuads:function(g){var u,m,t,v;var e=[];var f=[];var w=[];for(u=0,m=g.faceUvs.length;u<m;u++){f[u]=[]}for(u=0,m=g.faceVertexUvs.length;u<m;u++){w[u]=[]}for(u=0,m=g.faces.length;u<m;u++){var k=g.faces[u];if(k instanceof THREE.Face4){var C=k.a;var B=k.b;var A=k.c;var z=k.d;var s=new THREE.Face3();var r=new THREE.Face3();s.color.copy(k.color);r.color.copy(k.color);s.materialIndex=k.materialIndex;r.materialIndex=k.materialIndex;s.a=C;s.b=B;s.c=z;r.a=B;r.b=A;r.c=z;if(k.vertexColors.length===4){s.vertexColors[0]=k.vertexColors[0].clone();s.vertexColors[1]=k.vertexColors[1].clone();s.vertexColors[2]=k.vertexColors[3].clone();r.vertexColors[0]=k.vertexColors[1].clone();r.vertexColors[1]=k.vertexColors[2].clone();r.vertexColors[2]=k.vertexColors[3].clone()}e.push(s,r);for(t=0,v=g.faceVertexUvs.length;t<v;t++){if(g.faceVertexUvs[t].length){var n=g.faceVertexUvs[t][u];var q=n[0];var p=n[1];var o=n[2];var l=n[3];var y=[q.clone(),p.clone(),l.clone()];var x=[p.clone(),o.clone(),l.clone()];w[t].push(y,x)}}for(t=0,v=g.faceUvs.length;t<v;t++){if(g.faceUvs[t].length){var h=g.faceUvs[t][u];f[t].push(h,h)}}}else{e.push(k);for(t=0,v=g.faceUvs.length;t<v;t++){f[t].push(g.faceUvs[t][u])}for(t=0,v=g.faceVertexUvs.length;t<v;t++){w[t].push(g.faceVertexUvs[t][u])}}}g.faces=e;g.faceUvs=f;g.faceVertexUvs=w;g.computeCentroids();g.computeFaceNormals();g.computeVertexNormals();if(g.hasTangents){g.computeTangents()}},explode:function(q){var h=[];for(var f=0,s=q.faces.length;f<s;f++){var e=h.length;var l=q.faces[f];if(l instanceof THREE.Face4){var t=l.a;var r=l.b;var o=l.c;var k=l.d;var p=q.vertices[t];var m=q.vertices[r];var j=q.vertices[o];var g=q.vertices[k];h.push(p.clone());h.push(m.clone());h.push(j.clone());h.push(g.clone());l.a=e;l.b=e+1;l.c=e+2;l.d=e+3}else{var t=l.a;var r=l.b;var o=l.c;var p=q.vertices[t];var m=q.vertices[r];var j=q.vertices[o];h.push(p.clone());h.push(m.clone());h.push(j.clone());l.a=e;l.b=e+1;l.c=e+2}}q.vertices=h;delete q.__tmpVertices},tessellate:function(z,n){var Y,K,x,af,ae,ad,ac,H,F,D,C,T,B,Q,g,O,U,ab,aa,A,t,r,y,M,L,W,Z,X,G,E,J,I,o;var w=[];var S=[];for(Y=0,K=z.faceVertexUvs.length;Y<K;Y++){S[Y]=[]}for(Y=0,K=z.faces.length;Y<K;Y++){x=z.faces[Y];if(x instanceof THREE.Face3){af=x.a;ae=x.b;ad=x.c;H=z.vertices[af];F=z.vertices[ae];D=z.vertices[ad];T=H.distanceTo(F);B=F.distanceTo(D);Q=H.distanceTo(D);if(T>n||B>n||Q>n){U=z.vertices.length;G=x.clone();E=x.clone();if(T>=B&&T>=Q){A=H.clone();A.lerpSelf(F,0.5);G.a=af;G.b=U;G.c=ad;E.a=U;E.b=ae;E.c=ad;if(x.vertexNormals.length===3){y=x.vertexNormals[0].clone();y.lerpSelf(x.vertexNormals[1],0.5);G.vertexNormals[1].copy(y);E.vertexNormals[0].copy(y)}if(x.vertexColors.length===3){W=x.vertexColors[0].clone();W.lerpSelf(x.vertexColors[1],0.5);G.vertexColors[1].copy(W);E.vertexColors[0].copy(W)}o=0}else{if(B>=T&&B>=Q){A=F.clone();A.lerpSelf(D,0.5);G.a=af;G.b=ae;G.c=U;E.a=U;E.b=ad;E.c=af;if(x.vertexNormals.length===3){y=x.vertexNormals[1].clone();y.lerpSelf(x.vertexNormals[2],0.5);G.vertexNormals[2].copy(y);E.vertexNormals[0].copy(y);E.vertexNormals[1].copy(x.vertexNormals[2]);E.vertexNormals[2].copy(x.vertexNormals[0])}if(x.vertexColors.length===3){W=x.vertexColors[1].clone();W.lerpSelf(x.vertexColors[2],0.5);G.vertexColors[2].copy(W);E.vertexColors[0].copy(W);E.vertexColors[1].copy(x.vertexColors[2]);E.vertexColors[2].copy(x.vertexColors[0])}o=1}else{A=H.clone();A.lerpSelf(D,0.5);G.a=af;G.b=ae;G.c=U;E.a=U;E.b=ae;E.c=ad;if(x.vertexNormals.length===3){y=x.vertexNormals[0].clone();y.lerpSelf(x.vertexNormals[2],0.5);G.vertexNormals[2].copy(y);E.vertexNormals[0].copy(y)}if(x.vertexColors.length===3){W=x.vertexColors[0].clone();W.lerpSelf(x.vertexColors[2],0.5);G.vertexColors[2].copy(W);E.vertexColors[0].copy(W)}o=2}}w.push(G,E);z.vertices.push(A);var V,v,R,u,s,q,l,f,e;for(V=0,v=z.faceVertexUvs.length;V<v;V++){if(z.faceVertexUvs[V].length){R=z.faceVertexUvs[V][Y];u=R[0];s=R[1];q=R[2];if(o===0){l=u.clone();l.lerpSelf(s,0.5);f=[u.clone(),l.clone(),q.clone()];e=[l.clone(),s.clone(),q.clone()]}else{if(o===1){l=s.clone();l.lerpSelf(q,0.5);f=[u.clone(),s.clone(),l.clone()];e=[l.clone(),q.clone(),u.clone()]}else{l=u.clone();l.lerpSelf(q,0.5);f=[u.clone(),s.clone(),l.clone()];e=[l.clone(),s.clone(),q.clone()]}}S[V].push(f,e)}}}else{w.push(x);for(V=0,v=z.faceVertexUvs.length;V<v;V++){S[V].push(z.faceVertexUvs[V][Y])}}}else{af=x.a;ae=x.b;ad=x.c;ac=x.d;H=z.vertices[af];F=z.vertices[ae];D=z.vertices[ad];C=z.vertices[ac];T=H.distanceTo(F);B=F.distanceTo(D);g=D.distanceTo(C);O=H.distanceTo(C);if(T>n||B>n||g>n||O>n){ab=z.vertices.length;aa=z.vertices.length+1;J=x.clone();I=x.clone();if((T>=B&&T>=g&&T>=O)||(g>=B&&g>=T&&g>=O)){t=H.clone();t.lerpSelf(F,0.5);r=D.clone();r.lerpSelf(C,0.5);J.a=af;J.b=ab;J.c=aa;J.d=ac;I.a=ab;I.b=ae;I.c=ad;I.d=aa;if(x.vertexNormals.length===4){M=x.vertexNormals[0].clone();M.lerpSelf(x.vertexNormals[1],0.5);L=x.vertexNormals[2].clone();L.lerpSelf(x.vertexNormals[3],0.5);J.vertexNormals[1].copy(M);J.vertexNormals[2].copy(L);I.vertexNormals[0].copy(M);I.vertexNormals[3].copy(L)}if(x.vertexColors.length===4){Z=x.vertexColors[0].clone();Z.lerpSelf(x.vertexColors[1],0.5);X=x.vertexColors[2].clone();X.lerpSelf(x.vertexColors[3],0.5);J.vertexColors[1].copy(Z);J.vertexColors[2].copy(X);I.vertexColors[0].copy(Z);I.vertexColors[3].copy(X)}o=0}else{t=F.clone();t.lerpSelf(D,0.5);r=C.clone();r.lerpSelf(H,0.5);J.a=af;J.b=ae;J.c=ab;J.d=aa;I.a=aa;I.b=ab;I.c=ad;I.d=ac;if(x.vertexNormals.length===4){M=x.vertexNormals[1].clone();M.lerpSelf(x.vertexNormals[2],0.5);L=x.vertexNormals[3].clone();L.lerpSelf(x.vertexNormals[0],0.5);J.vertexNormals[2].copy(M);J.vertexNormals[3].copy(L);I.vertexNormals[0].copy(L);I.vertexNormals[1].copy(M)}if(x.vertexColors.length===4){Z=x.vertexColors[1].clone();Z.lerpSelf(x.vertexColors[2],0.5);X=x.vertexColors[3].clone();X.lerpSelf(x.vertexColors[0],0.5);J.vertexColors[2].copy(Z);J.vertexColors[3].copy(X);I.vertexColors[0].copy(X);I.vertexColors[1].copy(Z)}o=1}w.push(J,I);z.vertices.push(t,r);var V,v,R,u,s,q,p,P,N,k,h;for(V=0,v=z.faceVertexUvs.length;V<v;V++){if(z.faceVertexUvs[V].length){R=z.faceVertexUvs[V][Y];u=R[0];s=R[1];q=R[2];p=R[3];if(o===0){P=u.clone();P.lerpSelf(s,0.5);N=q.clone();N.lerpSelf(p,0.5);k=[u.clone(),P.clone(),N.clone(),p.clone()];h=[P.clone(),s.clone(),q.clone(),N.clone()]}else{P=s.clone();P.lerpSelf(q,0.5);N=p.clone();N.lerpSelf(u,0.5);k=[u.clone(),s.clone(),P.clone(),N.clone()];h=[N.clone(),P.clone(),q.clone(),p.clone()]}S[V].push(k,h)}}}else{w.push(x);for(V=0,v=z.faceVertexUvs.length;V<v;V++){S[V].push(z.faceVertexUvs[V][Y])}}}}z.faces=w;z.faceVertexUvs=S}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3();THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(c,b,d,f){var g=new Image();var e=new THREE.Texture(g,b);var a=new THREE.ImageLoader();a.addEventListener("load",function(h){e.image=h.content;e.needsUpdate=true;if(d){d(e)}});a.addEventListener("error",function(h){if(f){f(h.message)}});a.crossOrigin=this.crossOrigin;a.load(c,g);return e},loadCompressedTexture:function(b,a,c,f){var e=new THREE.CompressedTexture();e.mapping=a;var d=new XMLHttpRequest();d.onload=function(){var g=d.response;var h=THREE.ImageUtils.parseDDS(g,true);e.format=h.format;e.mipmaps=h.mipmaps;e.image.width=h.width;e.image.height=h.height;e.generateMipmaps=false;e.needsUpdate=true;if(c){c(e)}};d.onerror=f;d.open("GET",b,true);d.responseType="arraybuffer";d.send(null);return e},loadTextureCube:function(e,b,g,d){var h=[];h.loadCount=0;var f=new THREE.Texture();f.image=h;if(b!==undefined){f.mapping=b}f.flipY=false;for(var c=0,j=e.length;c<j;++c){var a=new Image();h[c]=a;a.onload=function(){h.loadCount+=1;if(h.loadCount===6){f.needsUpdate=true;if(g){g()}}};a.onerror=d;a.crossOrigin=this.crossOrigin;a.src=e[c]}return f},loadCompressedTextureCube:function(h,b,k,g){var l=[];l.loadCount=0;var j=new THREE.CompressedTexture();j.image=l;if(b!==undefined){j.mapping=b}j.flipY=false;j.generateMipmaps=false;var d=function(n,i){return function(){var o=n.response;var p=THREE.ImageUtils.parseDDS(o,true);i.format=p.format;i.mipmaps=p.mipmaps;i.width=p.width;i.height=p.height;l.loadCount+=1;if(l.loadCount===6){j.format=p.format;j.needsUpdate=true;if(k){k()}}}};for(var f=0,m=h.length;f<m;++f){var a={};l[f]=a;var e=new XMLHttpRequest();e.onload=d(e,a);e.onerror=g;var c=h[f];e.open("GET",c,true);e.responseType="arraybuffer";e.send(null)}return j},parseDDS:function(y,W){var H={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};var x=542327876;var L=1,w=2,Y=4,z=8,N=4096,J=131072,s=524288,f=8388608;var Q=8,m=4194304,l=4096;var P=512,I=1024,U=2048,G=4096,T=8192,F=16384,R=32768,o=2097152;var v=1,A=2,ab=4,p=64,O=512,t=131072;function aa(i){return i.charCodeAt(0)+(i.charCodeAt(1)<<8)+(i.charCodeAt(2)<<16)+(i.charCodeAt(3)<<24)}function r(i){return String.fromCharCode(i&255,(i>>8)&255,(i>>16)&255,(i>>24)&255)}var k=aa("DXT1");var j=aa("DXT3");var g=aa("DXT5");var b=31;var u=0;var S=1;var Z=2;var V=3;var E=4;var n=7;var K=20;var d=21;var h=new Int32Array(y,0,b);if(h[u]!==x){console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header");return H}if(!h[K]&ab){console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code");return H}var C;var B=h[d];switch(B){case k:C=8;H.format=THREE.RGB_S3TC_DXT1_Format;break;case j:C=16;H.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:C=16;H.format=THREE.RGBA_S3TC_DXT5_Format;break;default:console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",r(B));return H}H.mipmapCount=1;if(h[Z]&J&&W!==false){H.mipmapCount=Math.max(1,h[n])}H.width=h[E];H.height=h[V];var M=h[S]+4;var a=H.width;var e=H.height;for(var X=0;X<H.mipmapCount;X++){var q=Math.max(4,a)/4*Math.max(4,e)/4*C;var D=new Uint8Array(y,M,q);var c={data:D,width:a,height:e};H.mipmaps.push(c);M+=q;a=Math.max(a*0.5,1);e=Math.max(e*0.5,1)}return H},getNormalMap:function(q,C){var d=function(x,i){return[x[1]*i[2]-x[2]*i[1],x[2]*i[0]-x[0]*i[2],x[0]*i[1]-x[1]*i[0]]};var v=function(x,i){return[x[0]-i[0],x[1]-i[1],x[2]-i[2]]};var s=function(x){var i=Math.sqrt(x[0]*x[0]+x[1]*x[1]+x[2]*x[2]);return[x[0]/i,x[1]/i,x[2]/i]};C=C|1;var r=q.width;var p=q.height;var e=document.createElement("canvas");e.width=r;e.height=p;var c=e.getContext("2d");c.drawImage(q,0,0);var D=c.getImageData(0,0,r,p).data;var w=c.createImageData(r,p);var k=w.data;for(var m=0;m<r;m++){for(var l=0;l<p;l++){var f=l-1<0?0:l-1;var h=l+1>p-1?p-1:l+1;var g=m-1<0?0:m-1;var j=m+1>r-1?r-1:m+1;var u=[];var B=[0,0,D[(l*r+m)*4]/255*C];u.push([-1,0,D[(l*r+g)*4]/255*C]);u.push([-1,-1,D[(f*r+g)*4]/255*C]);u.push([0,-1,D[(f*r+m)*4]/255*C]);u.push([1,-1,D[(f*r+j)*4]/255*C]);u.push([1,0,D[(l*r+j)*4]/255*C]);u.push([1,1,D[(h*r+j)*4]/255*C]);u.push([0,1,D[(h*r+m)*4]/255*C]);u.push([-1,1,D[(h*r+g)*4]/255*C]);var o=[];var z=u.length;for(var t=0;t<z;t++){var b=u[t];var a=u[(t+1)%z];b=v(b,B);a=v(a,B);o.push(s(d(b,a)))}var A=[0,0,0];for(var t=0;t<o.length;t++){A[0]+=o[t][0];A[1]+=o[t][1];A[2]+=o[t][2]}A[0]/=o.length;A[1]/=o.length;A[2]/=o.length;var n=(l*r+m)*4;k[n]=((A[0]+1)/2*255)|0;k[n+1]=((A[1]+1)/2*255)|0;k[n+2]=(A[2]*255)|0;k[n+3]=255}}c.putImageData(w,0,0);return e},generateDataTexture:function(c,l,d){var m=c*l;var f=new Uint8Array(3*m);var a=Math.floor(d.r*255);var h=Math.floor(d.g*255);var k=Math.floor(d.b*255);for(var e=0;e<m;e++){f[e*3]=a;f[e*3+1]=h;f[e*3+2]=k}var j=new THREE.DataTexture(f,c,l,THREE.RGBFormat);j.needsUpdate=true;return j}};THREE.SceneUtils={createMultiMaterialObject:function(e,b){var d=new THREE.Object3D();for(var c=0,a=b.length;c<a;c++){d.add(new THREE.Mesh(e,b[c]))}return d},detach:function(c,a,b){c.applyMatrix(a.matrixWorld);a.remove(c);b.add(c)},attach:function(d,c,a){var b=new THREE.Matrix4();b.getInverse(a.matrixWorld);d.applyMatrix(b);c.remove(d);a.add(d)}};if(THREE.WebGLRenderer){THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:["uniform samplerCube tCube;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","vec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );","refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;","refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;","refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;","refractedColor.a = 1.0;","gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );","}"].join("\n"),vertexShader:["uniform float mRefractionRatio;","uniform float mFresnelBias;","uniform float mFresnelScale;","uniform float mFresnelPower;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vec4 mPosition = modelMatrix * vec4( position, 1.0 );","vec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","vec3 I = mPosition.xyz - cameraPosition;","vReflect = reflect( I, nWorld );","vRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );","vRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );","vRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );","vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n")},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngle[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngle[ i ] ) {","spotEffect = pow( spotEffect, spotLightExponent[ i ] );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );","vec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalMatrix * skinnedNormal.xyz;","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalMatrix * skinnedTangent.xyz;","#else","vNormal = normalMatrix * normal;","vTangent = normalMatrix * tangent.xyz;","#endif","vBinormal = cross( vNormal, vTangent ) * tangent.w;","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = mPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vViewPosition;","void main() {","vec4 mPosition = modelMatrix * vec4( position, 1.0 );","vViewPosition = cameraPosition - mPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vViewPosition;","void main() {","vec3 wPos = cameraPosition - vViewPosition;","gl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );","}"].join("\n")}}}}THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var a=d.familyName.toLowerCase();var b=this;b.faces[a]=b.faces[a]||{};b.faces[a][d.cssFontWeight]=b.faces[a][d.cssFontWeight]||{};b.faces[a][d.cssFontWeight][d.cssFontStyle]=d;var c=b.faces[a][d.cssFontWeight][d.cssFontStyle]=d;return d},drawText:function(n){var a=[],e=[];var j,c,l=this.getFace(),g=this.size/l.resolution,h=0,m=String(n).split(""),d=m.length;var f=[];for(j=0;j<d;j++){var o=new THREE.Path();var k=this.extractGlyphPoints(m[j],l,g,h,o);h+=k.offset;f.push(k.path)}var b=h/2;return{paths:f,offset:b}},extractGlyphPoints:function(C,j,G,f,r){var H=[];var v,s,d,e,u,b,E,B,l,k,h,g,q,A,o,z,n,w,a,m=j.glyphs[C]||j.glyphs["?"];if(!m){return}if(m.o){e=m._cachedOutline||(m._cachedOutline=m.o.split(" "));b=e.length;E=G;B=G;for(v=0;v<b;){u=e[v++];switch(u){case"m":l=e[v++]*E+f;k=e[v++]*B;r.moveTo(l,k);break;case"l":l=e[v++]*E+f;k=e[v++]*B;r.lineTo(l,k);break;case"q":h=e[v++]*E+f;g=e[v++]*B;o=e[v++]*E+f;z=e[v++]*B;r.quadraticCurveTo(o,z,h,g);a=H[H.length-1];if(a){q=a.x;A=a.y;for(s=1,d=this.divisions;s<=d;s++){var p=s/d;var F=THREE.Shape.Utils.b2(p,q,o,h);var D=THREE.Shape.Utils.b2(p,A,z,g)}}break;case"b":h=e[v++]*E+f;g=e[v++]*B;o=e[v++]*E+f;z=e[v++]*-B;n=e[v++]*E+f;w=e[v++]*-B;r.bezierCurveTo(h,g,o,z,n,w);a=H[H.length-1];if(a){q=a.x;A=a.y;for(s=1,d=this.divisions;s<=d;s++){var p=s/d;var F=THREE.Shape.Utils.b3(p,q,o,n,h);var D=THREE.Shape.Utils.b3(p,A,z,w,g)}}break}}}return{offset:m.ha*G,path:r}}};THREE.FontUtils.generateShapes=function(i,j){j=j||{};var l=j.size!==undefined?j.size:100;var h=j.curveSegments!==undefined?j.curveSegments:4;var d=j.font!==undefined?j.font:"helvetiker";var g=j.weight!==undefined?j.weight:"normal";var a=j.style!==undefined?j.style:"normal";THREE.FontUtils.size=l;THREE.FontUtils.divisions=h;THREE.FontUtils.face=d;THREE.FontUtils.weight=g;THREE.FontUtils.style=a;var f=THREE.FontUtils.drawText(i);var k=f.paths;var c=[];for(var b=0,e=k.length;b<e;b++){Array.prototype.push.apply(c,k[b].toShapes())}return c};(function(c){var b=1e-10;var f=function(h,x){var g=h.length;if(g<3){return null}var B=[],q=[],k=[];var y,r,p;if(e(h)>0){for(r=0;r<g;r++){q[r]=r}}else{for(r=0;r<g;r++){q[r]=(g-1)-r}}var j=g;var i=2*j;for(r=j-1;j>2;){if((i--)<=0){console.log("Warning, unable to triangulate polygon!");if(x){return k}return B}y=r;if(j<=y){y=0}r=y+1;if(j<=r){r=0}p=r+1;if(j<=p){p=0}if(a(h,y,r,p,j,q)){var o,m,l,A,z;o=q[y];m=q[r];l=q[p];B.push([h[o],h[m],h[l]]);k.push([q[y],q[r],q[p]]);for(A=r,z=r+1;z<j;A++,z++){q[A]=q[z]}j--;i=2*j}}if(x){return k}return B};var e=function(h){var k=h.length;var g=0;for(var j=k-1,i=0;i<k;j=i++){g+=h[j].x*h[i].y-h[i].x*h[j].y}return g*0.5};var d=function(r,q,A,y,j,h,w,v){var i,g,t,s;var C,B,m,l;var z,x,o,n;var k,p,u;i=j-A;g=h-y;t=r-j;s=q-h;C=A-r;B=y-q;m=w-r;l=v-q;z=w-A;x=v-y;o=w-j;n=v-h;u=i*x-g*z;k=C*l-B*m;p=t*n-s*o;return((u>=0)&&(p>=0)&&(k>=0))};var a=function(l,y,x,t,i,s){var h;var g,z,o,m;var k,j,r,q;g=l[s[y]].x;z=l[s[y]].y;o=l[s[x]].x;m=l[s[x]].y;k=l[s[t]].x;j=l[s[t]].y;if(b>(((o-g)*(j-z))-((m-z)*(k-g)))){return false}for(h=0;h<i;h++){if((h==y)||(h==x)||(h==t)){continue}r=l[s[h]].x;q=l[s[h]].y;if(d(g,z,o,m,k,j,r,q)){return false}}return true};c.Triangulate=f;c.Triangulate.area=e;return c})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPoint(c/a))}return b};THREE.Curve.prototype.getSpacedPoints=function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPointAt(c/a))}return b};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(b){if(!b){b=(this.__arcLengthDivisions)?(this.__arcLengthDivisions):200}if(this.cacheArcLengths&&(this.cacheArcLengths.length==b+1)&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var a=[];var f,d=this.getPoint(0);var e,c=0;a.push(0);for(e=1;e<=b;e++){f=this.getPoint(e/b);c+=f.distanceTo(d);a.push(c);d=f}this.cacheArcLengths=a;return a};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(m,a){var b=this.getLengths();var e=0,j=b.length;var k;if(a){k=a}else{k=m*b[j-1]}var h=0,d=j-1,l;while(h<=d){e=Math.floor(h+(d-h)/2);l=b[e]-k;if(l<0){h=e+1;continue}else{if(l>0){d=e-1;continue}else{d=e;break}}}e=d;if(b[e]==k){var o=e/(j-1);return o}var f=b[e];var n=b[e+1];var c=n-f;var g=(k-f)/c;var o=(e+g)/(j-1);return o};THREE.Curve.prototype.getNormalVector=function(b){var a=this.getTangent(b);return new THREE.Vector2(-a.y,a.x)};THREE.Curve.prototype.getTangent=function(b){var g=0.0001;var d=b-g;var c=b+g;if(d<0){d=0}if(c>1){c=1}var f=this.getPoint(d);var e=this.getPoint(c);var a=e.clone().subSelf(f);return a.normalize()};THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)};THREE.LineCurve=function(b,a){this.v1=b;this.v2=a};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(b){var a=this.v2.clone().subSelf(this.v1);a.multiplyScalar(b).addSelf(this.v1);return a};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().subSelf(this.v1);return b.normalize()};THREE.QuadraticBezierCurve=function(a,c,b){this.v0=a;this.v1=c;this.v2=b};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(c){var b,a;b=THREE.Shape.Utils.b2(c,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(c,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(c){var b,a;b=THREE.Curve.Utils.tangentQuadraticBezier(c,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(c,this.v0.y,this.v1.y,this.v2.y);var d=new THREE.Vector2(b,a);d.normalize();return d};THREE.CubicBezierCurve=function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(c){var b,a;b=THREE.Shape.Utils.b3(c,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(c,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(c){var b,a;b=THREE.Curve.Utils.tangentCubicBezier(c,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(c,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var d=new THREE.Vector2(b,a);d.normalize();return d};THREE.SplineCurve=function(a){this.points=(a==undefined)?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(d){var b=new THREE.Vector2();var h=[];var e=this.points,a,g,f;a=(e.length-1)*d;g=Math.floor(a);f=a-g;h[0]=g==0?g:g-1;h[1]=g;h[2]=g>e.length-2?e.length-1:g+1;h[3]=g>e.length-3?e.length-1:g+2;b.x=THREE.Curve.Utils.interpolate(e[h[0]].x,e[h[1]].x,e[h[2]].x,e[h[3]].x,f);b.y=THREE.Curve.Utils.interpolate(e[h[0]].y,e[h[1]].y,e[h[2]].y,e[h[3]].y,f);return b};THREE.EllipseCurve=function(f,e,g,a,d,c,b){this.aX=f;this.aY=e;this.xRadius=g;this.yRadius=a;this.aStartAngle=d;this.aEndAngle=c;this.aClockwise=b};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(c){var e=this.aEndAngle-this.aStartAngle;if(!this.aClockwise){c=1-c}var d=this.aStartAngle+c*e;var b=this.aX+this.xRadius*Math.cos(d);var a=this.aY+this.yRadius*Math.sin(d);return new THREE.Vector2(b,a)};THREE.ArcCurve=function(e,d,f,c,b,a){THREE.EllipseCurve.call(this,e,d,f,f,c,b,a)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.Curve.Utils={tangentQuadraticBezier:function(a,d,c,b){return 2*(1-a)*(c-d)+2*a*(b-c)},tangentCubicBezier:function(a,e,d,c,b){return -3*e*(1-a)*(1-a)+3*d*(1-a)*(1-a)-6*a*d*(1-a)+6*a*c*(1-a)-3*a*a*c+3*a*a*b},tangentSpline:function(i,h,g,f,d){var e=6*i*i-6*i;var b=3*i*i-4*i+1;var c=-6*i*i+6*i;var a=3*i*i-2*i;return e+b+c+a},interpolate:function(h,g,e,d,i){var f=(e-h)*0.5;var c=(d-g)*0.5;var b=i*i;var a=i*b;return(2*g-2*e+f+c)*a+(-3*g+3*e-2*f-c)*b+f*i+g}};THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(b,a){this.v1=b;this.v2=a},function(a){var b=new THREE.Vector3();b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,c,b){this.v0=a;this.v1=c;this.v2=b},function(c){var b,a,d;b=THREE.Shape.Utils.b2(c,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(c,this.v0.y,this.v1.y,this.v2.y);d=THREE.Shape.Utils.b2(c,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,a,d)});THREE.CubicBezierCurve3=THREE.Curve.create(function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b},function(c){var b,a,d;b=THREE.Shape.Utils.b3(c,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(c,this.v0.y,this.v1.y,this.v2.y,this.v3.y);d=THREE.Shape.Utils.b3(c,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,a,d)});THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=(a==undefined)?[]:a},function(l){var j=new THREE.Vector3();var d=[];var i=this.points,g,a,b;g=(i.length-1)*l;a=Math.floor(g);b=g-a;d[0]=a==0?a:a-1;d[1]=a;d[2]=a>i.length-2?i.length-1:a+1;d[3]=a>i.length-3?i.length-1:a+2;var k=i[d[0]],h=i[d[1]],f=i[d[2]],e=i[d[3]];j.x=THREE.Curve.Utils.interpolate(k.x,h.x,f.x,e.x,b);j.y=THREE.Curve.Utils.interpolate(k.y,h.y,f.y,e.y,b);j.z=THREE.Curve.Utils.interpolate(k.z,h.z,f.z,e.z,b);return j});THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=(a==undefined)?[]:a},function(d){var b=new THREE.Vector3();var h=[];var e=this.points,a,g,f;a=(e.length-0)*d;g=Math.floor(a);f=a-g;g+=g>0?0:(Math.floor(Math.abs(g)/e.length)+1)*e.length;h[0]=(g-1)%e.length;h[1]=(g)%e.length;h[2]=(g+1)%e.length;h[3]=(g+2)%e.length;b.x=THREE.Curve.Utils.interpolate(e[h[0]].x,e[h[1]].x,e[h[2]].x,e[h[3]].x,f);b.y=THREE.Curve.Utils.interpolate(e[h[0]].y,e[h[1]].y,e[h[2]].y,e[h[3]].y,f);b.z=THREE.Curve.Utils.interpolate(e[h[0]].z,e[h[1]].z,e[h[2]].z,e[h[3]].z,f);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var b=this.curves[0].getPoint(0);var a=this.curves[this.curves.length-1].getPoint(1);if(!b.equals(a)){this.curves.push(new THREE.LineCurve(a,b))}};THREE.CurvePath.prototype.getPoint=function(c){var h=c*this.getLength();var g=this.getCurveLengths();var b=0,e,f;while(b<g.length){if(g[b]>=h){e=g[b]-h;f=this.curves[b];var a=1-e/f.getLength();return f.getPointAt(a);break}b++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var d=[],c=0;var b,a=this.curves.length;for(b=0;b<a;b++){c+=this.curves[b].getLength();d.push(c)}this.cacheLengths=d;return d};THREE.CurvePath.prototype.getBoundingBox=function(){var m=this.getPoints();var b,a,n;var f,e,d;b=a=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var c,g,l,h;var k=m[0] instanceof THREE.Vector3;h=k?new THREE.Vector3():new THREE.Vector2();for(g=0,l=m.length;g<l;g++){c=m[g];if(c.x>b){b=c.x}else{if(c.x<f){f=c.x}}if(c.y>a){a=c.y}else{if(c.y<e){e=c.y}}if(k){if(c.z>n){n=c.z}else{if(c.z<d){d=c.z}}}h.addSelf(c)}var j={minX:f,minY:e,maxX:b,maxY:a,centroid:h.divideScalar(l)};if(k){j.maxZ=n;j.minZ=d}return j};THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,true);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,true);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(b){var c=new THREE.Geometry();for(var a=0;a<b.length;a++){c.vertices.push(new THREE.Vector3(b[a].x,b[a].y,b[a].z||0))}return c};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};THREE.CurvePath.prototype.getTransformedPoints=function(c,e){var b=this.getPoints(c);var d,a;if(!e){e=this.bends}for(d=0,a=e.length;d<a;d++){b=this.getWrapPoints(b,e[d])}return b};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(c,e){var b=this.getSpacedPoints(c);var d,a;if(!e){e=this.bends}for(d=0,a=e.length;d<a;d++){b=this.getWrapPoints(b,e[d])}return b};THREE.CurvePath.prototype.getWrapPoints=function(f,l){var a=this.getBoundingBox();var d,g,b,j,h,k;for(d=0,g=f.length;d<g;d++){b=f[d];j=b.x;h=b.y;k=j/a.maxX;k=l.getUtoTmapping(k,j);var c=l.getPoint(k);var e=l.getNormalVector(k).multiplyScalar(h);b.x=c.x+e.x;b.y=c.y+e.y}return f};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(c){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||c){if(this.parent){this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;c=true}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3();THREE.Gyroscope.prototype.translationObject=new THREE.Vector3();THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion();THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion();THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3();THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];if(a){this.fromPoints(a)}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(b){this.moveTo(b[0].x,b[0].y);for(var a=1,c=b.length;a<c;a++){this.lineTo(b[a].x,b[a].y)}};THREE.Path.prototype.moveTo=function(a,c){var b=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:b})};THREE.Path.prototype.lineTo=function(a,g){var b=Array.prototype.slice.call(arguments);var e=this.actions[this.actions.length-1].args;var c=e[e.length-2];var d=e[e.length-1];var f=new THREE.LineCurve(new THREE.Vector2(c,d),new THREE.Vector2(a,g));this.curves.push(f);this.actions.push({action:THREE.PathActions.LINE_TO,args:b})};THREE.Path.prototype.quadraticCurveTo=function(e,b,g,f){var h=Array.prototype.slice.call(arguments);var a=this.actions[this.actions.length-1].args;var c=a[a.length-2];var i=a[a.length-1];var d=new THREE.QuadraticBezierCurve(new THREE.Vector2(c,i),new THREE.Vector2(e,b),new THREE.Vector2(g,f));this.curves.push(d);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:h})};THREE.Path.prototype.bezierCurveTo=function(e,c,k,j,g,f){var h=Array.prototype.slice.call(arguments);var a=this.actions[this.actions.length-1].args;var b=a[a.length-2];var i=a[a.length-1];var d=new THREE.CubicBezierCurve(new THREE.Vector2(b,i),new THREE.Vector2(e,c),new THREE.Vector2(k,j),new THREE.Vector2(g,f));this.curves.push(d);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:h})};THREE.Path.prototype.splineThru=function(g){var a=Array.prototype.slice.call(arguments);var d=this.actions[this.actions.length-1].args;var b=d[d.length-2];var c=d[d.length-1];var f=[new THREE.Vector2(b,c)];Array.prototype.push.apply(f,g);var e=new THREE.SplineCurve(f);this.curves.push(e);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:a})};THREE.Path.prototype.arc=function(h,f,g,d,a,b){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var i=c[c.length-1];this.absarc(h+e,f+i,g,d,a,b)};THREE.Path.prototype.absarc=function(e,d,f,c,b,a){this.absellipse(e,d,f,f,c,b,a)};THREE.Path.prototype.ellipse=function(g,f,i,h,d,a,b){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var j=c[c.length-1];this.absellipse(g+e,f+j,i,h,d,a,b)};THREE.Path.prototype.absellipse=function(f,e,j,g,c,a,b){var h=Array.prototype.slice.call(arguments);var d=new THREE.EllipseCurve(f,e,j,g,c,a,b);this.curves.push(d);var i=d.getPoint(b?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};THREE.Path.prototype.getSpacedPoints=function(b,d){if(!b){b=40}var c=[];for(var a=0;a<b;a++){c.push(this.getPoint(a/b))}return c};THREE.Path.prototype.getPoints=function(O,M){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(O,M)}O=O||12;var A=[];var J,u,r,c,E;var B,y,N,v,P,w,a,x,b,I,D,H,G;for(J=0,u=this.actions.length;J<u;J++){r=this.actions[J];c=r.action;E=r.args;switch(c){case THREE.PathActions.MOVE_TO:A.push(new THREE.Vector2(E[0],E[1]));break;case THREE.PathActions.LINE_TO:A.push(new THREE.Vector2(E[0],E[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:B=E[2];y=E[3];P=E[0];w=E[1];if(A.length>0){b=A[A.length-1];a=b.x;x=b.y}else{b=this.actions[J-1].args;a=b[b.length-2];x=b[b.length-1]}for(I=1;I<=O;I++){D=I/O;H=THREE.Shape.Utils.b2(D,a,P,B);G=THREE.Shape.Utils.b2(D,x,w,y);A.push(new THREE.Vector2(H,G))}break;case THREE.PathActions.BEZIER_CURVE_TO:B=E[4];y=E[5];P=E[0];w=E[1];N=E[2];v=E[3];if(A.length>0){b=A[A.length-1];a=b.x;x=b.y}else{b=this.actions[J-1].args;a=b[b.length-2];x=b[b.length-1]}for(I=1;I<=O;I++){D=I/O;H=THREE.Shape.Utils.b3(D,a,P,N,B);G=THREE.Shape.Utils.b3(D,x,w,v,y);A.push(new THREE.Vector2(H,G))}break;case THREE.PathActions.CSPLINE_THRU:b=this.actions[J-1].args;var k=new THREE.Vector2(b[b.length-2],b[b.length-1]);var f=[k];var F=O*E[0].length;f=f.concat(E[0]);var L=new THREE.SplineCurve(f);for(I=1;I<=F;I++){A.push(L.getPointAt(I/F))}break;case THREE.PathActions.ARC:var o=E[0],m=E[1],p=E[2],K=E[3],C=E[4],h=!!E[5];var z=C-K;var l;var d=O*2;for(I=1;I<=d;I++){D=I/d;if(!h){D=1-D}l=K+D*z;H=o+p*Math.cos(l);G=m+p*Math.sin(l);A.push(new THREE.Vector2(H,G))}break;case THREE.PathActions.ELLIPSE:var o=E[0],m=E[1],q=E[2],s=E[3],K=E[4],C=E[5],h=!!E[6];var z=C-K;var l;var d=O*2;for(I=1;I<=d;I++){D=I/d;if(!h){D=1-D}l=K+D*z;H=o+q*Math.cos(l);G=m+s*Math.sin(l);A.push(new THREE.Vector2(H,G))}break}}var e=A[A.length-1];var g=1e-10;if(Math.abs(e.x-A[0].x)<g&&Math.abs(e.y-A[0].y)<g){A.splice(A.length-1,1)}if(M){A.push(A[0])}return A};THREE.Path.prototype.toShapes=function(){var c,f,j,b,d;var e=[],h=new THREE.Path();for(c=0,f=this.actions.length;c<f;c++){j=this.actions[c];d=j.args;b=j.action;if(b==THREE.PathActions.MOVE_TO){if(h.actions.length!=0){e.push(h);h=new THREE.Path()}}h[b].apply(h,d)}if(h.actions.length!=0){e.push(h)}if(e.length==0){return[]}var l,k,a=[];var g=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(e.length==1){l=e[0];k=new THREE.Shape();k.actions=l.actions;k.curves=l.curves;a.push(k);return a}if(g){k=new THREE.Shape();for(c=0,f=e.length;c<f;c++){l=e[c];if(THREE.Shape.Utils.isClockWise(l.getPoints())){k.actions=l.actions;k.curves=l.curves;a.push(k);k=new THREE.Shape()}else{k.holes.push(l)}}}else{for(c=0,f=e.length;c<f;c++){l=e[c];if(THREE.Shape.Utils.isClockWise(l.getPoints())){if(k){a.push(k)}k=new THREE.Shape();k.actions=l.actions;k.curves=l.curves}else{k.holes.push(l)}}a.push(k)}return a};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){var a=new THREE.ExtrudeGeometry(this,b);return a};THREE.Shape.prototype.makeGeometry=function(a){var b=new THREE.ShapeGeometry(this,a);return b};THREE.Shape.prototype.getPointsHoles=function(c){var b,a=this.holes.length,d=[];for(b=0;b<a;b++){d[b]=this.holes[b].getTransformedPoints(c,this.bends)}return d};THREE.Shape.prototype.getSpacedPointsHoles=function(c){var b,a=this.holes.length,d=[];for(b=0;b<a;b++){d[b]=this.holes[b].getTransformedSpacedPoints(c,this.bends)}return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){if(this.useSpacedPoints){return this.extractAllSpacedPoints(a)}return this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};THREE.Shape.Utils={removeHoles:function(C,m){var k=C.concat();var A=k.concat();var x,c,t,L,z,u,B,i,J,s,r,q,M,D,o,n,O,N,b,a,I=[];for(J=0;J<m.length;J++){r=m[J];Array.prototype.push.apply(A,r);q=Number.POSITIVE_INFINITY;for(s=0;s<r.length;s++){o=r[s];var e=[];for(D=0;D<k.length;D++){n=k[D];M=o.distanceToSquared(n);e.push(M);if(M<q){q=M;z=s;u=D}}}x=(u-1)>=0?u-1:k.length-1;t=(z-1)>=0?z-1:r.length-1;var f=[r[z],k[u],k[x]];var H=THREE.FontUtils.Triangulate.area(f);var y=[r[z],r[t],k[u]];var G=THREE.FontUtils.Triangulate.area(y);var l=1;var E=-1;var v=u,F=z;u+=l;z+=E;if(u<0){u+=k.length}u%=k.length;if(z<0){z+=r.length}z%=r.length;x=(u-1)>=0?u-1:k.length-1;t=(z-1)>=0?z-1:r.length-1;f=[r[z],k[u],k[x]];var K=THREE.FontUtils.Triangulate.area(f);y=[r[z],r[t],k[u]];var w=THREE.FontUtils.Triangulate.area(y);if((H+G)>(K+w)){u=v;z=F;if(u<0){u+=k.length}u%=k.length;if(z<0){z+=r.length}z%=r.length;x=(u-1)>=0?u-1:k.length-1;t=(z-1)>=0?z-1:r.length-1}else{}O=k.slice(0,u);N=k.slice(u);b=r.slice(z);a=r.slice(0,z);var j=[r[z],k[u],k[x]];var g=[r[z],r[t],k[u]];I.push(j);I.push(g);k=O.concat(b).concat(a).concat(N)}return{shape:k,isolatedPts:I,allpoints:A}},triangulateShape:function(d,c){var h=THREE.Shape.Utils.removeHoles(d,c);var l=h.shape,a=h.allpoints,o=h.isolatedPts;var b=THREE.FontUtils.Triangulate(l,false);var e,n,k,m,p,j,g={},q={};for(e=0,n=a.length;e<n;e++){p=a[e].x+":"+a[e].y;if(g[p]!==undefined){console.log("Duplicate point",p)}g[p]=e}for(e=0,n=b.length;e<n;e++){m=b[e];for(k=0;k<3;k++){p=m[k].x+":"+m[k].y;j=g[p];if(j!==undefined){m[k]=j}}}for(e=0,n=o.length;e<n;e++){m=o[e];for(k=0;k<3;k++){p=m[k].x+":"+m[k].y;j=g[p];if(j!==undefined){m[k]=j}}}return b.concat(o)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(b,c){var a=1-b;return a*a*c},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,d,c,b){return this.b2p0(a,d)+this.b2p1(a,c)+this.b2p2(a,b)},b3p0:function(b,c){var a=1-b;return a*a*a*c},b3p1:function(b,c){var a=1-b;return 3*a*a*b*c},b3p2:function(b,c){var a=1-b;return 3*a*b*b*c},b3p3:function(a,b){return a*a*a*b},b3:function(a,e,d,c,b){return this.b3p0(a,e)+this.b3p1(a,d)+this.b3p2(a,c)+this.b3p3(a,b)}};THREE.AnimationHandler=(function(){var c=[];var b={};var d={};d.update=function(g){for(var f=0;f<c.length;f++){c[f].update(g)}};d.addToUpdate=function(f){if(c.indexOf(f)===-1){c.push(f)}};d.removeFromUpdate=function(g){var f=c.indexOf(g);if(f!==-1){c.splice(f,1)}};d.add=function(f){if(b[f.name]!==undefined){console.log("THREE.AnimationHandler.add: Warning! "+f.name+" already exists in library. Overwriting.")}b[f.name]=f;a(f)};d.get=function(f){if(typeof f==="string"){if(b[f]){return b[f]}else{console.log("THREE.AnimationHandler.get: Couldn't find animation "+f);return null}}else{}};d.parse=function(g){var h=[];if(g instanceof THREE.SkinnedMesh){for(var f=0;f<g.bones.length;f++){h.push(g.bones[f])}}else{e(g,h)}return h};var e=function(f,g){g.push(f);for(var h=0;h<f.children.length;h++){e(f.children[h],g)}};var a=function(j){if(j.initialized===true){return}for(var l=0;l<j.hierarchy.length;l++){for(var i=0;i<j.hierarchy[l].keys.length;i++){if(j.hierarchy[l].keys[i].time<0){j.hierarchy[l].keys[i].time=0}if(j.hierarchy[l].keys[i].rot!==undefined&&!(j.hierarchy[l].keys[i].rot instanceof THREE.Quaternion)){var f=j.hierarchy[l].keys[i].rot;j.hierarchy[l].keys[i].rot=new THREE.Quaternion(f[0],f[1],f[2],f[3])}}if(j.hierarchy[l].keys.length&&j.hierarchy[l].keys[0].morphTargets!==undefined){var p={};for(var i=0;i<j.hierarchy[l].keys.length;i++){for(var g=0;g<j.hierarchy[l].keys[i].morphTargets.length;g++){var n=j.hierarchy[l].keys[i].morphTargets[g];p[n]=-1}}j.hierarchy[l].usedMorphTargets=p;for(var i=0;i<j.hierarchy[l].keys.length;i++){var o={};for(var n in p){for(var g=0;g<j.hierarchy[l].keys[i].morphTargets.length;g++){if(j.hierarchy[l].keys[i].morphTargets[g]===n){o[n]=j.hierarchy[l].keys[i].morphTargetsInfluences[g];break}}if(g===j.hierarchy[l].keys[i].morphTargets.length){o[n]=0}}j.hierarchy[l].keys[i].morphTargetsInfluences=o}}for(var i=1;i<j.hierarchy[l].keys.length;i++){if(j.hierarchy[l].keys[i].time===j.hierarchy[l].keys[i-1].time){j.hierarchy[l].keys.splice(i,1);i--}}for(var i=0;i<j.hierarchy[l].keys.length;i++){j.hierarchy[l].keys[i].index=i}}var q=parseInt(j.length*j.fps,10);j.JIT={};j.JIT.hierarchy=[];for(var l=0;l<j.hierarchy.length;l++){j.JIT.hierarchy.push(new Array(q))}j.initialized=true};d.LINEAR=0;d.CATMULLROM=1;d.CATMULLROM_FORWARD=2;return d}());THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.isPaused=true;this.loop=true;this.interpolationType=c!==undefined?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3()};THREE.Animation.prototype.play=function(d,c){if(this.isPlaying===false){this.isPlaying=true;this.loop=d!==undefined?d:true;this.currentTime=c!==undefined?c:0;var g,b=this.hierarchy.length,e;for(g=0;g<b;g++){e=this.hierarchy[g];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD){e.useQuaternion=true}e.matrixAutoUpdate=true;if(e.animationCache===undefined){e.animationCache={};e.animationCache.prevKey={pos:0,rot:0,scl:0};e.animationCache.nextKey={pos:0,rot:0,scl:0};e.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix}var f=e.animationCache.prevKey;var a=e.animationCache.nextKey;f.pos=this.data.hierarchy[g].keys[0];f.rot=this.data.hierarchy[g].keys[0];f.scl=this.data.hierarchy[g].keys[0];a.pos=this.getNextKeyWith("pos",g,1);a.rot=this.getNextKeyWith("rot",g,1);a.scl=this.getNextKeyWith("scl",g,1)}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){if(this.isPaused===true){THREE.AnimationHandler.addToUpdate(this)}else{THREE.AnimationHandler.removeFromUpdate(this)}this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(l){if(this.isPlaying===false){return}var g=["pos","rot","scl"];var d;var v;var b;var m,c;var s,e;var u;var k;var j;var r=this.data.JIT.hierarchy;var o,q;var f,w,p;this.currentTime+=l*this.timeScale;q=this.currentTime;o=this.currentTime=this.currentTime%this.data.length;j=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,a=this.hierarchy.length;n<a;n++){u=this.hierarchy[n];k=u.animationCache;for(var i=0;i<3;i++){d=g[i];s=k.prevKey[d];e=k.nextKey[d];if(e.time<=q){if(o<q){if(this.loop){s=this.data.hierarchy[n].keys[0];e=this.getNextKeyWith(d,n,1);while(e.time<o){s=e;e=this.getNextKeyWith(d,n,e.index+1)}}else{this.stop();return}}else{do{s=e;e=this.getNextKeyWith(d,n,e.index+1)}while(e.time<o)}k.prevKey[d]=s;k.nextKey[d]=e}u.matrixAutoUpdate=true;u.matrixWorldNeedsUpdate=true;v=(o-s.time)/(e.time-s.time);m=s[d];c=e[d];if(v<0||v>1){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+v+" on bone "+n);v=v<0?0:1}if(d==="pos"){b=u.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){b.x=m[0]+(c[0]-m[0])*v;b.y=m[1]+(c[1]-m[1])*v;b.z=m[2]+(c[2]-m[2])*v}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",n,s.index-1)["pos"];this.points[1]=m;this.points[2]=c;this.points[3]=this.getNextKeyWith("pos",n,e.index+1)["pos"];v=v*0.33+0.33;f=this.interpolateCatmullRom(this.points,v);b.x=f[0];b.y=f[1];b.z=f[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){w=this.interpolateCatmullRom(this.points,v*1.01);this.target.set(w[0],w[1],w[2]);this.target.subSelf(b);this.target.y=0;this.target.normalize();p=Math.atan2(this.target.x,this.target.z);u.rotation.set(0,p,0)}}}}else{if(d==="rot"){THREE.Quaternion.slerp(m,c,u.quaternion,v)}else{if(d==="scl"){b=u.scale;b.x=m[0]+(c[0]-m[0])*v;b.y=m[1]+(c[1]-m[1])*v;b.z=m[2]+(c[2]-m[2])*v}}}}}};THREE.Animation.prototype.interpolateCatmullRom=function(n,b){var h=[],j=[],m,a,f,e,d,l,k,i,g;m=(n.length-1)*b;a=Math.floor(m);f=m-a;h[0]=a===0?a:a-1;h[1]=a;h[2]=a>n.length-2?a:a+1;h[3]=a>n.length-3?a:a+2;l=n[h[0]];k=n[h[1]];i=n[h[2]];g=n[h[3]];e=f*f;d=f*e;j[0]=this.interpolate(l[0],k[0],i[0],g[0],f,e,d);j[1]=this.interpolate(l[1],k[1],i[1],g[1],f,e,d);j[2]=this.interpolate(l[2],k[2],i[2],g[2],f,e,d);return j};THREE.Animation.prototype.interpolate=function(h,g,e,d,i,b,a){var f=(e-h)*0.5,c=(d-g)*0.5;return(2*(g-e)+f+c)*a+(-3*(g-e)-2*f-c)*b+f*i+g};THREE.Animation.prototype.getNextKeyWith=function(c,b,a){var d=this.data.hierarchy[b].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){a=a<d.length-1?a:d.length-1}else{a=a%d.length}for(;a<d.length;a++){if(d[a][c]!==undefined){return d[a]}}return this.data.hierarchy[b].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(c,b,a){var d=this.data.hierarchy[b].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){a=a>0?a:0}else{a=a>=0?a:a+d.length}for(;a>=0;a--){if(d[a][c]!==undefined){return d[a]}}return this.data.hierarchy[b].keys[d.length-1]};THREE.KeyFrameAnimation=function(j,e,i){this.root=j;this.data=THREE.AnimationHandler.get(e);this.hierarchy=THREE.AnimationHandler.parse(j);this.currentTime=0;this.timeScale=0.001;this.isPlaying=false;this.isPaused=true;this.loop=true;this.JITCompile=i!==undefined?i:true;for(var g=0,c=this.hierarchy.length;g<c;g++){var k=this.data.hierarchy[g].keys,a=this.data.hierarchy[g].sids,d=this.hierarchy[g];if(k.length&&a){for(var l=0;l<a.length;l++){var b=a[l],f=this.getNextKeyWith(b,g,0);if(f){f.apply(b)}}d.matrixAutoUpdate=false;this.data.hierarchy[g].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}};THREE.KeyFrameAnimation.prototype.play=function(c,b){if(!this.isPlaying){this.isPlaying=true;this.loop=c!==undefined?c:true;this.currentTime=b!==undefined?b:0;this.startTimeMs=b;this.startTime=10000000;this.endTime=-this.startTime;var e,a=this.hierarchy.length,d,g;for(e=0;e<a;e++){d=this.hierarchy[e];g=this.data.hierarchy[e];d.useQuaternion=true;if(g.animationCache===undefined){g.animationCache={};g.animationCache.prevKey=null;g.animationCache.nextKey=null;g.animationCache.originalMatrix=d instanceof THREE.Bone?d.skinMatrix:d.matrix}var f=this.data.hierarchy[e].keys;if(f.length){g.animationCache.prevKey=f[0];g.animationCache.nextKey=f[1];this.startTime=Math.min(f[0].time,this.startTime);this.endTime=Math.max(f[f.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){if(this.isPaused){THREE.AnimationHandler.addToUpdate(this)}else{THREE.AnimationHandler.removeFromUpdate(this)}this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this);for(var b=0;b<this.data.hierarchy.length;b++){var d=this.hierarchy[b];var c=this.data.hierarchy[b];if(c.animationCache!==undefined){var a=c.animationCache.originalMatrix;if(d instanceof THREE.Bone){a.copy(d.skinMatrix);d.skinMatrix=a}else{a.copy(d.matrix);d.matrix=a}delete c.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(n){if(!this.isPlaying){return}var v,d;var w;var l;var g;var u=this.data.JIT.hierarchy;var q,t;var e;this.currentTime+=n*this.timeScale;t=this.currentTime;q=this.currentTime=this.currentTime%this.data.length;if(q<this.startTimeMs){q=this.currentTime=this.startTimeMs+q}g=parseInt(Math.min(q*this.data.fps,this.data.length*this.data.fps),10);e=q<t;if(e&&!this.loop){for(var o=0,a=this.hierarchy.length;o<a;o++){var j=this.data.hierarchy[o].keys,r=this.data.hierarchy[o].sids,b=j.length-1,f=this.hierarchy[o];if(j.length){for(var i=0;i<r.length;i++){var c=r[i],k=this.getPrevKeyWith(c,o,b);if(k){k.apply(c)}}this.data.hierarchy[o].node.updateMatrix();f.matrixWorldNeedsUpdate=true}}this.stop();return}if(q<this.startTime){return}for(var o=0,a=this.hierarchy.length;o<a;o++){w=this.hierarchy[o];l=this.data.hierarchy[o];var j=l.keys,m=l.animationCache;if(this.JITCompile&&u[o][g]!==undefined){if(w instanceof THREE.Bone){w.skinMatrix=u[o][g];w.matrixWorldNeedsUpdate=false}else{w.matrix=u[o][g];w.matrixWorldNeedsUpdate=true}}else{if(j.length){if(this.JITCompile&&m){if(w instanceof THREE.Bone){w.skinMatrix=m.originalMatrix}else{w.matrix=m.originalMatrix}}v=m.prevKey;d=m.nextKey;if(v&&d){if(d.time<=t){if(e&&this.loop){v=j[0];d=j[1];while(d.time<q){v=d;d=j[v.index+1]}}else{if(!e){var p=j.length-1;while(d.time<q&&d.index!==p){v=d;d=j[v.index+1]}}}m.prevKey=v;m.nextKey=d}if(d.time>=q){v.interpolate(d,q)}else{v.interpolate(d,d.time)}}this.data.hierarchy[o].node.updateMatrix();w.matrixWorldNeedsUpdate=true}}}if(this.JITCompile){if(u[0][g]===undefined){this.hierarchy[0].updateMatrixWorld(true);for(var o=0;o<this.hierarchy.length;o++){if(this.hierarchy[o] instanceof THREE.Bone){u[o][g]=this.hierarchy[o].skinMatrix.clone()}else{u[o][g]=this.hierarchy[o].matrix.clone()}}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,c,b){var d=this.data.hierarchy[c].keys;b=b%d.length;for(;b<d.length;b++){if(d[b].hasTarget(a)){return d[b]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,c,b){var d=this.data.hierarchy[c].keys;b=b>=0?b:b+d.length;for(;b>=0;b--){if(d[b].hasTarget(a)){return d[b]}}return d[d.length-1]};THREE.CubeCamera=function(f,e,g){THREE.Object3D.call(this);var d=90,b=1;var c=new THREE.PerspectiveCamera(d,b,f,e);c.up.set(0,-1,0);c.lookAt(new THREE.Vector3(1,0,0));this.add(c);var j=new THREE.PerspectiveCamera(d,b,f,e);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(-1,0,0));this.add(j);var a=new THREE.PerspectiveCamera(d,b,f,e);a.up.set(0,0,1);a.lookAt(new THREE.Vector3(0,1,0));this.add(a);var i=new THREE.PerspectiveCamera(d,b,f,e);i.up.set(0,0,-1);i.lookAt(new THREE.Vector3(0,-1,0));this.add(i);var k=new THREE.PerspectiveCamera(d,b,f,e);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,1));this.add(k);var h=new THREE.PerspectiveCamera(d,b,f,e);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(g,g,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(n,o){var m=this.renderTarget;var l=m.generateMipmaps;m.generateMipmaps=false;m.activeCubeFace=0;n.render(o,c,m);m.activeCubeFace=1;n.render(o,j,m);m.activeCubeFace=2;n.render(o,a,m);m.activeCubeFace=3;n.render(o,i,m);m.activeCubeFace=4;n.render(o,k,m);m.generateMipmaps=l;m.activeCubeFace=5;n.render(o,h,m)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(h,a,e,g,b,f,d){THREE.Camera.call(this);this.fov=e;this.left=-h/2;this.right=h/2;this.top=a/2;this.bottom=-a/2;this.cameraO=new THREE.OrthographicCamera(h/-2,h/2,a/2,a/-2,f,d);this.cameraP=new THREE.PerspectiveCamera(e,h/a,g,b);this.zoom=1;this.toPerspective();var c=h/a};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.fov;var b=this.cameraP.aspect;var f=this.cameraP.near;var e=this.cameraP.far;var g=(f+e)/2;var h=Math.tan(d/2)*g;var a=2*h;var i=a*b;var c=i/2;h/=this.zoom;c/=this.zoom;this.cameraO.left=-c;this.cameraO.right=c;this.cameraO.top=h;this.cameraO.bottom=-h;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true};THREE.CombinedCamera.prototype.setSize=function(b,a){this.cameraP.aspect=b/a;this.left=-b/2;this.right=b/2;this.top=a/2;this.bottom=-a/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;if(this.inPerspectiveMode){this.toPerspective()}else{this.toOrthographic()}};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode){this.toPerspective()}else{this.toPerspective();this.toOrthographic()}};THREE.CombinedCamera.prototype.setLens=function(c,b){if(b===undefined){b=24}var a=2*Math.atan(b/(c*2))*(180/Math.PI);this.setFov(a);return a};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;if(this.inPerspectiveMode){this.toPerspective()}else{this.toOrthographic()}};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CircleGeometry=function(j,g,d,b){THREE.Geometry.call(this);j=j||50;d=d!==undefined?d:0;b=b!==undefined?b:Math.PI*2;g=g!==undefined?Math.max(3,g):8;var f,e=[],a=new THREE.Vector3(),m=new THREE.UV(0.5,0.5);this.vertices.push(a);e.push(m);for(f=0;f<=g;f++){var h=new THREE.Vector3();h.x=j*Math.cos(d+f/g*b);h.y=j*Math.sin(d+f/g*b);this.vertices.push(h);e.push(new THREE.UV((h.x/j+1)/2,-(h.y/j+1)/2+1))}var c=new THREE.Vector3(0,0,-1);for(f=1;f<=g;f++){var o=f;var l=f+1;var k=0;this.faces.push(new THREE.Face3(o,l,k,[c,c,c]));this.faceVertexUvs[0].push([e[f],e[f+1],m])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:j}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(n,m,v,p,a,c,e,t){THREE.Geometry.call(this);var b=this,j=n/2,f=m/2,w=v/2;var u,r,q,h,g,d;if(e!==undefined){if(e instanceof Array){this.materials=e}else{this.materials=[];for(var o=0;o<6;o++){this.materials.push(e)}}u=0;h=1;r=2;g=3;q=4;d=5}else{this.materials=[]}this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(t!=undefined){for(var l in t){if(this.sides[l]!==undefined){this.sides[l]=t[l]}}}this.sides.px&&k("z","y",-1,-1,v,m,j,u);this.sides.nx&&k("z","y",1,-1,v,m,-j,h);this.sides.py&&k("x","z",1,1,n,v,f,r);this.sides.ny&&k("x","z",1,-1,n,v,-f,g);this.sides.pz&&k("x","y",1,-1,n,m,w,q);this.sides.nz&&k("x","y",-1,-1,n,m,-w,d);function k(H,G,i,C,K,J,V,I){var F,A,z,M=p||1,L=a||1,B=K/2,y=J/2,D=b.vertices.length;if((H==="x"&&G==="y")||(H==="y"&&G==="x")){F="z"}else{if((H==="x"&&G==="z")||(H==="z"&&G==="x")){F="y";L=c||1}else{if((H==="z"&&G==="y")||(H==="y"&&G==="z")){F="x";M=c||1}}}var N=M+1,x=L+1,U=K/M,P=J/L,T=new THREE.Vector3();T[F]=V>0?1:-1;for(z=0;z<x;z++){for(A=0;A<N;A++){var s=new THREE.Vector3();s[H]=(A*U-B)*i;s[G]=(z*P-y)*C;s[F]=V;b.vertices.push(s)}}for(z=0;z<L;z++){for(A=0;A<M;A++){var S=A+N*z;var R=A+N*(z+1);var Q=(A+1)+N*(z+1);var O=(A+1)+N*z;var E=new THREE.Face4(S+D,R+D,Q+D,O+D);E.normal.copy(T);E.vertexNormals.push(T.clone(),T.clone(),T.clone(),T.clone());E.materialIndex=I;b.faces.push(E);b.faceVertexUvs[0].push([new THREE.UV(A/M,1-z/L),new THREE.UV(A/M,1-(z+1)/L),new THREE.UV((A+1)/M,1-(z+1)/L),new THREE.UV((A+1)/M,1-z/L)])}}}this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(j,L,z,C,s,I){THREE.Geometry.call(this);j=j!==undefined?j:20;L=L!==undefined?L:20;z=z!==undefined?z:100;var B=z/2;var A=C||8;var w=s||1;var o,n,f=[],p=[];for(n=0;n<=w;n++){var t=[];var K=[];var q=n/w;var e=q*(L-j)+j;for(o=0;o<=A;o++){var r=o/A;var G=new THREE.Vector3();G.x=e*Math.sin(r*Math.PI*2);G.y=-q*z+B;G.z=e*Math.cos(r*Math.PI*2);this.vertices.push(G);t.push(this.vertices.length-1);K.push(new THREE.UV(r,1-q))}f.push(t);p.push(K)}var E=(L-j)/z;var l,i;for(o=0;o<A;o++){if(j!==0){l=this.vertices[f[0][o]].clone();i=this.vertices[f[0][o+1]].clone()}else{l=this.vertices[f[1][o]].clone();i=this.vertices[f[1][o+1]].clone()}l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*E).normalize();i.setY(Math.sqrt(i.x*i.x+i.z*i.z)*E).normalize();for(n=0;n<w;n++){var d=f[n][o];var c=f[n+1][o];var b=f[n+1][o+1];var a=f[n][o+1];var m=l.clone();var k=l.clone();var h=i.clone();var g=i.clone();var J=p[n][o].clone();var H=p[n+1][o].clone();var F=p[n+1][o+1].clone();var D=p[n][o+1].clone();this.faces.push(new THREE.Face4(d,c,b,a,[m,k,h,g]));this.faceVertexUvs[0].push([J,H,F,D])}}if(!I&&j>0){this.vertices.push(new THREE.Vector3(0,B,0));for(o=0;o<A;o++){var d=f[0][o];var c=f[0][o+1];var b=this.vertices.length-1;var m=new THREE.Vector3(0,1,0);var k=new THREE.Vector3(0,1,0);var h=new THREE.Vector3(0,1,0);var J=p[0][o].clone();var H=p[0][o+1].clone();var F=new THREE.UV(H.u,0);this.faces.push(new THREE.Face3(d,c,b,[m,k,h]));this.faceVertexUvs[0].push([J,H,F])}}if(!I&&L>0){this.vertices.push(new THREE.Vector3(0,-B,0));for(o=0;o<A;o++){var d=f[n][o+1];var c=f[n][o];var b=this.vertices.length-1;var m=new THREE.Vector3(0,-1,0);var k=new THREE.Vector3(0,-1,0);var h=new THREE.Vector3(0,-1,0);var J=p[n][o+1].clone();var H=p[n][o].clone();var F=new THREE.UV(H.u,1);this.faces.push(new THREE.Face3(d,c,b,[m,k,h]));this.faceVertexUvs[0].push([J,H,F])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(a,b){if(typeof(a)==="undefined"){a=[];return}THREE.Geometry.call(this);a=a instanceof Array?a:[a];this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(b,d){var a=b.length;for(var e=0;e<a;e++){var c=b[e];this.addShape(c,d)}};THREE.ExtrudeGeometry.prototype.addShape=function(E,N){var g=N.amount!==undefined?N.amount:100;var f=N.bevelThickness!==undefined?N.bevelThickness:6;var O=N.bevelSize!==undefined?N.bevelSize:f-2;var B=N.bevelSegments!==undefined?N.bevelSegments:3;var a=N.bevelEnabled!==undefined?N.bevelEnabled:true;var M=N.curveSegments!==undefined?N.curveSegments:12;var X=N.steps!==undefined?N.steps:1;var r=N.extrudePath;var S,u=false;var ak=N.material;var o=N.extrudeMaterial;var D=N.UVGenerator!==undefined?N.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var W=this.shapebb;var x,aa,ae,at;if(r){S=r.getSpacedPoints(X);u=true;a=false;x=N.frames!==undefined?N.frames:new THREE.TubeGeometry.FrenetFrames(r,X,false);aa=new THREE.Vector3();ae=new THREE.Vector3();at=new THREE.Vector3()}if(!a){B=0;f=0;O=0}var aw,aq,ar;var Y=this;var K=[];var U=this.vertices.length;var C=E.extractPoints();var d=C.shape;var I=C.holes;var ag=!THREE.Shape.Utils.isClockWise(d);if(ag){d=d.reverse();for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];if(THREE.Shape.Utils.isClockWise(aw)){I[aq]=aw.reverse()}}ag=false}var q=THREE.Shape.Utils.triangulateShape(d,I);var aj=d;for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];d=d.concat(aw)}function P(i,h,b){if(!h){console.log("die")}return h.clone().multiplyScalar(b).addSelf(i)}var av,ah,ad,Z,w,ai=d.length,p,n=q.length,V,c=aj.length;var T=180/Math.PI;function G(i,h,b){return y(i,h,b)}function A(j,i,h){var t=Math.atan2(i.y-j.y,i.x-j.x);var s=Math.atan2(h.y-j.y,h.x-j.x);if(t>s){s+=Math.PI*2}var k=(t+s)/2;var z=-Math.cos(k);var v=-Math.sin(k);var b=new THREE.Vector2(z,v);return b}function y(ax,z,t){var aC=THREE.ExtrudeGeometry.__v1,az=THREE.ExtrudeGeometry.__v2,aB=THREE.ExtrudeGeometry.__v3,ay=THREE.ExtrudeGeometry.__v4,j=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6,aE,aD,k,aA,aF,h;aC.set(ax.x-z.x,ax.y-z.y);az.set(ax.x-t.x,ax.y-t.y);aE=aC.normalize();aD=az.normalize();aB.set(-aE.y,aE.x);ay.set(aD.y,-aD.x);j.copy(ax).addSelf(aB);i.copy(ax).addSelf(ay);if(j.equals(i)){return ay.clone()}j.copy(z).addSelf(aB);i.copy(t).addSelf(ay);k=aE.dot(ay);aA=i.subSelf(j).dot(ay);if(k===0){console.log("Either infinite or no solutions!");if(aA===0){console.log("Its finite solutions.")}else{console.log("Too bad, no solutions.")}}aF=aA/k;if(aF<0){return A(ax,z,t)}h=aE.multiplyScalar(aF).addSelf(j);return h.subSelf(ax).clone()}var an=[];for(var ap=0,R=aj.length,am=R-1,al=ap+1;ap<R;ap++,am++,al++){if(am===R){am=0}if(al===R){al=0}var J=aj[ap];var H=aj[am];var F=aj[al];an[ap]=G(aj[ap],aj[am],aj[al])}var Q=[],ac,e=an.concat();for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ac=[];for(ap=0,R=aw.length,am=R-1,al=ap+1;ap<R;ap++,am++,al++){if(am===R){am=0}if(al===R){al=0}ac[ap]=G(aw[ap],aw[am],aw[al])}Q.push(ac);e=e.concat(ac)}for(av=0;av<B;av++){ad=av/B;Z=f*(1-ad);ah=O*(Math.sin(ad*Math.PI/2));for(ap=0,R=aj.length;ap<R;ap++){w=P(aj[ap],an[ap],ah);ab(w.x,w.y,-Z)}for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ac=Q[aq];for(ap=0,R=aw.length;ap<R;ap++){w=P(aw[ap],ac[ap],ah);ab(w.x,w.y,-Z)}}}ah=O;for(ap=0;ap<ai;ap++){w=a?P(d[ap],e[ap],ah):d[ap];if(!u){ab(w.x,w.y,0)}else{ae.copy(x.normals[0]).multiplyScalar(w.x);aa.copy(x.binormals[0]).multiplyScalar(w.y);at.copy(S[0]).addSelf(ae).addSelf(aa);ab(at.x,at.y,at.z)}}var af;for(af=1;af<=X;af++){for(ap=0;ap<ai;ap++){w=a?P(d[ap],e[ap],ah):d[ap];if(!u){ab(w.x,w.y,g/X*af)}else{ae.copy(x.normals[af]).multiplyScalar(w.x);aa.copy(x.binormals[af]).multiplyScalar(w.y);at.copy(S[af]).addSelf(ae).addSelf(aa);ab(at.x,at.y,at.z)}}}for(av=B-1;av>=0;av--){ad=av/B;Z=f*(1-ad);ah=O*Math.sin(ad*Math.PI/2);for(ap=0,R=aj.length;ap<R;ap++){w=P(aj[ap],an[ap],ah);ab(w.x,w.y,g+Z)}for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ac=Q[aq];for(ap=0,R=aw.length;ap<R;ap++){w=P(aw[ap],ac[ap],ah);if(!u){ab(w.x,w.y,g+Z)}else{ab(w.x,w.y+S[X-1].y,S[X-1].x+Z)}}}}L();au();function L(){if(a){var b=0;var h=ai*b;for(ap=0;ap<n;ap++){p=q[ap];m(p[2]+h,p[1]+h,p[0]+h,true)}b=X+B*2;h=ai*b;for(ap=0;ap<n;ap++){p=q[ap];m(p[0]+h,p[1]+h,p[2]+h,false)}}else{for(ap=0;ap<n;ap++){p=q[ap];m(p[2],p[1],p[0],true)}for(ap=0;ap<n;ap++){p=q[ap];m(p[0]+ai*X,p[1]+ai*X,p[2]+ai*X,false)}}}function au(){var b=0;ao(aj,b);b+=aj.length;for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ao(aw,b);b+=aw.length}}function ao(ay,h){var z,v;ap=ay.length;while(--ap>=0){z=ap;v=ap-1;if(v<0){v=ay.length-1}var aD=0,i=X+B*2;for(aD=0;aD<i;aD++){var ax=ai*aD;var t=ai*(aD+1);var aC=h+z+ax,aB=h+v+ax,aA=h+v+t,az=h+z+t;l(aC,aB,aA,az,ay,aD,i,z,v)}}}function ab(b,i,h){Y.vertices.push(new THREE.Vector3(b,i,h))}function m(i,h,s,k){i+=U;h+=U;s+=U;Y.faces.push(new THREE.Face3(i,h,s,null,null,ak));var j=k?D.generateBottomUV(Y,E,N,i,h,s):D.generateTopUV(Y,E,N,i,h,s);Y.faceVertexUvs[0].push(j)}function l(ax,z,t,s,h,j,ay,v,k){ax+=U;z+=U;t+=U;s+=U;Y.faces.push(new THREE.Face4(ax,z,t,s,null,null,o));var i=D.generateSideWallUV(Y,E,h,N,ax,z,t,s,j,ay,v,k);Y.faceVertexUvs[0].push(i)}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(g,h,d,k,j,i){var a=g.vertices[k].x,l=g.vertices[k].y,f=g.vertices[j].x,e=g.vertices[j].y,c=g.vertices[i].x,b=g.vertices[i].y;return[new THREE.UV(a,l),new THREE.UV(f,e),new THREE.UV(c,b)]},generateBottomUV:function(f,c,a,e,d,b){return this.generateTopUV(f,c,a,e,d,b)},generateSideWallUV:function(f,m,b,t,x,w,v,u,a,n,s,r){var k=f.vertices[x].x,i=f.vertices[x].y,g=f.vertices[x].z,q=f.vertices[w].x,p=f.vertices[w].y,o=f.vertices[w].z,e=f.vertices[v].x,d=f.vertices[v].y,c=f.vertices[v].z,l=f.vertices[u].x,j=f.vertices[u].y,h=f.vertices[u].z;if(Math.abs(i-p)<0.01){return[new THREE.UV(k,1-g),new THREE.UV(q,1-o),new THREE.UV(e,1-c),new THREE.UV(l,1-h)]}else{return[new THREE.UV(i,1-g),new THREE.UV(p,1-o),new THREE.UV(d,1-c),new THREE.UV(j,1-h)]}}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2();THREE.ExtrudeGeometry.__v2=new THREE.Vector2();THREE.ExtrudeGeometry.__v3=new THREE.Vector2();THREE.ExtrudeGeometry.__v4=new THREE.Vector2();THREE.ExtrudeGeometry.__v5=new THREE.Vector2();THREE.ExtrudeGeometry.__v6=new THREE.Vector2();THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);if(a instanceof Array===false){a=[a]}this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(b,c){for(var d=0,a=b.length;d<a;d++){this.addShape(b[d],c)}return this};THREE.ShapeGeometry.prototype.addShape=function(d,g){if(g===undefined){g={}}var p=g.material;var y=g.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:g.UVGenerator;var q=this.shapebb;var x,w,r,u;var o=this.vertices.length;var A=d.extractPoints();var h=A.shape;var k=A.holes;var n=!THREE.Shape.Utils.isClockWise(h);if(n){h=h.reverse();for(x=0,w=k.length;x<w;x++){r=k[x];if(THREE.Shape.Utils.isClockWise(r)){k[x]=r.reverse()}}n=false}var e=THREE.Shape.Utils.triangulateShape(h,k);var v=h;for(x=0,w=k.length;x<w;x++){r=k[x];h=h.concat(r)}var z,j=h.length;var m,E=e.length;var f,t=v.length;for(x=0;x<j;x++){z=h[x];this.vertices.push(new THREE.Vector3(z.x,z.y,0))}for(x=0;x<E;x++){m=e[x];var D=m[0]+o;var C=m[1]+o;var B=m[2]+o;this.faces.push(new THREE.Face3(D,C,B,null,null,p));this.faceVertexUvs[0].push(y.generateBottomUV(this,d,g,D,C,B))}};THREE.LatheGeometry=function(v,r,g){THREE.Geometry.call(this);var w=r||12;var n=g||2*Math.PI;var u=[];var f=new THREE.Matrix4().makeRotationZ(n/w);for(var l=0;l<v.length;l++){u[l]=v[l].clone();this.vertices.push(u[l])}var m,t=w+1;for(m=0;m<t;m++){for(var l=0;l<u.length;l++){u[l]=f.multiplyVector3(u[l].clone());this.vertices.push(u[l])}}for(m=0;m<w;m++){for(var h=0,e=v.length;h<e-1;h++){var s=m*e+h;var q=((m+1)%t)*e+h;var p=((m+1)%t)*e+(h+1)%e;var o=m*e+(h+1)%e;this.faces.push(new THREE.Face4(s,q,p,o));this.faceVertexUvs[0].push([new THREE.UV(1-m/w,h/e),new THREE.UV(1-(m+1)/w,h/e),new THREE.UV(1-(m+1)/w,(h+1)/e),new THREE.UV(1-m/w,(h+1)/e)])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(p,o,e,n){THREE.Geometry.call(this);var h,f,i=p/2,g=o/2,r=e||1,q=n||1,s=r+1,m=q+1,B=p/r,u=o/q,A=new THREE.Vector3(0,0,1);for(f=0;f<m;f++){for(h=0;h<s;h++){var l=h*B-i;var k=f*u-g;this.vertices.push(new THREE.Vector3(l,-k,0))}}for(f=0;f<q;f++){for(h=0;h<r;h++){var z=h+s*f;var w=h+s*(f+1);var v=(h+1)+s*(f+1);var t=(h+1)+s*f;var j=new THREE.Face4(z,w,v,t);j.normal.copy(A);j.vertexNormals.push(A.clone(),A.clone(),A.clone(),A.clone());this.faces.push(j);this.faceVertexUvs[0].push([new THREE.UV(h/r,1-f/q),new THREE.UV(h/r,1-(f+1)/q),new THREE.UV((h+1)/r,1-(f+1)/q),new THREE.UV((h+1)/r,1-f/q)])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(f,e,r,t,B,g,A){THREE.Geometry.call(this);f=f||50;t=t!==undefined?t:0;B=B!==undefined?B:Math.PI*2;g=g!==undefined?g:0;A=A!==undefined?A:Math.PI;var z=Math.max(3,Math.floor(e)||8);var w=Math.max(2,Math.floor(r)||6);var n,m,h=[],o=[];for(m=0;m<=w;m++){var s=[];var H=[];for(n=0;n<=z;n++){var q=n/z;var p=m/w;var E=new THREE.Vector3();E.x=-f*Math.cos(t+q*B)*Math.sin(g+p*A);E.y=f*Math.cos(g+p*A);E.z=f*Math.sin(t+q*B)*Math.sin(g+p*A);this.vertices.push(E);s.push(this.vertices.length-1);H.push(new THREE.UV(q,1-p))}h.push(s);o.push(H)}for(m=0;m<w;m++){for(n=0;n<z;n++){var d=h[m][n+1];var c=h[m][n];var b=h[m+1][n];var a=h[m+1][n+1];var l=this.vertices[d].clone().normalize();var k=this.vertices[c].clone().normalize();var j=this.vertices[b].clone().normalize();var i=this.vertices[a].clone().normalize();var G=o[m][n+1].clone();var F=o[m][n].clone();var D=o[m+1][n].clone();var C=o[m+1][n+1].clone();if(Math.abs(this.vertices[d].y)==f){this.faces.push(new THREE.Face3(d,b,a,[l,j,i]));this.faceVertexUvs[0].push([G,D,C])}else{if(Math.abs(this.vertices[b].y)==f){this.faces.push(new THREE.Face3(d,c,b,[l,k,j]));this.faceVertexUvs[0].push([G,F,D])}else{this.faces.push(new THREE.Face4(d,c,b,a,[l,k,j,i]));this.faceVertexUvs[0].push([G,F,D,C])}}}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:f}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(b,a){var c=THREE.FontUtils.generateShapes(b,a);a.amount=a.height!==undefined?a.height:50;if(a.bevelThickness===undefined){a.bevelThickness=10}if(a.bevelSize===undefined){a.bevelSize=8}if(a.bevelEnabled===undefined){a.bevelEnabled=false}THREE.ExtrudeGeometry.call(this,c,a)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(h,g,f,m,k){THREE.Geometry.call(this);var e=this;this.radius=h||100;this.tube=g||40;this.radialSegments=f||8;this.tubularSegments=m||6;this.arc=k||Math.PI*2;var z=new THREE.Vector3(),n=[],q=[];for(var r=0;r<=this.radialSegments;r++){for(var s=0;s<=this.tubularSegments;s++){var p=s/this.tubularSegments*this.arc;var o=r/this.radialSegments*Math.PI*2;z.x=this.radius*Math.cos(p);z.y=this.radius*Math.sin(p);var t=new THREE.Vector3();t.x=(this.radius+this.tube*Math.cos(o))*Math.cos(p);t.y=(this.radius+this.tube*Math.cos(o))*Math.sin(p);t.z=this.tube*Math.sin(o);this.vertices.push(t);n.push(new THREE.UV(s/this.tubularSegments,r/this.radialSegments));q.push(t.clone().subSelf(z).normalize())}}for(var r=1;r<=this.radialSegments;r++){for(var s=1;s<=this.tubularSegments;s++){var A=(this.tubularSegments+1)*r+s-1;var y=(this.tubularSegments+1)*(r-1)+s-1;var x=(this.tubularSegments+1)*(r-1)+s;var w=(this.tubularSegments+1)*r+s;var l=new THREE.Face4(A,y,x,w,[q[A],q[y],q[x],q[w]]);l.normal.addSelf(q[A]);l.normal.addSelf(q[y]);l.normal.addSelf(q[x]);l.normal.addSelf(q[w]);l.normal.normalize();this.faces.push(l);this.faceVertexUvs[0].push([n[A].clone(),n[y].clone(),n[x].clone(),n[w].clone()])}}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(s,r,m,w,A,z,e){THREE.Geometry.call(this);var g=this;this.radius=s||200;this.tube=r||40;this.radialSegments=m||64;this.tubularSegments=w||8;this.p=A||2;this.q=z||3;this.heightScale=e||1;this.grid=new Array(this.radialSegments);var o=new THREE.Vector3();var B=new THREE.Vector3();var P=new THREE.Vector3();for(var F=0;F<this.radialSegments;++F){this.grid[F]=new Array(this.tubularSegments);for(var D=0;D<this.tubularSegments;++D){var y=F/this.radialSegments*2*this.p*Math.PI;var x=D/this.tubularSegments*2*Math.PI;var h=G(y,x,this.q,this.p,this.radius,this.heightScale);var f=G(y+0.01,x,this.q,this.p,this.radius,this.heightScale);var l,k;o.sub(f,h);B.add(f,h);P.cross(o,B);B.cross(P,o);P.normalize();B.normalize();l=-this.tube*Math.cos(x);k=this.tube*Math.sin(x);h.x+=l*B.x+k*P.x;h.y+=l*B.y+k*P.y;h.z+=l*B.z+k*P.z;this.grid[F][D]=H(h.x,h.y,h.z)}}for(var F=0;F<this.radialSegments;++F){for(var D=0;D<this.tubularSegments;++D){var t=(F+1)%this.radialSegments;var C=(D+1)%this.tubularSegments;var O=this.grid[F][D];var N=this.grid[t][D];var M=this.grid[t][C];var L=this.grid[F][C];var K=new THREE.UV(F/this.radialSegments,D/this.tubularSegments);var J=new THREE.UV((F+1)/this.radialSegments,D/this.tubularSegments);var I=new THREE.UV((F+1)/this.radialSegments,(D+1)/this.tubularSegments);var E=new THREE.UV(F/this.radialSegments,(D+1)/this.tubularSegments);this.faces.push(new THREE.Face4(O,N,M,L));this.faceVertexUvs[0].push([K,J,I,E])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();function H(a,c,b){return g.vertices.push(new THREE.Vector3(a,c,b))-1}function G(U,S,q,R,Q,a){var n=Math.cos(U);var j=Math.cos(S);var T=Math.sin(U);var i=q/R*U;var p=Math.cos(i);var d=Q*(2+p)*0.5*n;var c=Q*(2+p)*T*0.5;var b=a*Q*Math.sin(i)*0.5;return new THREE.Vector3(d,c,b)}};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(K,h,J,T,I,q){THREE.Geometry.call(this);this.path=K;this.segments=h||64;this.radius=J||1;this.radiusSegments=T||8;this.closed=I||false;if(q){this.debug=new THREE.Object3D()}this.grid=[];var w=this,D,H,A,e=this.segments+1,E,C,B,N,M,L,G,F,o,n,t,f=new THREE.Vector3(),P,O,s,g,Y,X,W,V,U,S,R,Q;var p=new THREE.TubeGeometry.FrenetFrames(K,h,I),r=p.tangents,m=p.normals,l=p.binormals;this.tangents=r;this.normals=m;this.binormals=l;function k(a,c,b){return w.vertices.push(new THREE.Vector3(a,c,b))-1}for(P=0;P<e;P++){this.grid[P]=[];G=P/(e-1);t=K.getPointAt(G);D=r[P];H=m[P];A=l[P];if(this.debug){this.debug.add(new THREE.ArrowHelper(D,t,J,255));this.debug.add(new THREE.ArrowHelper(H,t,J,16711680));this.debug.add(new THREE.ArrowHelper(A,t,J,65280))}for(O=0;O<this.radiusSegments;O++){F=O/this.radiusSegments*2*Math.PI;o=-this.radius*Math.cos(F);n=this.radius*Math.sin(F);f.copy(t);f.x+=o*H.x+n*A.x;f.y+=o*H.y+n*A.y;f.z+=o*H.z+n*A.z;this.grid[P][O]=k(f.x,f.y,f.z)}}for(P=0;P<this.segments;P++){for(O=0;O<this.radiusSegments;O++){s=(I)?(P+1)%this.segments:P+1;g=(O+1)%this.radiusSegments;Y=this.grid[P][O];X=this.grid[s][O];W=this.grid[s][g];V=this.grid[P][g];U=new THREE.UV(P/this.segments,O/this.radiusSegments);S=new THREE.UV((P+1)/this.segments,O/this.radiusSegments);R=new THREE.UV((P+1)/this.segments,(O+1)/this.radiusSegments);Q=new THREE.UV(P/this.segments,(O+1)/this.radiusSegments);this.faces.push(new THREE.Face4(Y,X,W,V));this.faceVertexUvs[0].push([U,S,R,Q])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(o,r,c){var f=new THREE.Vector3(),z=new THREE.Vector3(),p=new THREE.Vector3(),q=[],n=[],d=[],m=new THREE.Vector3(),t=new THREE.Matrix4(),b=r+1,e,A=0.0001,a,y,x,w,s,j,g;this.tangents=q;this.normals=n;this.binormals=d;for(s=0;s<b;s++){j=s/(b-1);q[s]=o.getTangentAt(j);q[s].normalize()}h();function l(i){n[0]=new THREE.Vector3();d[0]=new THREE.Vector3();if(i===undefined){i=new THREE.Vector3(0,0,1)}n[0].cross(i,q[0]).normalize();d[0].cross(q[0],n[0]).normalize()}function k(){var i=o.getTangentAt(A);n[0]=new THREE.Vector3().sub(i,q[0]).normalize();d[0]=new THREE.Vector3().cross(q[0],n[0]);n[0].cross(d[0],q[0]).normalize();d[0].cross(q[0],n[0]).normalize()}function h(){n[0]=new THREE.Vector3();d[0]=new THREE.Vector3();a=Number.MAX_VALUE;y=Math.abs(q[0].x);x=Math.abs(q[0].y);w=Math.abs(q[0].z);if(y<=a){a=y;z.set(1,0,0)}if(x<=a){a=x;z.set(0,1,0)}if(w<=a){z.set(0,0,1)}m.cross(q[0],z).normalize();n[0].cross(q[0],m);d[0].cross(q[0],n[0])}for(s=1;s<b;s++){n[s]=n[s-1].clone();d[s]=d[s-1].clone();m.cross(q[s-1],q[s]);if(m.length()>A){m.normalize();e=Math.acos(q[s-1].dot(q[s]));t.makeRotationAxis(m,e).multiplyVector3(n[s])}d[s].cross(q[s],n[s])}if(c){e=Math.acos(n[0].dot(n[b-1]));e/=(b-1);if(q[0].dot(m.cross(n[0],n[b-1]))>0){e=-e}for(s=1;s<b;s++){t.makeRotationAxis(q[s],e*s).multiplyVector3(n[s]);d[s].cross(q[s],n[s])}}};THREE.PolyhedronGeometry=function(m,d,k,h){THREE.Geometry.call(this);k=k||1;h=h||0;var j=this;for(var f=0,e=m.length;f<e;f++){o(new THREE.Vector3(m[f][0],m[f][1],m[f][2]))}var g=[],c=this.vertices;for(var f=0,e=d.length;f<e;f++){b(c[d[f][0]],c[d[f][1]],c[d[f][2]],h)}this.mergeVertices();for(var f=0,e=this.vertices.length;f<e;f++){this.vertices[f].multiplyScalar(k)}function o(i){var s=i.normalize().clone();s.index=j.vertices.push(s)-1;var p=r(i)/2/Math.PI+0.5;var l=n(i)/Math.PI+0.5;s.uv=new THREE.UV(p,1-l);return s}function b(u,t,s,l){if(l<1){var p=new THREE.Face3(u.index,t.index,s.index,[u.clone(),t.clone(),s.clone()]);p.centroid.addSelf(u).addSelf(t).addSelf(s).divideScalar(3);p.normal=p.centroid.clone().normalize();j.faces.push(p);var i=r(p.centroid);j.faceVertexUvs[0].push([a(u.uv,u,i),a(t.uv,t,i),a(s.uv,s,i)])}else{l-=1;b(u,q(u,t),q(u,s),l);b(q(u,t),t,q(t,s),l);b(q(u,s),q(t,s),s,l);b(q(u,t),q(t,s),q(u,s),l)}}function q(p,l){if(!g[p.index]){g[p.index]=[]}if(!g[l.index]){g[l.index]=[]}var i=g[p.index][l.index];if(i===undefined){g[p.index][l.index]=g[l.index][p.index]=i=o(new THREE.Vector3().add(p,l).divideScalar(2))}return i}function r(i){return Math.atan2(i.z,-i.x)}function n(i){return Math.atan2(-i.y,Math.sqrt((i.x*i.x)+(i.z*i.z)))}function a(l,i,p){if((p<0)&&(l.u===1)){l=new THREE.UV(l.u-1,l.v)}if((i.x===0)&&(i.z===0)){l=new THREE.UV(p/2/Math.PI+0.5,l.v)}return l}this.computeCentroids();this.boundingSphere={radius:k}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(b,e){var d=(1+Math.sqrt(5))/2;var c=[[-1,d,0],[1,d,0],[-1,-d,0],[1,-d,0],[0,-1,d],[0,1,d],[0,-1,-d],[0,1,-d],[d,0,-1],[d,0,1],[-d,0,-1],[-d,0,1]];var a=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,c,a,b,e)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(b,d){var c=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]];var a=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,c,a,b,d)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(b,d){var c=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]];var a=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,c,a,b,d)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(g,f,B,w){THREE.Geometry.call(this);var F=this.vertices;var e=this.faces;var k=this.faceVertexUvs[0];w=(w===undefined)?false:w;var s,h,q,o;var m,l;var n=B+1;var E=f+1;for(s=0;s<=B;s++){l=s/B;for(q=0;q<=f;q++){m=q/f;o=g(m,l);F.push(o)}}var D,C,A,z;var y,x,t,r;for(s=0;s<B;s++){for(q=0;q<f;q++){D=s*E+q;C=s*E+q+1;A=(s+1)*E+q;z=(s+1)*E+q+1;y=new THREE.UV(q/f,s/B);x=new THREE.UV((q+1)/f,s/B);t=new THREE.UV(q/f,(s+1)/B);r=new THREE.UV((q+1)/f,(s+1)/B);if(w){e.push(new THREE.Face3(D,C,A));e.push(new THREE.Face3(C,z,A));k.push([y,x,t]);k.push([x,r,t])}else{e.push(new THREE.Face4(D,C,z,A));k.push([y,x,r,t])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(k){THREE.Geometry.call(this);var d=[[0,1,2],[0,2,1]];for(var g=3;g<k.length;g++){b(g)}function b(v){var s=k[v].clone();var r=s.length();s.x+=r*n();s.y+=r*n();s.z+=r*n();var i=[];for(var t=0;t<d.length;){var w=d[t];if(e(w,s)){for(var u=0;u<3;u++){var p=[w[u],w[(u+1)%3]];var j=true;for(var q=0;q<i.length;q++){if(o(i[q],p)){i[q]=i[i.length-1];i.pop();j=false;break}}if(j){i.push(p)}}d[t]=d[d.length-1];d.pop()}else{t++}}for(var q=0;q<i.length;q++){d.push([i[q][0],i[q][1],v])}}function e(r,q){var p=k[r[0]];var j=k[r[1]];var i=k[r[2]];var t=h(p,j,i);var s=t.dot(p);return t.dot(q)>=s}function h(q,p,j){var i=new THREE.Vector3();var r=new THREE.Vector3();i.sub(j,p);r.sub(q,p);i.crossSelf(r);if(!i.isZero()){i.normalize()}return i}function o(j,i){return j[0]===i[1]&&j[1]===i[0]}function n(){return(Math.random()-0.5)*2*0.000001}function m(j){var i=j.length();return new THREE.UV(j.x/i,j.y/i)}var a=0;var c=new Array(k.length);for(var g=0;g<d.length;g++){var l=d[g];for(var f=0;f<3;f++){if(c[l[f]]===undefined){c[l[f]]=a++;this.vertices.push(k[l[f]])}l[f]=c[l[f]]}}for(var g=0;g<d.length;g++){this.faces.push(new THREE.Face3(d[g][0],d[g][1],d[g][2]))}for(var g=0;g<this.faces.length;g++){var l=this.faces[g];this.faceVertexUvs[0].push([m(this.vertices[l.a]),m(this.vertices[l.b]),m(this.vertices[l.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(a){var c=new THREE.Geometry();c.vertices.push(new THREE.Vector3(),new THREE.Vector3(a||1,0,0),new THREE.Vector3(),new THREE.Vector3(0,a||1,0),new THREE.Vector3(),new THREE.Vector3(0,0,a||1));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,b,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(c,b,f,e){THREE.Object3D.call(this);if(e===undefined){e=16776960}if(f===undefined){f=20}var a=new THREE.Geometry();a.vertices.push(new THREE.Vector3(0,0,0));a.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:e}));this.add(this.line);var d=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(d,new THREE.MeshBasicMaterial({color:e}));this.cone.position.set(0,1,0);this.add(this.cone);if(b instanceof THREE.Vector3){this.position=b}this.setDirection(c);this.setLength(f)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=new THREE.Vector3(0,1,0).crossSelf(a);var c=Math.acos(new THREE.Vector3(0,1,0).dot(a.clone().normalize()));this.matrix=new THREE.Matrix4().makeRotationAxis(b.normalize(),c);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.CameraHelper=function(e){THREE.Line.call(this);var g=this;this.geometry=new THREE.Geometry();this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap={};var d=16755200;var i=16711680;var b=43775;var f=16777215;var c=3355443;h("n1","n2",d);h("n2","n4",d);h("n4","n3",d);h("n3","n1",d);h("f1","f2",d);h("f2","f4",d);h("f4","f3",d);h("f3","f1",d);h("n1","f1",d);h("n2","f2",d);h("n3","f3",d);h("n4","f4",d);h("p","n1",i);h("p","n2",i);h("p","n3",i);h("p","n4",i);h("u1","u2",b);h("u2","u3",b);h("u3","u1",b);h("c","t",f);h("p","c",c);h("cn1","cn2",c);h("cn3","cn4",c);h("cf1","cf2",c);h("cf3","cf4",c);this.camera=e;function h(k,j,l){a(k,l);a(j,l)}function a(k,j){g.geometry.vertices.push(new THREE.Vector3());g.geometry.colors.push(new THREE.Color(j));if(g.pointMap[k]===undefined){g.pointMap[k]=[]}g.pointMap[k].push(g.geometry.vertices.length-1)}this.update(e)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var d=this;var a=1,c=1;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);b("c",0,0,-1);b("t",0,0,1);b("n1",-a,-c,-1);b("n2",a,-c,-1);b("n3",-a,c,-1);b("n4",a,c,-1);b("f1",-a,-c,1);b("f2",a,-c,1);b("f3",-a,c,1);b("f4",a,c,1);b("u1",a*0.7,c*1.1,-1);b("u2",-a*0.7,c*1.1,-1);b("u3",0,c*2,-1);b("cf1",-a,0,1);b("cf2",a,0,1);b("cf3",0,-c,1);b("cf4",0,c,1);b("cn1",-a,0,-1);b("cn2",a,0,-1);b("cn3",0,-c,-1);b("cn4",0,c,-1);function b(f,e,l,k){THREE.CameraHelper.__v.set(e,l,k);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);var j=d.pointMap[f];if(j!==undefined){for(var h=0,g=j.length;h<g;h++){d.geometry.vertices[j[h]].copy(THREE.CameraHelper.__v)}}}this.geometry.verticesNeedUpdate=true};THREE.CameraHelper.__projector=new THREE.Projector();THREE.CameraHelper.__v=new THREE.Vector3();THREE.CameraHelper.__c=new THREE.Camera();THREE.SubdivisionModifier=function(a){this.subdivisions=(a===undefined)?1:a;this.useOldVertexColors=false;this.supportUVs=true;this.debug=false};THREE.SubdivisionModifier.prototype.modify=function(b){var a=this.subdivisions;while(a-->0){this.smooth(b)}};THREE.GeometryUtils.orderedKey=function(d,c){return Math.min(d,c)+"_"+Math.max(d,c)};THREE.GeometryUtils.computeEdgeFaces=function(l){var f,n,q,m,d,c,h,g,p,a,e,r={};var o=THREE.GeometryUtils.orderedKey;function b(k,j){if(r[k]===undefined){r[k]=[]}r[k].push(j)}for(f=0,n=l.faces.length;f<n;f++){h=l.faces[f];if(h instanceof THREE.Face3){e=o(h.a,h.b);b(e,f);e=o(h.b,h.c);b(e,f);e=o(h.c,h.a);b(e,f)}else{if(h instanceof THREE.Face4){e=o(h.a,h.b);b(e,f);e=o(h.b,h.c);b(e,f);e=o(h.c,h.d);b(e,f);e=o(h.d,h.a);b(e,f)}}}return r};THREE.SubdivisionModifier.prototype.smooth=function(ah){var C=[],k=[],a=[];function K(f,j,i){C.push(new THREE.Vector3(f,j,i))}var an=this;var ao=THREE.GeometryUtils.orderedKey;var c=THREE.GeometryUtils.computeEdgeFaces;function q(){if(an.debug&&console&&console.assert){console.assert.apply(console,arguments)}}function s(){if(an.debug){console.log.apply(console,arguments)}}function aB(){if(console){console.log.apply(console,arguments)}}function r(aM,aL,aI,aH,aJ,v,aG){var f=new THREE.Face4(aM,aL,aI,aH,null,aJ.color,aJ.materialIndex);if(an.useOldVertexColors){f.vertexColors=[];var u,aK,n;for(var aF=0;aF<4;aF++){n=v[aF];u=new THREE.Color(),u.setRGB(0,0,0);for(var R=0,aE=0;R<n.length;R++){aK=aJ.vertexColors[n[R]-1];u.r+=aK.r;u.g+=aK.g;u.b+=aK.b}u.r/=n.length;u.g/=n.length;u.b/=n.length;f.vertexColors[aF]=u}}k.push(f);if(an.supportUVs){var F=[I(aM,""),I(aL,aG),I(aI,aG),I(aH,aG)];if(!F[0]){s("a :( ",aM+":"+aG)}else{if(!F[1]){s("b :( ",aL+":"+aG)}else{if(!F[2]){s("c :( ",aI+":"+aG)}else{if(!F[3]){s("d :( ",aH+":"+aG)}else{a.push(F)}}}}}}var au=ah.vertices;var aa=ah.faces;var h=au.length;var ay=au.concat();var aA=[],al={};var G={},w=[];var d={};function P(){console.log("facePoints",aA,"edgePoints",al);console.log("edgeFaceMap",e,"vertexEdgeMap",O)}function I(F,f){var i,u;var n=F+":"+f;var v=d[n];if(!v){if(F>=h&&F<(h+aa.length)){s("face pt")}else{s("edge pt")}aB("warning, UV not found for",n);return null}return v}function az(n,f,j){var i=n+":"+f;if(!(i in d)){d[i]=j}else{aB("dup vertexNo",n,"oldFaceNo",f,"value",j,"key",i,d[i])}}var T,M,S,x,b;var ae=ah.faceVertexUvs[0];var ax="abcd",D;s("originalFaces, uvs, originalVerticesLength",aa.length,ae.length,h);if(an.supportUVs){for(T=0,M=ae.length;T<M;T++){for(S=0,x=ae[T].length;S<x;S++){D=aa[T][ax.charAt(S)];az(D,T,ae[T][S])}}}if(ae.length==0){an.supportUVs=false}var am=0;for(var L in d){am++}if(!am){an.supportUVs=false;s("no uvs")}var p;for(T=0,M=aa.length;T<M;T++){b=aa[T];aA.push(b.centroid);ay.push(b.centroid);if(!an.supportUVs){continue}p=new THREE.UV();if(b instanceof THREE.Face3){p.u=I(b.a,T).u+I(b.b,T).u+I(b.c,T).u;p.v=I(b.a,T).v+I(b.b,T).v+I(b.c,T).v;p.u/=3;p.v/=3}else{if(b instanceof THREE.Face4){p.u=I(b.a,T).u+I(b.b,T).u+I(b.c,T).u+I(b.d,T).u;p.v=I(b.a,T).v+I(b.b,T).v+I(b.c,T).v+I(b.d,T).v;p.u/=4;p.v/=4}}az(h+T,"",p)}var e=c(ah);var z,aw,av,A;var ab=0;var aC,o,m;var O={};var ad={};function N(i,f){if(O[i]===undefined){O[i]=[]}O[i].push(f)}function ac(j,i,f){if(ad[j]===undefined){ad[j]={}}ad[j][i]=f}for(T in e){z=e[T];aC=T.split("_");o=aC[0];m=aC[1];N(o,[o,m]);N(m,[o,m]);for(S=0,x=z.length;S<x;S++){b=z[S];ac(o,b,T);ac(m,b,T)}if(z.length<2){G[T]=true;w[o]=true;w[m]=true}}for(T in e){z=e[T];aw=z[0];av=z[1];aC=T.split("_");o=aC[0];m=aC[1];A=new THREE.Vector3();q(z.length>0,"an edge without faces?!");if(z.length==1){A.addSelf(au[o]);A.addSelf(au[m]);A.multiplyScalar(0.5);w[ay.length]=true}else{A.addSelf(aA[aw]);A.addSelf(aA[av]);A.addSelf(au[o]);A.addSelf(au[m]);A.multiplyScalar(0.25)}al[T]=h+aa.length+ab;ay.push(A);ab++;if(!an.supportUVs){continue}p=new THREE.UV();p.u=I(o,aw).u+I(m,aw).u;p.v=I(o,aw).v+I(m,aw).v;p.u/=2;p.v/=2;az(al[T],aw,p);if(z.length>=2){q(z.length==2,"did we plan for more than 2 edges?");p=new THREE.UV();p.u=I(o,av).u+I(m,av).u;p.v=I(o,av).v+I(m,av).v;p.u/=2;p.v/=2;az(al[T],av,p)}}s("-- Step 2 done");var U,at;var ap,ai,V,B,X;var H=["123","12","2","23"];var y=["123","23","3","31"];var ar=["123","31","1","12"];var Z=["1234","12","2","23"];var E=["1234","23","3","34"];var aq=["1234","34","4","41"];var aD=["1234","41","1","12"];for(T=0,M=aA.length;T<M;T++){U=aA[T];b=aa[T];at=h+T;if(b instanceof THREE.Face3){ap=ao(b.a,b.b);ai=ao(b.b,b.c);X=ao(b.c,b.a);r(at,al[ap],b.b,al[ai],b,H,T);r(at,al[ai],b.c,al[X],b,y,T);r(at,al[X],b.a,al[ap],b,ar,T)}else{if(b instanceof THREE.Face4){ap=ao(b.a,b.b);ai=ao(b.b,b.c);V=ao(b.c,b.d);B=ao(b.d,b.a);r(at,al[ap],b.b,al[ai],b,Z,T);r(at,al[ai],b.c,al[V],b,E,T);r(at,al[V],b.d,al[B],b,aq,T);r(at,al[B],b.a,al[ap],b,aD,T)}else{s("face should be a face!",b)}}}C=ay;var aj=new THREE.Vector3();var af=new THREE.Vector3();var Q;for(T=0,M=au.length;T<M;T++){if(O[T]===undefined){continue}aj.set(0,0,0);af.set(0,0,0);var g=new THREE.Vector3(0,0,0);var W=0;for(S in ad[T]){aj.addSelf(aA[S]);W++}var ak=0;Q=O[T].length;var ag=W!=Q;for(S=0;S<Q;S++){if(G[ao(O[T][S][0],O[T][S][1])]){ak++}}aj.divideScalar(W);var l=0;if(ag){var t;for(S=0;S<Q;S++){z=O[T][S];t=e[ao(z[0],z[1])].length==1;if(t){var Y=au[z[0]].clone().addSelf(au[z[1]]).divideScalar(2);af.addSelf(Y);l++}}af.divideScalar(4);q(l==2,"should have only 2 boundary edges")}else{for(S=0;S<Q;S++){z=O[T][S];var Y=au[z[0]].clone().addSelf(au[z[1]]).divideScalar(2);af.addSelf(Y)}af.divideScalar(Q)}g.addSelf(au[T]);if(ag){g.divideScalar(2);g.addSelf(af)}else{g.multiplyScalar(Q-3);g.addSelf(aj);g.addSelf(af.multiplyScalar(2));g.divideScalar(Q)}C[T]=g}var J=ah;J.vertices=C;J.faces=k;J.faceVertexUvs[0]=a;delete J.__tmpVertices;J.computeCentroids();J.computeFaceNormals();J.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(d,b,e,c,a){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3();this.customUpdateCallback=undefined;if(d!==undefined){this.add(d,b,e,c,a)}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(e,c,f,d,a,b){if(c===undefined){c=-1}if(f===undefined){f=0}if(b===undefined){b=1}if(a===undefined){a=new THREE.Color(16777215)}if(d===undefined){d=THREE.NormalBlending}f=Math.min(f,Math.max(0,f));this.lensFlares.push({texture:e,size:c,distance:f,x:0,y:0,z:0,scale:1,rotation:1,opacity:b,color:a,blending:d})};THREE.LensFlare.prototype.updateLensFlares=function(){var d,c=this.lensFlares.length;var b;var a=-this.positionScreen.x*2;var e=-this.positionScreen.y*2;for(d=0;d<c;d++){b=this.lensFlares[d];b.x=this.positionScreen.x+a*b.distance;b.y=this.positionScreen.y+e*b.distance;b.wantedRotation=b.x*Math.PI*0.25;b.rotation+=(b.wantedRotation-b.rotation)*0.25}};THREE.MorphBlendMesh=function(g,d){THREE.Mesh.call(this,g,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;var b="__default";var c=0;var a=f-1;var e=f/1;this.createAnimation(b,c,a,e);this.setAnimationWeight(b,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(b,e,a,d){var c={startFrame:e,endFrame:a,length:a-e+1,fps:d,duration:(a-e)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[b]=c;this.animationsList.push(c)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(c){var j=/([a-z]+)(\d+)/;var b,g={};var k=this.geometry;for(var d=0,l=k.morphTargets.length;d<l;d++){var m=k.morphTargets[d];var h=m.name.match(j);if(h&&h.length>1){var a=h[1];var f=h[2];if(!g[a]){g[a]={start:Infinity,end:-Infinity}}var e=g[a];if(d<e.start){e.start=d}if(d>e.end){e.end=d}if(!b){b=a}}}for(var a in g){var e=g[a];this.createAnimation(a,e.start,e.end,c)}this.firstAnimation=b};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];if(b){b.direction=1;b.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];if(b){b.direction=-1;b.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,c){var b=this.animationsMap[a];if(b){b.fps=c;b.duration=(b.end-b.start)/b.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,c){var b=this.animationsMap[a];if(b){b.duration=c;b.fps=(b.end-b.start)/b.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,c){var b=this.animationsMap[a];if(b){b.weight=c}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,c){var b=this.animationsMap[a];if(b){b.time=c}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var c=0;var b=this.animationsMap[a];if(b){c=b.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var c=-1;var b=this.animationsMap[a];if(b){c=b.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else{console.warn("animation["+a+"] undefined")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];if(b){b.active=false}};THREE.MorphBlendMesh.prototype.update=function(h){for(var c=0,a=this.animationsList.length;c<a;c++){var g=this.animationsList[c];if(!g.active){continue}var e=g.duration/g.length;g.time+=g.direction*h;if(g.mirroredLoop){if(g.time>g.duration||g.time<0){g.direction*=-1;if(g.time>g.duration){g.time=g.duration;g.directionBackwards=true}if(g.time<0){g.time=0;g.directionBackwards=false}}}else{g.time=g.time%g.duration;if(g.time<0){g.time+=g.duration}}var b=g.startFrame+THREE.Math.clamp(Math.floor(g.time/e),0,g.length-1);var f=g.weight;if(b!==g.currentFrame){this.morphTargetInfluences[g.lastFrame]=0;this.morphTargetInfluences[g.currentFrame]=1*f;this.morphTargetInfluences[b]=0;g.lastFrame=g.currentFrame;g.currentFrame=b}var d=(g.time%e)/e;if(g.directionBackwards){d=1-d}this.morphTargetInfluences[g.currentFrame]=d*f;this.morphTargetInfluences[g.lastFrame]=(1-d)*f}};THREE.LensFlarePlugin=function(){var b,c,d={};this.init=function(f){b=f.context;c=f;d.vertices=new Float32Array(8+8);d.faces=new Uint16Array(6);var e=0;d.vertices[e++]=-1;d.vertices[e++]=-1;d.vertices[e++]=0;d.vertices[e++]=0;d.vertices[e++]=1;d.vertices[e++]=-1;d.vertices[e++]=1;d.vertices[e++]=0;d.vertices[e++]=1;d.vertices[e++]=1;d.vertices[e++]=1;d.vertices[e++]=1;d.vertices[e++]=-1;d.vertices[e++]=1;d.vertices[e++]=0;d.vertices[e++]=1;e=0;d.faces[e++]=0;d.faces[e++]=1;d.faces[e++]=2;d.faces[e++]=0;d.faces[e++]=2;d.faces[e++]=3;d.vertexBuffer=b.createBuffer();d.elementBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,d.vertexBuffer);b.bufferData(b.ARRAY_BUFFER,d.vertices,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,d.elementBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,d.faces,b.STATIC_DRAW);d.tempTexture=b.createTexture();d.occlusionTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,d.tempTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,d.occlusionTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);if(b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){d.hasVertexTexture=false;d.program=a(THREE.ShaderFlares.lensFlare)}else{d.hasVertexTexture=true;d.program=a(THREE.ShaderFlares.lensFlareVertexTexture)}d.attributes={};d.uniforms={};d.attributes.vertex=b.getAttribLocation(d.program,"position");d.attributes.uv=b.getAttribLocation(d.program,"uv");d.uniforms.renderType=b.getUniformLocation(d.program,"renderType");d.uniforms.map=b.getUniformLocation(d.program,"map");d.uniforms.occlusionMap=b.getUniformLocation(d.program,"occlusionMap");d.uniforms.opacity=b.getUniformLocation(d.program,"opacity");d.uniforms.color=b.getUniformLocation(d.program,"color");d.uniforms.scale=b.getUniformLocation(d.program,"scale");d.uniforms.rotation=b.getUniformLocation(d.program,"rotation");d.uniforms.screenPosition=b.getUniformLocation(d.program,"screenPosition");d.attributesEnabled=false};this.render=function(x,u,q,e){var m=x.__webglFlares,z=m.length;if(!z){return}var v=new THREE.Vector3();var g=e/q,w=q*0.5,p=e*0.5;var n=16/e,A=new THREE.Vector2(n*g,n);var l=new THREE.Vector3(1,1,0),k=new THREE.Vector2(1,1);var y=d.uniforms,h=d.attributes;b.useProgram(d.program);if(!d.attributesEnabled){b.enableVertexAttribArray(d.attributes.vertex);b.enableVertexAttribArray(d.attributes.uv);d.attributesEnabled=true}b.uniform1i(y.occlusionMap,0);b.uniform1i(y.map,1);b.bindBuffer(b.ARRAY_BUFFER,d.vertexBuffer);b.vertexAttribPointer(h.vertex,2,b.FLOAT,false,2*8,0);b.vertexAttribPointer(h.uv,2,b.FLOAT,false,2*8,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,d.elementBuffer);b.disable(b.CULL_FACE);b.depthMask(false);var s,r,t,f,o;for(s=0;s<z;s++){n=16/e;A.set(n*g,n);f=m[s];v.set(f.matrixWorld.elements[12],f.matrixWorld.elements[13],f.matrixWorld.elements[14]);u.matrixWorldInverse.multiplyVector3(v);u.projectionMatrix.multiplyVector3(v);l.copy(v);k.x=l.x*w+w;k.y=l.y*p+p;if(d.hasVertexTexture||(k.x>0&&k.x<q&&k.y>0&&k.y<e)){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,d.tempTexture);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,k.x-8,k.y-8,16,16,0);b.uniform1i(y.renderType,0);b.uniform2f(y.scale,A.x,A.y);b.uniform3f(y.screenPosition,l.x,l.y,l.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,d.occlusionTexture);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,k.x-8,k.y-8,16,16,0);b.uniform1i(y.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,d.tempTexture);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);f.positionScreen.copy(l);if(f.customUpdateCallback){f.customUpdateCallback(f)}else{f.updateLensFlares()}b.uniform1i(y.renderType,2);b.enable(b.BLEND);for(r=0,t=f.lensFlares.length;r<t;r++){o=f.lensFlares[r];if(o.opacity>0.001&&o.scale>0.001){l.x=o.x;l.y=o.y;l.z=o.z;n=o.size*o.scale/e;A.x=n*g;A.y=n;b.uniform3f(y.screenPosition,l.x,l.y,l.z);b.uniform2f(y.scale,A.x,A.y);b.uniform1f(y.rotation,o.rotation);b.uniform1f(y.opacity,o.opacity);b.uniform3f(y.color,o.color.r,o.color.g,o.color.b);c.setBlending(o.blending,o.blendEquation,o.blendSrc,o.blendDst);c.setTexture(o.texture,1);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)};function a(g){var f=b.createProgram();var e=b.createShader(b.FRAGMENT_SHADER);var h=b.createShader(b.VERTEX_SHADER);b.shaderSource(e,g.fragmentShader);b.shaderSource(h,g.vertexShader);b.compileShader(e);b.compileShader(h);b.attachShader(f,e);b.attachShader(f,h);b.linkProgram(f);return f}};THREE.ShadowMapPlugin=function(){var a,j,m,e,b,k,l=new THREE.Frustum(),c=new THREE.Matrix4(),h=new THREE.Vector3(),n=new THREE.Vector3();this.init=function(q){a=q.context;j=q;var o=THREE.ShaderLib.depthRGBA;var p=THREE.UniformsUtils.clone(o.uniforms);m=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:p});e=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:p,morphTargets:true});b=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:p,skinning:true});k=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:p,morphTargets:true,skinning:true});m._shadowPass=true;e._shadowPass=true;b._shadowPass=true;k._shadowPass=true};this.render=function(p,o){if(!(j.shadowMapEnabled&&j.shadowMapAutoUpdate)){return}this.update(p,o)};this.update=function(L,J){var I,x,H,K,C,s,M,O,w,G,A,p,P,u,y,N=[],F=0,o=null;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);if(j.shadowMapCullFrontFaces){a.cullFace(a.FRONT)}else{a.cullFace(a.BACK)}j.setDepthTest(true);for(I=0,x=L.__lights.length;I<x;I++){u=L.__lights[I];if(!u.castShadow){continue}if((u instanceof THREE.DirectionalLight)&&u.shadowCascade){for(C=0;C<u.shadowCascadeCount;C++){var t;if(!u.shadowCascadeArray[C]){t=d(u,C);t.originalCamera=J;var E=new THREE.Gyroscope();E.position=u.shadowCascadeOffset;E.add(t);E.add(t.target);J.add(E);u.shadowCascadeArray[C]=t;console.log("Created virtualLight",t)}else{t=u.shadowCascadeArray[C]}g(u,C);N[F]=t;F++}}else{N[F]=u;F++}}for(I=0,x=N.length;I<x;I++){u=N[I];if(!u.shadowMap){var D={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};u.shadowMap=new THREE.WebGLRenderTarget(u.shadowMapWidth,u.shadowMapHeight,D);u.shadowMapSize=new THREE.Vector2(u.shadowMapWidth,u.shadowMapHeight);u.shadowMatrix=new THREE.Matrix4()}if(!u.shadowCamera){if(u instanceof THREE.SpotLight){u.shadowCamera=new THREE.PerspectiveCamera(u.shadowCameraFov,u.shadowMapWidth/u.shadowMapHeight,u.shadowCameraNear,u.shadowCameraFar)}else{if(u instanceof THREE.DirectionalLight){u.shadowCamera=new THREE.OrthographicCamera(u.shadowCameraLeft,u.shadowCameraRight,u.shadowCameraTop,u.shadowCameraBottom,u.shadowCameraNear,u.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}L.add(u.shadowCamera);if(j.autoUpdateScene){L.updateMatrixWorld()}}if(u.shadowCameraVisible&&!u.cameraHelper){u.cameraHelper=new THREE.CameraHelper(u.shadowCamera);u.shadowCamera.add(u.cameraHelper)}if(u.isVirtual&&t.originalCamera==J){i(J,u)}s=u.shadowMap;M=u.shadowMatrix;O=u.shadowCamera;O.position.copy(u.matrixWorld.getPosition());O.lookAt(u.target.matrixWorld.getPosition());O.updateMatrixWorld();O.matrixWorldInverse.getInverse(O.matrixWorld);if(u.cameraHelper){u.cameraHelper.visible=u.shadowCameraVisible}if(u.shadowCameraVisible){u.cameraHelper.update()}M.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);M.multiplySelf(O.projectionMatrix);M.multiplySelf(O.matrixWorldInverse);if(!O._viewMatrixArray){O._viewMatrixArray=new Float32Array(16)}if(!O._projectionMatrixArray){O._projectionMatrixArray=new Float32Array(16)}O.matrixWorldInverse.flattenToArray(O._viewMatrixArray);O.projectionMatrix.flattenToArray(O._projectionMatrixArray);c.multiply(O.projectionMatrix,O.matrixWorldInverse);l.setFromMatrix(c);j.setRenderTarget(s);j.clear();y=L.__webglObjects;for(H=0,K=y.length;H<K;H++){p=y[H];P=p.object;p.render=false;if(P.visible&&P.castShadow){if(!(P instanceof THREE.Mesh)||!(P.frustumCulled)||l.contains(P)){P._modelViewMatrix.multiply(O.matrixWorldInverse,P.matrixWorld);p.render=true}}}var r,v,z;for(H=0,K=y.length;H<K;H++){p=y[H];if(p.render){P=p.object;G=p.buffer;r=f(P);v=P.geometry.morphTargets.length>0&&r.morphTargets;z=P instanceof THREE.SkinnedMesh&&r.skinning;if(P.customDepthMaterial){A=P.customDepthMaterial}else{if(z){A=v?k:b}else{if(v){A=e}else{A=m}}}if(G instanceof THREE.BufferGeometry){j.renderBufferDirect(O,L.__lights,o,A,G,P)}else{j.renderBuffer(O,L.__lights,o,A,G,P)}}}y=L.__webglObjectsImmediate;for(H=0,K=y.length;H<K;H++){p=y[H];P=p.object;if(P.visible&&P.castShadow){P._modelViewMatrix.multiply(O.matrixWorldInverse,P.matrixWorld);j.renderImmediateObject(O,L.__lights,o,m,P)}}}var q=j.getClearColor(),B=j.getClearAlpha();a.clearColor(q.r,q.g,q.b,B);a.enable(a.BLEND);if(j.shadowMapCullFrontFaces){a.cullFace(a.BACK)}};function d(p,r){var o=new THREE.DirectionalLight();o.isVirtual=true;o.onlyShadow=true;o.castShadow=true;o.shadowCameraNear=p.shadowCameraNear;o.shadowCameraFar=p.shadowCameraFar;o.shadowCameraLeft=p.shadowCameraLeft;o.shadowCameraRight=p.shadowCameraRight;o.shadowCameraBottom=p.shadowCameraBottom;o.shadowCameraTop=p.shadowCameraTop;o.shadowCameraVisible=p.shadowCameraVisible;o.shadowDarkness=p.shadowDarkness;o.shadowBias=p.shadowCascadeBias[r];o.shadowMapWidth=p.shadowCascadeWidth[r];o.shadowMapHeight=p.shadowCascadeHeight[r];o.pointsWorld=[];o.pointsFrustum=[];var u=o.pointsWorld,q=o.pointsFrustum;for(var t=0;t<8;t++){u[t]=new THREE.Vector3();q[t]=new THREE.Vector3()}var v=p.shadowCascadeNearZ[r];var s=p.shadowCascadeFarZ[r];q[0].set(-1,-1,v);q[1].set(1,-1,v);q[2].set(-1,1,v);q[3].set(1,1,v);q[4].set(-1,-1,s);q[5].set(1,-1,s);q[6].set(-1,1,s);q[7].set(1,1,s);return o}function g(p,r){var o=p.shadowCascadeArray[r];o.position.copy(p.position);o.target.position.copy(p.target.position);o.lookAt(o.target);o.shadowCameraVisible=p.shadowCameraVisible;o.shadowDarkness=p.shadowDarkness;o.shadowBias=p.shadowCascadeBias[r];var t=p.shadowCascadeNearZ[r];var s=p.shadowCascadeFarZ[r];var q=o.pointsFrustum;q[0].z=t;q[1].z=t;q[2].z=t;q[3].z=t;q[4].z=s;q[5].z=s;q[6].z=s;q[7].z=s}function i(s,o){var u=o.shadowCamera,q=o.pointsFrustum,t=o.pointsWorld;h.set(Infinity,Infinity,Infinity);n.set(-Infinity,-Infinity,-Infinity);for(var r=0;r<8;r++){var v=t[r];v.copy(q[r]);THREE.ShadowMapPlugin.__projector.unprojectVector(v,s);u.matrixWorldInverse.multiplyVector3(v);if(v.x<h.x){h.x=v.x}if(v.x>n.x){n.x=v.x}if(v.y<h.y){h.y=v.y}if(v.y>n.y){n.y=v.y}if(v.z<h.z){h.z=v.z}if(v.z>n.z){n.z=v.z}}u.left=h.x;u.right=n.x;u.top=n.y;u.bottom=h.y;u.updateProjectionMatrix()}function f(o){return o.material instanceof THREE.MeshFaceMaterial?o.geometry.materials[0]:o.material}};THREE.ShadowMapPlugin.__projector=new THREE.Projector();THREE.SpritePlugin=function(){var b,d,c={};this.init=function(g){b=g.context;d=g;c.vertices=new Float32Array(8+8);c.faces=new Uint16Array(6);var f=0;c.vertices[f++]=-1;c.vertices[f++]=-1;c.vertices[f++]=0;c.vertices[f++]=0;c.vertices[f++]=1;c.vertices[f++]=-1;c.vertices[f++]=1;c.vertices[f++]=0;c.vertices[f++]=1;c.vertices[f++]=1;c.vertices[f++]=1;c.vertices[f++]=1;c.vertices[f++]=-1;c.vertices[f++]=1;c.vertices[f++]=0;c.vertices[f++]=1;f=0;c.faces[f++]=0;c.faces[f++]=1;c.faces[f++]=2;c.faces[f++]=0;c.faces[f++]=2;c.faces[f++]=3;c.vertexBuffer=b.createBuffer();c.elementBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,c.vertexBuffer);b.bufferData(b.ARRAY_BUFFER,c.vertices,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c.elementBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,c.faces,b.STATIC_DRAW);c.program=a(THREE.ShaderSprite.sprite);c.attributes={};c.uniforms={};c.attributes.position=b.getAttribLocation(c.program,"position");c.attributes.uv=b.getAttribLocation(c.program,"uv");c.uniforms.uvOffset=b.getUniformLocation(c.program,"uvOffset");c.uniforms.uvScale=b.getUniformLocation(c.program,"uvScale");c.uniforms.rotation=b.getUniformLocation(c.program,"rotation");c.uniforms.scale=b.getUniformLocation(c.program,"scale");c.uniforms.alignment=b.getUniformLocation(c.program,"alignment");c.uniforms.color=b.getUniformLocation(c.program,"color");c.uniforms.map=b.getUniformLocation(c.program,"map");c.uniforms.opacity=b.getUniformLocation(c.program,"opacity");c.uniforms.useScreenCoordinates=b.getUniformLocation(c.program,"useScreenCoordinates");c.uniforms.affectedByDistance=b.getUniformLocation(c.program,"affectedByDistance");c.uniforms.screenPosition=b.getUniformLocation(c.program,"screenPosition");c.uniforms.modelViewMatrix=b.getUniformLocation(c.program,"modelViewMatrix");c.uniforms.projectionMatrix=b.getUniformLocation(c.program,"projectionMatrix");c.attributesEnabled=false};this.render=function(j,p,o,k){var q=j.__webglSprites,l=q.length;if(!l){return}var g=c.attributes,t=c.uniforms;var s=k/o;var n=o*0.5,r=k*0.5;var v=true;b.useProgram(c.program);if(!c.attributesEnabled){b.enableVertexAttribArray(g.position);b.enableVertexAttribArray(g.uv);c.attributesEnabled=true}b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(true);b.bindBuffer(b.ARRAY_BUFFER,c.vertexBuffer);b.vertexAttribPointer(g.position,2,b.FLOAT,false,2*8,0);b.vertexAttribPointer(g.uv,2,b.FLOAT,false,2*8,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c.elementBuffer);b.uniformMatrix4fv(t.projectionMatrix,false,p._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(t.map,0);var h,u,m,w,f=[];for(h=0;h<l;h++){u=q[h];if(!u.visible||u.opacity===0){continue}if(!u.useScreenCoordinates){u._modelViewMatrix.multiply(p.matrixWorldInverse,u.matrixWorld);u.z=-u._modelViewMatrix.elements[14]}else{u.z=-u.position.z}}q.sort(e);for(h=0;h<l;h++){u=q[h];if(!u.visible||u.opacity===0){continue}if(u.map&&u.map.image&&u.map.image.width){if(u.useScreenCoordinates){b.uniform1i(t.useScreenCoordinates,1);b.uniform3f(t.screenPosition,(u.position.x-n)/n,(r-u.position.y)/r,Math.max(0,Math.min(1,u.position.z)))}else{b.uniform1i(t.useScreenCoordinates,0);b.uniform1i(t.affectedByDistance,u.affectedByDistance?1:0);b.uniformMatrix4fv(t.modelViewMatrix,false,u._modelViewMatrix.elements)}w=u.map.image.width/(u.scaleByViewport?k:1);f[0]=w*s*u.scale.x;f[1]=w*u.scale.y;b.uniform2f(t.uvScale,u.uvScale.x,u.uvScale.y);b.uniform2f(t.uvOffset,u.uvOffset.x,u.uvOffset.y);b.uniform2f(t.alignment,u.alignment.x,u.alignment.y);b.uniform1f(t.opacity,u.opacity);b.uniform3f(t.color,u.color.r,u.color.g,u.color.b);b.uniform1f(t.rotation,u.rotation);b.uniform2fv(t.scale,f);if(u.mergeWith3D&&!v){b.enable(b.DEPTH_TEST);v=true}else{if(!u.mergeWith3D&&v){b.disable(b.DEPTH_TEST);v=false}}d.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst);d.setTexture(u.map,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)};function a(h){var g=b.createProgram();var f=b.createShader(b.FRAGMENT_SHADER);var i=b.createShader(b.VERTEX_SHADER);b.shaderSource(f,h.fragmentShader);b.shaderSource(i,h.vertexShader);b.compileShader(f);b.compileShader(i);b.attachShader(g,f);b.attachShader(g,i);b.linkProgram(g);return g}function e(g,f){return f.z-g.z}};THREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var c,f,d,a,b=new THREE.Frustum(),e=new THREE.Matrix4();this.init=function(i){c=i.context;f=i;var g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});a=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true});d._shadowPass=true;a._shadowPass=true};this.render=function(h,g){if(!this.enabled){return}this.update(h,g)};this.update=function(u,w){var q,x,p,r,k,s,o,v,t,l,m,g,h=null;c.clearColor(1,1,1,1);c.disable(c.BLEND);f.setDepthTest(true);if(f.autoUpdateScene){u.updateMatrixWorld()}if(!w._viewMatrixArray){w._viewMatrixArray=new Float32Array(16)}if(!w._projectionMatrixArray){w._projectionMatrixArray=new Float32Array(16)}w.matrixWorldInverse.getInverse(w.matrixWorld);w.matrixWorldInverse.flattenToArray(w._viewMatrixArray);w.projectionMatrix.flattenToArray(w._projectionMatrixArray);e.multiply(w.projectionMatrix,w.matrixWorldInverse);b.setFromMatrix(e);f.setRenderTarget(this.renderTarget);f.clear();g=u.__webglObjects;for(p=0,r=g.length;p<r;p++){t=g[p];l=t.object;t.render=false;if(l.visible){if(!(l instanceof THREE.Mesh)||!(l.frustumCulled)||b.contains(l)){l._modelViewMatrix.multiply(w.matrixWorldInverse,l.matrixWorld);t.render=true}}}for(p=0,r=g.length;p<r;p++){t=g[p];if(t.render){l=t.object;o=t.buffer;if(l.material){f.setMaterialFaces(l.material)}if(l.customDepthMaterial){v=l.customDepthMaterial}else{if(l.geometry.morphTargets.length){v=a}else{v=d}}if(o instanceof THREE.BufferGeometry){f.renderBufferDirect(w,u.__lights,h,v,o,l)}else{f.renderBuffer(w,u.__lights,h,v,o,l)}}}g=u.__webglObjectsImmediate;for(p=0,r=g.length;p<r;p++){t=g[p];l=t.object;if(l.visible&&l.castShadow){l._modelViewMatrix.multiply(w.matrixWorldInverse,l.matrixWorld);f.renderImmediateObject(w,u.__lights,h,d,l)}}var z=f.getClearColor(),y=f.getClearAlpha();c.clearColor(z.r,z.g,z.b,y);c.enable(c.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform int renderType;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform sampler2D map;","uniform float opacity;","uniform int renderType;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform int renderType;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform int renderType;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int affectedByDistance;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["precision mediump float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","}"].join("\n")}};